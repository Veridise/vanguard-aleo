addr0r1intor2;
abs r0 into r1;
abs.w r0 into r1;
add r0 r1 into r2;
add.w r0 r1 into r2;
and r0 r1 into r2;
assert.eq r0 r1;
assert.neq r0 r1;
assert.eq block.height block.height;
call foo;
call foo r0;
call foo r0 into r1;
call foo.aleo/bar;
call foo.aleo/bar r0 r1;
call foo.aleo/bar r0 r1 into r2 r3;
commit.bhp256 r0 r1 into r2 as address;
commit.bhp512 r0 r1 into r2 as field;
commit.bhp768 r0 r1 into r2 as group;
commit.bhp1024 r0 r1 into r2 as field;
commit.ped64 r0 r1 into r2 as address;
commit.ped128 r0 r1 into r2 as group;
div r0 r1 into r2;
div.w r0 r1 into r2;
double r0 into r1;
gt r0 r1 into r2;
gte r0 r1 into r2;
hash.bhp256 r0 into r1 as u8;
hash.bhp512 r0 into r1 as i64;
hash.bhp768 r0 into r1 as scalar;
hash.bhp1024 r0 into r1 as address;
hash.ped64 r0 into r1 as i32;
hash.ped128 r0 into r1 as u32;
hash.psd2 r0 into r1 as scalar;
hash.psd4 r0 into r1 as group;
hash.psd8 r0 into r1 as address;
hash_many.psd2 r1 r2 into r3 as field;
inv r0 into r1;
is.eq r0 r1 into r2;
is.neq r0 r1 into r2;
lt r0 r1 into r2;
lte r0 r1 into r2;
mod r0 r1 into r2;
mul r0 r1 into r2;
mul.w r0 r1 into r2;
nand r0 r1 into r2;
neg r0 into r1;
nor r0 r1 into r2;
not r0 into r1;
or r0 r1 into r2;
pow r0 r1 into r2;
pow.w r0 r1 into r2;
rem r0 r1 into r2;
rem.w r0 r1 into r2;
sign.verify r0 r1 r2 into r3;
shl r0 r1 into r2;
shl.w r0 r1 into r2;
shr r0 r1 into r2;
shr.w r0 r1 into r2;
square r0 into r1;
sqrt r0 into r1;
sub r0 r1 into r2;
sub.w r0 r1 into r2;
ternary r0 r1 r2 into r3;
xor r0 r1 into r2;
