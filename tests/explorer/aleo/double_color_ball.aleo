program double_color_ball.aleo;

struct PrizePool:
    money as u64;
    current_round as u32;
    current_round_status as u8;
    current_round_num as u32;

struct LotteryDrawing:
    round_number as u32;
    red_ball_1 as u32;
    red_ball_2 as u32;
    red_ball_3 as u32;
    red_ball_4 as u32;
    red_ball_5 as u32;
    red_ball_6 as u32;
    blue_ball_1 as u32;

struct TicketPurchaseInfo:
    user as address;
    round_number as u32;
    count as u32;
    gates as u64;
    red_ball_1 as u32;
    red_ball_2 as u32;
    red_ball_3 as u32;
    red_ball_4 as u32;
    red_ball_5 as u32;
    red_ball_6 as u32;
    blue_ball_1 as u32;

struct TicketPurchasePriceInfo:
    user as address;
    round_number as u32;
    count as u32;
    gates as u64;
    red_ball_1 as u32;
    red_ball_2 as u32;
    red_ball_3 as u32;
    red_ball_4 as u32;
    red_ball_5 as u32;
    red_ball_6 as u32;
    blue_ball_1 as u32;
    reward as u64;
    index as u32;

struct WiningList:
    first as TicketPurchasePriceInfo;
    second as TicketPurchasePriceInfo;

mapping currentPrizePoolMap:
    key as u8.public;
    value as PrizePool.public;

mapping lotteryDrawingMap:
    key as u32.public;
    value as LotteryDrawing.public;

mapping ticketPurchaseMap:
    key as u32.public;
    value as TicketPurchaseInfo.public;

mapping winningListMap:
    key as u32.public;
    value as WiningList.public;

function new_round_lottery_drawing:
    input r0 as u32.private;
    async new_round_lottery_drawing self.caller into r1;
    output r1 as double_color_ball.aleo/new_round_lottery_drawing.future;

finalize new_round_lottery_drawing:
    input r0 as address.public;
    cast 0u64 0u32 0u8 0u32 into r1 as PrizePool;
    get.or_use currentPrizePoolMap[1u8] r1 into r2;
    is.neq r2.current_round 0u32 into r3;
    is.neq r2.current_round_status 3u8 into r4;
    and r3 r4 into r5;
    not r5 into r6;
    is.eq 0u8 1u8 into r7;
    or r6 r7 into r8;
    assert.eq r8 true ;
    add r2.current_round 1u32 into r9;
    cast r2.money r9 1u8 0u32 into r10 as PrizePool;
    set r10 into currentPrizePoolMap[1u8];

function ticket_purchase:
    input r0 as TicketPurchaseInfo.private;
    async ticket_purchase r0 into r1;
    output r1 as double_color_ball.aleo/ticket_purchase.future;

finalize ticket_purchase:
    input r0 as TicketPurchaseInfo.public;
    cast 0u64 0u32 0u8 0u32 into r1 as PrizePool;
    get.or_use currentPrizePoolMap[1u8] r1 into r2;
    is.neq r2.current_round r0.round_number into r3;
    is.neq r2.current_round_status 1u8 into r4;
    or r3 r4 into r5;
    not r5 into r6;
    is.eq 0u8 1u8 into r7;
    or r6 r7 into r8;
    assert.eq r8 true ;
    add r2.money r0.gates into r9;
    add r2.current_round_num 1u32 into r10;
    cast r9 r2.current_round r2.current_round_status r10 into r11 as PrizePool;
    set r11 into currentPrizePoolMap[1u8];
    cast r0.user r2.current_round r0.count r0.gates r0.red_ball_1 r0.red_ball_2 r0.red_ball_3 r0.red_ball_4 r0.red_ball_5 r0.red_ball_6 r0.blue_ball_1 into r12 as TicketPurchaseInfo;
    set r12 into ticketPurchaseMap[r11.current_round_num];

function stop_lottery_drawing:
    input r0 as u32.private;
    async stop_lottery_drawing r0 into r1;
    output r1 as double_color_ball.aleo/stop_lottery_drawing.future;

finalize stop_lottery_drawing:
    input r0 as u32.public;
    get currentPrizePoolMap[1u8] into r1;
    is.neq r1.current_round r0 into r2;
    not r2 into r3;
    is.eq 0u8 1u8 into r4;
    or r3 r4 into r5;
    assert.eq r5 true ;
    cast r1.money r1.current_round 2u8 r1.current_round_num into r6 as PrizePool;
    set r6 into currentPrizePoolMap[1u8];

function draw_price:
    input r0 as u32.private;
    async draw_price r0 self.caller into r1;
    output r1 as double_color_ball.aleo/draw_price.future;

finalize draw_price:
    input r0 as u32.public;
    input r1 as address.public;
    get currentPrizePoolMap[1u8] into r2;
    is.neq r2.current_round r0 into r3;
    not r3 into r4;
    is.eq 0u8 1u8 into r5;
    or r4 r5 into r6;
    assert.eq r6 true ;
    rand.chacha into r7 as u32;
    not false into r8;
    mod r7 33u32 into r9;
    add r9 1u32 into r10;
    is.eq 0u32 0u32 into r11;
    is.eq 0u32 0u32 into r12;
    is.neq 0u32 r10 into r13;
    and r12 r13 into r14;
    is.eq 0u32 0u32 into r15;
    is.neq 0u32 r10 into r16;
    is.neq 0u32 r10 into r17;
    and r16 r17 into r18;
    and r15 r18 into r19;
    is.eq 0u32 0u32 into r20;
    is.neq 0u32 r10 into r21;
    is.neq 0u32 r10 into r22;
    and r21 r22 into r23;
    is.neq 0u32 r10 into r24;
    and r23 r24 into r25;
    and r20 r25 into r26;
    is.eq 0u32 0u32 into r27;
    is.neq 0u32 r10 into r28;
    is.neq 0u32 r10 into r29;
    and r28 r29 into r30;
    is.neq 0u32 r10 into r31;
    and r30 r31 into r32;
    is.neq 0u32 r10 into r33;
    and r32 r33 into r34;
    and r27 r34 into r35;
    is.eq 0u32 0u32 into r36;
    is.neq 0u32 r10 into r37;
    is.neq 0u32 r10 into r38;
    and r37 r38 into r39;
    is.neq 0u32 r10 into r40;
    and r39 r40 into r41;
    is.neq 0u32 r10 into r42;
    and r41 r42 into r43;
    is.neq 0u32 r10 into r44;
    and r43 r44 into r45;
    and r36 r45 into r46;
    ternary r46 r10 0u32 into r47;
    ternary r46 true false into r48;
    ternary r35 r10 0u32 into r49;
    ternary r35 0u32 r47 into r50;
    ternary r35 false r48 into r51;
    ternary r26 r10 0u32 into r52;
    ternary r26 0u32 r49 into r53;
    ternary r26 0u32 r50 into r54;
    ternary r26 false r51 into r55;
    ternary r19 r10 0u32 into r56;
    ternary r19 0u32 r52 into r57;
    ternary r19 0u32 r53 into r58;
    ternary r19 0u32 r54 into r59;
    ternary r19 false r55 into r60;
    ternary r14 r10 0u32 into r61;
    ternary r14 0u32 r56 into r62;
    ternary r14 0u32 r57 into r63;
    ternary r14 0u32 r58 into r64;
    ternary r14 0u32 r59 into r65;
    ternary r14 false r60 into r66;
    ternary r11 r10 0u32 into r67;
    ternary r11 0u32 r61 into r68;
    ternary r11 0u32 r62 into r69;
    ternary r11 0u32 r63 into r70;
    ternary r11 0u32 r64 into r71;
    ternary r11 0u32 r65 into r72;
    ternary r11 false r66 into r73;
    ternary r8 r67 0u32 into r74;
    ternary r8 r68 0u32 into r75;
    ternary r8 r69 0u32 into r76;
    ternary r8 r70 0u32 into r77;
    ternary r8 r71 0u32 into r78;
    ternary r8 r72 0u32 into r79;
    ternary r8 r73 false into r80;
    rand.chacha into r81 as u32;
    not r80 into r82;
    mod r81 33u32 into r83;
    add r83 1u32 into r84;
    is.eq r74 0u32 into r85;
    is.eq r75 0u32 into r86;
    is.neq r74 r84 into r87;
    and r86 r87 into r88;
    is.eq r76 0u32 into r89;
    is.neq r74 r84 into r90;
    is.neq r75 r84 into r91;
    and r90 r91 into r92;
    and r89 r92 into r93;
    is.eq r77 0u32 into r94;
    is.neq r74 r84 into r95;
    is.neq r75 r84 into r96;
    and r95 r96 into r97;
    is.neq r76 r84 into r98;
    and r97 r98 into r99;
    and r94 r99 into r100;
    is.eq r78 0u32 into r101;
    is.neq r74 r84 into r102;
    is.neq r75 r84 into r103;
    and r102 r103 into r104;
    is.neq r76 r84 into r105;
    and r104 r105 into r106;
    is.neq r77 r84 into r107;
    and r106 r107 into r108;
    and r101 r108 into r109;
    is.eq r79 0u32 into r110;
    is.neq r74 r84 into r111;
    is.neq r75 r84 into r112;
    and r111 r112 into r113;
    is.neq r76 r84 into r114;
    and r113 r114 into r115;
    is.neq r77 r84 into r116;
    and r115 r116 into r117;
    is.neq r78 r84 into r118;
    and r117 r118 into r119;
    and r110 r119 into r120;
    ternary r120 r84 r79 into r121;
    ternary r120 true r80 into r122;
    ternary r109 r84 r78 into r123;
    ternary r109 r79 r121 into r124;
    ternary r109 r80 r122 into r125;
    ternary r100 r84 r77 into r126;
    ternary r100 r78 r123 into r127;
    ternary r100 r79 r124 into r128;
    ternary r100 r80 r125 into r129;
    ternary r93 r84 r76 into r130;
    ternary r93 r77 r126 into r131;
    ternary r93 r78 r127 into r132;
    ternary r93 r79 r128 into r133;
    ternary r93 r80 r129 into r134;
    ternary r88 r84 r75 into r135;
    ternary r88 r76 r130 into r136;
    ternary r88 r77 r131 into r137;
    ternary r88 r78 r132 into r138;
    ternary r88 r79 r133 into r139;
    ternary r88 r80 r134 into r140;
    ternary r85 r84 r74 into r141;
    ternary r85 r75 r135 into r142;
    ternary r85 r76 r136 into r143;
    ternary r85 r77 r137 into r144;
    ternary r85 r78 r138 into r145;
    ternary r85 r79 r139 into r146;
    ternary r85 r80 r140 into r147;
    ternary r82 r141 r74 into r148;
    ternary r82 r142 r75 into r149;
    ternary r82 r143 r76 into r150;
    ternary r82 r144 r77 into r151;
    ternary r82 r145 r78 into r152;
    ternary r82 r146 r79 into r153;
    ternary r82 r147 r80 into r154;
    rand.chacha into r155 as u32;
    not r154 into r156;
    mod r155 33u32 into r157;
    add r157 1u32 into r158;
    is.eq r148 0u32 into r159;
    is.eq r149 0u32 into r160;
    is.neq r148 r158 into r161;
    and r160 r161 into r162;
    is.eq r150 0u32 into r163;
    is.neq r148 r158 into r164;
    is.neq r149 r158 into r165;
    and r164 r165 into r166;
    and r163 r166 into r167;
    is.eq r151 0u32 into r168;
    is.neq r148 r158 into r169;
    is.neq r149 r158 into r170;
    and r169 r170 into r171;
    is.neq r150 r158 into r172;
    and r171 r172 into r173;
    and r168 r173 into r174;
    is.eq r152 0u32 into r175;
    is.neq r148 r158 into r176;
    is.neq r149 r158 into r177;
    and r176 r177 into r178;
    is.neq r150 r158 into r179;
    and r178 r179 into r180;
    is.neq r151 r158 into r181;
    and r180 r181 into r182;
    and r175 r182 into r183;
    is.eq r153 0u32 into r184;
    is.neq r148 r158 into r185;
    is.neq r149 r158 into r186;
    and r185 r186 into r187;
    is.neq r150 r158 into r188;
    and r187 r188 into r189;
    is.neq r151 r158 into r190;
    and r189 r190 into r191;
    is.neq r152 r158 into r192;
    and r191 r192 into r193;
    and r184 r193 into r194;
    ternary r194 r158 r153 into r195;
    ternary r194 true r154 into r196;
    ternary r183 r158 r152 into r197;
    ternary r183 r153 r195 into r198;
    ternary r183 r154 r196 into r199;
    ternary r174 r158 r151 into r200;
    ternary r174 r152 r197 into r201;
    ternary r174 r153 r198 into r202;
    ternary r174 r154 r199 into r203;
    ternary r167 r158 r150 into r204;
    ternary r167 r151 r200 into r205;
    ternary r167 r152 r201 into r206;
    ternary r167 r153 r202 into r207;
    ternary r167 r154 r203 into r208;
    ternary r162 r158 r149 into r209;
    ternary r162 r150 r204 into r210;
    ternary r162 r151 r205 into r211;
    ternary r162 r152 r206 into r212;
    ternary r162 r153 r207 into r213;
    ternary r162 r154 r208 into r214;
    ternary r159 r158 r148 into r215;
    ternary r159 r149 r209 into r216;
    ternary r159 r150 r210 into r217;
    ternary r159 r151 r211 into r218;
    ternary r159 r152 r212 into r219;
    ternary r159 r153 r213 into r220;
    ternary r159 r154 r214 into r221;
    ternary r156 r215 r148 into r222;
    ternary r156 r216 r149 into r223;
    ternary r156 r217 r150 into r224;
    ternary r156 r218 r151 into r225;
    ternary r156 r219 r152 into r226;
    ternary r156 r220 r153 into r227;
    ternary r156 r221 r154 into r228;
    rand.chacha into r229 as u32;
    not r228 into r230;
    mod r229 33u32 into r231;
    add r231 1u32 into r232;
    is.eq r222 0u32 into r233;
    is.eq r223 0u32 into r234;
    is.neq r222 r232 into r235;
    and r234 r235 into r236;
    is.eq r224 0u32 into r237;
    is.neq r222 r232 into r238;
    is.neq r223 r232 into r239;
    and r238 r239 into r240;
    and r237 r240 into r241;
    is.eq r225 0u32 into r242;
    is.neq r222 r232 into r243;
    is.neq r223 r232 into r244;
    and r243 r244 into r245;
    is.neq r224 r232 into r246;
    and r245 r246 into r247;
    and r242 r247 into r248;
    is.eq r226 0u32 into r249;
    is.neq r222 r232 into r250;
    is.neq r223 r232 into r251;
    and r250 r251 into r252;
    is.neq r224 r232 into r253;
    and r252 r253 into r254;
    is.neq r225 r232 into r255;
    and r254 r255 into r256;
    and r249 r256 into r257;
    is.eq r227 0u32 into r258;
    is.neq r222 r232 into r259;
    is.neq r223 r232 into r260;
    and r259 r260 into r261;
    is.neq r224 r232 into r262;
    and r261 r262 into r263;
    is.neq r225 r232 into r264;
    and r263 r264 into r265;
    is.neq r226 r232 into r266;
    and r265 r266 into r267;
    and r258 r267 into r268;
    ternary r268 r232 r227 into r269;
    ternary r268 true r228 into r270;
    ternary r257 r232 r226 into r271;
    ternary r257 r227 r269 into r272;
    ternary r257 r228 r270 into r273;
    ternary r248 r232 r225 into r274;
    ternary r248 r226 r271 into r275;
    ternary r248 r227 r272 into r276;
    ternary r248 r228 r273 into r277;
    ternary r241 r232 r224 into r278;
    ternary r241 r225 r274 into r279;
    ternary r241 r226 r275 into r280;
    ternary r241 r227 r276 into r281;
    ternary r241 r228 r277 into r282;
    ternary r236 r232 r223 into r283;
    ternary r236 r224 r278 into r284;
    ternary r236 r225 r279 into r285;
    ternary r236 r226 r280 into r286;
    ternary r236 r227 r281 into r287;
    ternary r236 r228 r282 into r288;
    ternary r233 r232 r222 into r289;
    ternary r233 r223 r283 into r290;
    ternary r233 r224 r284 into r291;
    ternary r233 r225 r285 into r292;
    ternary r233 r226 r286 into r293;
    ternary r233 r227 r287 into r294;
    ternary r233 r228 r288 into r295;
    ternary r230 r289 r222 into r296;
    ternary r230 r290 r223 into r297;
    ternary r230 r291 r224 into r298;
    ternary r230 r292 r225 into r299;
    ternary r230 r293 r226 into r300;
    ternary r230 r294 r227 into r301;
    ternary r230 r295 r228 into r302;
    rand.chacha into r303 as u32;
    not r302 into r304;
    mod r303 33u32 into r305;
    add r305 1u32 into r306;
    is.eq r296 0u32 into r307;
    is.eq r297 0u32 into r308;
    is.neq r296 r306 into r309;
    and r308 r309 into r310;
    is.eq r298 0u32 into r311;
    is.neq r296 r306 into r312;
    is.neq r297 r306 into r313;
    and r312 r313 into r314;
    and r311 r314 into r315;
    is.eq r299 0u32 into r316;
    is.neq r296 r306 into r317;
    is.neq r297 r306 into r318;
    and r317 r318 into r319;
    is.neq r298 r306 into r320;
    and r319 r320 into r321;
    and r316 r321 into r322;
    is.eq r300 0u32 into r323;
    is.neq r296 r306 into r324;
    is.neq r297 r306 into r325;
    and r324 r325 into r326;
    is.neq r298 r306 into r327;
    and r326 r327 into r328;
    is.neq r299 r306 into r329;
    and r328 r329 into r330;
    and r323 r330 into r331;
    is.eq r301 0u32 into r332;
    is.neq r296 r306 into r333;
    is.neq r297 r306 into r334;
    and r333 r334 into r335;
    is.neq r298 r306 into r336;
    and r335 r336 into r337;
    is.neq r299 r306 into r338;
    and r337 r338 into r339;
    is.neq r300 r306 into r340;
    and r339 r340 into r341;
    and r332 r341 into r342;
    ternary r342 r306 r301 into r343;
    ternary r342 true r302 into r344;
    ternary r331 r306 r300 into r345;
    ternary r331 r301 r343 into r346;
    ternary r331 r302 r344 into r347;
    ternary r322 r306 r299 into r348;
    ternary r322 r300 r345 into r349;
    ternary r322 r301 r346 into r350;
    ternary r322 r302 r347 into r351;
    ternary r315 r306 r298 into r352;
    ternary r315 r299 r348 into r353;
    ternary r315 r300 r349 into r354;
    ternary r315 r301 r350 into r355;
    ternary r315 r302 r351 into r356;
    ternary r310 r306 r297 into r357;
    ternary r310 r298 r352 into r358;
    ternary r310 r299 r353 into r359;
    ternary r310 r300 r354 into r360;
    ternary r310 r301 r355 into r361;
    ternary r310 r302 r356 into r362;
    ternary r307 r306 r296 into r363;
    ternary r307 r297 r357 into r364;
    ternary r307 r298 r358 into r365;
    ternary r307 r299 r359 into r366;
    ternary r307 r300 r360 into r367;
    ternary r307 r301 r361 into r368;
    ternary r307 r302 r362 into r369;
    ternary r304 r363 r296 into r370;
    ternary r304 r364 r297 into r371;
    ternary r304 r365 r298 into r372;
    ternary r304 r366 r299 into r373;
    ternary r304 r367 r300 into r374;
    ternary r304 r368 r301 into r375;
    ternary r304 r369 r302 into r376;
    rand.chacha into r377 as u32;
    not r376 into r378;
    mod r377 33u32 into r379;
    add r379 1u32 into r380;
    is.eq r370 0u32 into r381;
    is.eq r371 0u32 into r382;
    is.neq r370 r380 into r383;
    and r382 r383 into r384;
    is.eq r372 0u32 into r385;
    is.neq r370 r380 into r386;
    is.neq r371 r380 into r387;
    and r386 r387 into r388;
    and r385 r388 into r389;
    is.eq r373 0u32 into r390;
    is.neq r370 r380 into r391;
    is.neq r371 r380 into r392;
    and r391 r392 into r393;
    is.neq r372 r380 into r394;
    and r393 r394 into r395;
    and r390 r395 into r396;
    is.eq r374 0u32 into r397;
    is.neq r370 r380 into r398;
    is.neq r371 r380 into r399;
    and r398 r399 into r400;
    is.neq r372 r380 into r401;
    and r400 r401 into r402;
    is.neq r373 r380 into r403;
    and r402 r403 into r404;
    and r397 r404 into r405;
    is.eq r375 0u32 into r406;
    is.neq r370 r380 into r407;
    is.neq r371 r380 into r408;
    and r407 r408 into r409;
    is.neq r372 r380 into r410;
    and r409 r410 into r411;
    is.neq r373 r380 into r412;
    and r411 r412 into r413;
    is.neq r374 r380 into r414;
    and r413 r414 into r415;
    and r406 r415 into r416;
    ternary r416 r380 r375 into r417;
    ternary r416 true r376 into r418;
    ternary r405 r380 r374 into r419;
    ternary r405 r375 r417 into r420;
    ternary r405 r376 r418 into r421;
    ternary r396 r380 r373 into r422;
    ternary r396 r374 r419 into r423;
    ternary r396 r375 r420 into r424;
    ternary r396 r376 r421 into r425;
    ternary r389 r380 r372 into r426;
    ternary r389 r373 r422 into r427;
    ternary r389 r374 r423 into r428;
    ternary r389 r375 r424 into r429;
    ternary r389 r376 r425 into r430;
    ternary r384 r380 r371 into r431;
    ternary r384 r372 r426 into r432;
    ternary r384 r373 r427 into r433;
    ternary r384 r374 r428 into r434;
    ternary r384 r375 r429 into r435;
    ternary r384 r376 r430 into r436;
    ternary r381 r380 r370 into r437;
    ternary r381 r371 r431 into r438;
    ternary r381 r372 r432 into r439;
    ternary r381 r373 r433 into r440;
    ternary r381 r374 r434 into r441;
    ternary r381 r375 r435 into r442;
    ternary r381 r376 r436 into r443;
    ternary r378 r437 r370 into r444;
    ternary r378 r438 r371 into r445;
    ternary r378 r439 r372 into r446;
    ternary r378 r440 r373 into r447;
    ternary r378 r441 r374 into r448;
    ternary r378 r442 r375 into r449;
    ternary r378 r443 r376 into r450;
    rand.chacha into r451 as u32;
    not r450 into r452;
    mod r451 33u32 into r453;
    add r453 1u32 into r454;
    is.eq r444 0u32 into r455;
    is.eq r445 0u32 into r456;
    is.neq r444 r454 into r457;
    and r456 r457 into r458;
    is.eq r446 0u32 into r459;
    is.neq r444 r454 into r460;
    is.neq r445 r454 into r461;
    and r460 r461 into r462;
    and r459 r462 into r463;
    is.eq r447 0u32 into r464;
    is.neq r444 r454 into r465;
    is.neq r445 r454 into r466;
    and r465 r466 into r467;
    is.neq r446 r454 into r468;
    and r467 r468 into r469;
    and r464 r469 into r470;
    is.eq r448 0u32 into r471;
    is.neq r444 r454 into r472;
    is.neq r445 r454 into r473;
    and r472 r473 into r474;
    is.neq r446 r454 into r475;
    and r474 r475 into r476;
    is.neq r447 r454 into r477;
    and r476 r477 into r478;
    and r471 r478 into r479;
    is.eq r449 0u32 into r480;
    is.neq r444 r454 into r481;
    is.neq r445 r454 into r482;
    and r481 r482 into r483;
    is.neq r446 r454 into r484;
    and r483 r484 into r485;
    is.neq r447 r454 into r486;
    and r485 r486 into r487;
    is.neq r448 r454 into r488;
    and r487 r488 into r489;
    and r480 r489 into r490;
    ternary r490 r454 r449 into r491;
    ternary r490 true r450 into r492;
    ternary r479 r454 r448 into r493;
    ternary r479 r449 r491 into r494;
    ternary r479 r450 r492 into r495;
    ternary r470 r454 r447 into r496;
    ternary r470 r448 r493 into r497;
    ternary r470 r449 r494 into r498;
    ternary r470 r450 r495 into r499;
    ternary r463 r454 r446 into r500;
    ternary r463 r447 r496 into r501;
    ternary r463 r448 r497 into r502;
    ternary r463 r449 r498 into r503;
    ternary r463 r450 r499 into r504;
    ternary r458 r454 r445 into r505;
    ternary r458 r446 r500 into r506;
    ternary r458 r447 r501 into r507;
    ternary r458 r448 r502 into r508;
    ternary r458 r449 r503 into r509;
    ternary r458 r450 r504 into r510;
    ternary r455 r454 r444 into r511;
    ternary r455 r445 r505 into r512;
    ternary r455 r446 r506 into r513;
    ternary r455 r447 r507 into r514;
    ternary r455 r448 r508 into r515;
    ternary r455 r449 r509 into r516;
    ternary r455 r450 r510 into r517;
    ternary r452 r511 r444 into r518;
    ternary r452 r512 r445 into r519;
    ternary r452 r513 r446 into r520;
    ternary r452 r514 r447 into r521;
    ternary r452 r515 r448 into r522;
    ternary r452 r516 r449 into r523;
    ternary r452 r517 r450 into r524;
    rand.chacha into r525 as u32;
    not r524 into r526;
    mod r525 33u32 into r527;
    add r527 1u32 into r528;
    is.eq r518 0u32 into r529;
    is.eq r519 0u32 into r530;
    is.neq r518 r528 into r531;
    and r530 r531 into r532;
    is.eq r520 0u32 into r533;
    is.neq r518 r528 into r534;
    is.neq r519 r528 into r535;
    and r534 r535 into r536;
    and r533 r536 into r537;
    is.eq r521 0u32 into r538;
    is.neq r518 r528 into r539;
    is.neq r519 r528 into r540;
    and r539 r540 into r541;
    is.neq r520 r528 into r542;
    and r541 r542 into r543;
    and r538 r543 into r544;
    is.eq r522 0u32 into r545;
    is.neq r518 r528 into r546;
    is.neq r519 r528 into r547;
    and r546 r547 into r548;
    is.neq r520 r528 into r549;
    and r548 r549 into r550;
    is.neq r521 r528 into r551;
    and r550 r551 into r552;
    and r545 r552 into r553;
    is.eq r523 0u32 into r554;
    is.neq r518 r528 into r555;
    is.neq r519 r528 into r556;
    and r555 r556 into r557;
    is.neq r520 r528 into r558;
    and r557 r558 into r559;
    is.neq r521 r528 into r560;
    and r559 r560 into r561;
    is.neq r522 r528 into r562;
    and r561 r562 into r563;
    and r554 r563 into r564;
    ternary r564 r528 r523 into r565;
    ternary r564 true r524 into r566;
    ternary r553 r528 r522 into r567;
    ternary r553 r523 r565 into r568;
    ternary r553 r524 r566 into r569;
    ternary r544 r528 r521 into r570;
    ternary r544 r522 r567 into r571;
    ternary r544 r523 r568 into r572;
    ternary r544 r524 r569 into r573;
    ternary r537 r528 r520 into r574;
    ternary r537 r521 r570 into r575;
    ternary r537 r522 r571 into r576;
    ternary r537 r523 r572 into r577;
    ternary r537 r524 r573 into r578;
    ternary r532 r528 r519 into r579;
    ternary r532 r520 r574 into r580;
    ternary r532 r521 r575 into r581;
    ternary r532 r522 r576 into r582;
    ternary r532 r523 r577 into r583;
    ternary r532 r524 r578 into r584;
    ternary r529 r528 r518 into r585;
    ternary r529 r519 r579 into r586;
    ternary r529 r520 r580 into r587;
    ternary r529 r521 r581 into r588;
    ternary r529 r522 r582 into r589;
    ternary r529 r523 r583 into r590;
    ternary r529 r524 r584 into r591;
    ternary r526 r585 r518 into r592;
    ternary r526 r586 r519 into r593;
    ternary r526 r587 r520 into r594;
    ternary r526 r588 r521 into r595;
    ternary r526 r589 r522 into r596;
    ternary r526 r590 r523 into r597;
    ternary r526 r591 r524 into r598;
    rand.chacha into r599 as u32;
    not r598 into r600;
    mod r599 33u32 into r601;
    add r601 1u32 into r602;
    is.eq r592 0u32 into r603;
    is.eq r593 0u32 into r604;
    is.neq r592 r602 into r605;
    and r604 r605 into r606;
    is.eq r594 0u32 into r607;
    is.neq r592 r602 into r608;
    is.neq r593 r602 into r609;
    and r608 r609 into r610;
    and r607 r610 into r611;
    is.eq r595 0u32 into r612;
    is.neq r592 r602 into r613;
    is.neq r593 r602 into r614;
    and r613 r614 into r615;
    is.neq r594 r602 into r616;
    and r615 r616 into r617;
    and r612 r617 into r618;
    is.eq r596 0u32 into r619;
    is.neq r592 r602 into r620;
    is.neq r593 r602 into r621;
    and r620 r621 into r622;
    is.neq r594 r602 into r623;
    and r622 r623 into r624;
    is.neq r595 r602 into r625;
    and r624 r625 into r626;
    and r619 r626 into r627;
    is.eq r597 0u32 into r628;
    is.neq r592 r602 into r629;
    is.neq r593 r602 into r630;
    and r629 r630 into r631;
    is.neq r594 r602 into r632;
    and r631 r632 into r633;
    is.neq r595 r602 into r634;
    and r633 r634 into r635;
    is.neq r596 r602 into r636;
    and r635 r636 into r637;
    and r628 r637 into r638;
    ternary r638 r602 r597 into r639;
    ternary r638 true r598 into r640;
    ternary r627 r602 r596 into r641;
    ternary r627 r597 r639 into r642;
    ternary r627 r598 r640 into r643;
    ternary r618 r602 r595 into r644;
    ternary r618 r596 r641 into r645;
    ternary r618 r597 r642 into r646;
    ternary r618 r598 r643 into r647;
    ternary r611 r602 r594 into r648;
    ternary r611 r595 r644 into r649;
    ternary r611 r596 r645 into r650;
    ternary r611 r597 r646 into r651;
    ternary r611 r598 r647 into r652;
    ternary r606 r602 r593 into r653;
    ternary r606 r594 r648 into r654;
    ternary r606 r595 r649 into r655;
    ternary r606 r596 r650 into r656;
    ternary r606 r597 r651 into r657;
    ternary r606 r598 r652 into r658;
    ternary r603 r602 r592 into r659;
    ternary r603 r593 r653 into r660;
    ternary r603 r594 r654 into r661;
    ternary r603 r595 r655 into r662;
    ternary r603 r596 r656 into r663;
    ternary r603 r597 r657 into r664;
    ternary r603 r598 r658 into r665;
    ternary r600 r659 r592 into r666;
    ternary r600 r660 r593 into r667;
    ternary r600 r661 r594 into r668;
    ternary r600 r662 r595 into r669;
    ternary r600 r663 r596 into r670;
    ternary r600 r664 r597 into r671;
    ternary r600 r665 r598 into r672;
    rand.chacha into r673 as u32;
    not r672 into r674;
    mod r673 33u32 into r675;
    add r675 1u32 into r676;
    is.eq r666 0u32 into r677;
    is.eq r667 0u32 into r678;
    is.neq r666 r676 into r679;
    and r678 r679 into r680;
    is.eq r668 0u32 into r681;
    is.neq r666 r676 into r682;
    is.neq r667 r676 into r683;
    and r682 r683 into r684;
    and r681 r684 into r685;
    is.eq r669 0u32 into r686;
    is.neq r666 r676 into r687;
    is.neq r667 r676 into r688;
    and r687 r688 into r689;
    is.neq r668 r676 into r690;
    and r689 r690 into r691;
    and r686 r691 into r692;
    is.eq r670 0u32 into r693;
    is.neq r666 r676 into r694;
    is.neq r667 r676 into r695;
    and r694 r695 into r696;
    is.neq r668 r676 into r697;
    and r696 r697 into r698;
    is.neq r669 r676 into r699;
    and r698 r699 into r700;
    and r693 r700 into r701;
    is.eq r671 0u32 into r702;
    is.neq r666 r676 into r703;
    is.neq r667 r676 into r704;
    and r703 r704 into r705;
    is.neq r668 r676 into r706;
    and r705 r706 into r707;
    is.neq r669 r676 into r708;
    and r707 r708 into r709;
    is.neq r670 r676 into r710;
    and r709 r710 into r711;
    and r702 r711 into r712;
    ternary r712 r676 r671 into r713;
    ternary r712 true r672 into r714;
    ternary r701 r676 r670 into r715;
    ternary r701 r671 r713 into r716;
    ternary r701 r672 r714 into r717;
    ternary r692 r676 r669 into r718;
    ternary r692 r670 r715 into r719;
    ternary r692 r671 r716 into r720;
    ternary r692 r672 r717 into r721;
    ternary r685 r676 r668 into r722;
    ternary r685 r669 r718 into r723;
    ternary r685 r670 r719 into r724;
    ternary r685 r671 r720 into r725;
    ternary r685 r672 r721 into r726;
    ternary r680 r676 r667 into r727;
    ternary r680 r668 r722 into r728;
    ternary r680 r669 r723 into r729;
    ternary r680 r670 r724 into r730;
    ternary r680 r671 r725 into r731;
    ternary r680 r672 r726 into r732;
    ternary r677 r676 r666 into r733;
    ternary r677 r667 r727 into r734;
    ternary r677 r668 r728 into r735;
    ternary r677 r669 r729 into r736;
    ternary r677 r670 r730 into r737;
    ternary r677 r671 r731 into r738;
    ternary r677 r672 r732 into r739;
    ternary r674 r733 r666 into r740;
    ternary r674 r734 r667 into r741;
    ternary r674 r735 r668 into r742;
    ternary r674 r736 r669 into r743;
    ternary r674 r737 r670 into r744;
    ternary r674 r738 r671 into r745;
    ternary r674 r739 r672 into r746;
    rand.chacha into r747 as u32;
    not r746 into r748;
    mod r747 33u32 into r749;
    add r749 1u32 into r750;
    is.eq r740 0u32 into r751;
    is.eq r741 0u32 into r752;
    is.neq r740 r750 into r753;
    and r752 r753 into r754;
    is.eq r742 0u32 into r755;
    is.neq r740 r750 into r756;
    is.neq r741 r750 into r757;
    and r756 r757 into r758;
    and r755 r758 into r759;
    is.eq r743 0u32 into r760;
    is.neq r740 r750 into r761;
    is.neq r741 r750 into r762;
    and r761 r762 into r763;
    is.neq r742 r750 into r764;
    and r763 r764 into r765;
    and r760 r765 into r766;
    is.eq r744 0u32 into r767;
    is.neq r740 r750 into r768;
    is.neq r741 r750 into r769;
    and r768 r769 into r770;
    is.neq r742 r750 into r771;
    and r770 r771 into r772;
    is.neq r743 r750 into r773;
    and r772 r773 into r774;
    and r767 r774 into r775;
    is.eq r745 0u32 into r776;
    is.neq r740 r750 into r777;
    is.neq r741 r750 into r778;
    and r777 r778 into r779;
    is.neq r742 r750 into r780;
    and r779 r780 into r781;
    is.neq r743 r750 into r782;
    and r781 r782 into r783;
    is.neq r744 r750 into r784;
    and r783 r784 into r785;
    and r776 r785 into r786;
    ternary r786 r750 r745 into r787;
    ternary r786 true r746 into r788;
    ternary r775 r750 r744 into r789;
    ternary r775 r745 r787 into r790;
    ternary r775 r746 r788 into r791;
    ternary r766 r750 r743 into r792;
    ternary r766 r744 r789 into r793;
    ternary r766 r745 r790 into r794;
    ternary r766 r746 r791 into r795;
    ternary r759 r750 r742 into r796;
    ternary r759 r743 r792 into r797;
    ternary r759 r744 r793 into r798;
    ternary r759 r745 r794 into r799;
    ternary r759 r746 r795 into r800;
    ternary r754 r750 r741 into r801;
    ternary r754 r742 r796 into r802;
    ternary r754 r743 r797 into r803;
    ternary r754 r744 r798 into r804;
    ternary r754 r745 r799 into r805;
    ternary r754 r746 r800 into r806;
    ternary r751 r750 r740 into r807;
    ternary r751 r741 r801 into r808;
    ternary r751 r742 r802 into r809;
    ternary r751 r743 r803 into r810;
    ternary r751 r744 r804 into r811;
    ternary r751 r745 r805 into r812;
    ternary r751 r746 r806 into r813;
    ternary r748 r807 r740 into r814;
    ternary r748 r808 r741 into r815;
    ternary r748 r809 r742 into r816;
    ternary r748 r810 r743 into r817;
    ternary r748 r811 r744 into r818;
    ternary r748 r812 r745 into r819;
    ternary r748 r813 r746 into r820;
    rand.chacha into r821 as u32;
    not r820 into r822;
    mod r821 33u32 into r823;
    add r823 1u32 into r824;
    is.eq r814 0u32 into r825;
    is.eq r815 0u32 into r826;
    is.neq r814 r824 into r827;
    and r826 r827 into r828;
    is.eq r816 0u32 into r829;
    is.neq r814 r824 into r830;
    is.neq r815 r824 into r831;
    and r830 r831 into r832;
    and r829 r832 into r833;
    is.eq r817 0u32 into r834;
    is.neq r814 r824 into r835;
    is.neq r815 r824 into r836;
    and r835 r836 into r837;
    is.neq r816 r824 into r838;
    and r837 r838 into r839;
    and r834 r839 into r840;
    is.eq r818 0u32 into r841;
    is.neq r814 r824 into r842;
    is.neq r815 r824 into r843;
    and r842 r843 into r844;
    is.neq r816 r824 into r845;
    and r844 r845 into r846;
    is.neq r817 r824 into r847;
    and r846 r847 into r848;
    and r841 r848 into r849;
    is.eq r819 0u32 into r850;
    is.neq r814 r824 into r851;
    is.neq r815 r824 into r852;
    and r851 r852 into r853;
    is.neq r816 r824 into r854;
    and r853 r854 into r855;
    is.neq r817 r824 into r856;
    and r855 r856 into r857;
    is.neq r818 r824 into r858;
    and r857 r858 into r859;
    and r850 r859 into r860;
    ternary r860 r824 r819 into r861;
    ternary r860 true r820 into r862;
    ternary r849 r824 r818 into r863;
    ternary r849 r819 r861 into r864;
    ternary r849 r820 r862 into r865;
    ternary r840 r824 r817 into r866;
    ternary r840 r818 r863 into r867;
    ternary r840 r819 r864 into r868;
    ternary r840 r820 r865 into r869;
    ternary r833 r824 r816 into r870;
    ternary r833 r817 r866 into r871;
    ternary r833 r818 r867 into r872;
    ternary r833 r819 r868 into r873;
    ternary r833 r820 r869 into r874;
    ternary r828 r824 r815 into r875;
    ternary r828 r816 r870 into r876;
    ternary r828 r817 r871 into r877;
    ternary r828 r818 r872 into r878;
    ternary r828 r819 r873 into r879;
    ternary r828 r820 r874 into r880;
    ternary r825 r824 r814 into r881;
    ternary r825 r815 r875 into r882;
    ternary r825 r816 r876 into r883;
    ternary r825 r817 r877 into r884;
    ternary r825 r818 r878 into r885;
    ternary r825 r819 r879 into r886;
    ternary r825 r820 r880 into r887;
    ternary r822 r881 r814 into r888;
    ternary r822 r882 r815 into r889;
    ternary r822 r883 r816 into r890;
    ternary r822 r884 r817 into r891;
    ternary r822 r885 r818 into r892;
    ternary r822 r886 r819 into r893;
    ternary r822 r887 r820 into r894;
    rand.chacha into r895 as u32;
    not r894 into r896;
    mod r895 33u32 into r897;
    add r897 1u32 into r898;
    is.eq r888 0u32 into r899;
    is.eq r889 0u32 into r900;
    is.neq r888 r898 into r901;
    and r900 r901 into r902;
    is.eq r890 0u32 into r903;
    is.neq r888 r898 into r904;
    is.neq r889 r898 into r905;
    and r904 r905 into r906;
    and r903 r906 into r907;
    is.eq r891 0u32 into r908;
    is.neq r888 r898 into r909;
    is.neq r889 r898 into r910;
    and r909 r910 into r911;
    is.neq r890 r898 into r912;
    and r911 r912 into r913;
    and r908 r913 into r914;
    is.eq r892 0u32 into r915;
    is.neq r888 r898 into r916;
    is.neq r889 r898 into r917;
    and r916 r917 into r918;
    is.neq r890 r898 into r919;
    and r918 r919 into r920;
    is.neq r891 r898 into r921;
    and r920 r921 into r922;
    and r915 r922 into r923;
    is.eq r893 0u32 into r924;
    is.neq r888 r898 into r925;
    is.neq r889 r898 into r926;
    and r925 r926 into r927;
    is.neq r890 r898 into r928;
    and r927 r928 into r929;
    is.neq r891 r898 into r930;
    and r929 r930 into r931;
    is.neq r892 r898 into r932;
    and r931 r932 into r933;
    and r924 r933 into r934;
    ternary r934 r898 r893 into r935;
    ternary r934 true r894 into r936;
    ternary r923 r898 r892 into r937;
    ternary r923 r893 r935 into r938;
    ternary r923 r894 r936 into r939;
    ternary r914 r898 r891 into r940;
    ternary r914 r892 r937 into r941;
    ternary r914 r893 r938 into r942;
    ternary r914 r894 r939 into r943;
    ternary r907 r898 r890 into r944;
    ternary r907 r891 r940 into r945;
    ternary r907 r892 r941 into r946;
    ternary r907 r893 r942 into r947;
    ternary r907 r894 r943 into r948;
    ternary r902 r898 r889 into r949;
    ternary r902 r890 r944 into r950;
    ternary r902 r891 r945 into r951;
    ternary r902 r892 r946 into r952;
    ternary r902 r893 r947 into r953;
    ternary r902 r894 r948 into r954;
    ternary r899 r898 r888 into r955;
    ternary r899 r889 r949 into r956;
    ternary r899 r890 r950 into r957;
    ternary r899 r891 r951 into r958;
    ternary r899 r892 r952 into r959;
    ternary r899 r893 r953 into r960;
    ternary r899 r894 r954 into r961;
    ternary r896 r955 r888 into r962;
    ternary r896 r956 r889 into r963;
    ternary r896 r957 r890 into r964;
    ternary r896 r958 r891 into r965;
    ternary r896 r959 r892 into r966;
    ternary r896 r960 r893 into r967;
    ternary r896 r961 r894 into r968;
    rand.chacha into r969 as u32;
    not r968 into r970;
    mod r969 33u32 into r971;
    add r971 1u32 into r972;
    is.eq r962 0u32 into r973;
    is.eq r963 0u32 into r974;
    is.neq r962 r972 into r975;
    and r974 r975 into r976;
    is.eq r964 0u32 into r977;
    is.neq r962 r972 into r978;
    is.neq r963 r972 into r979;
    and r978 r979 into r980;
    and r977 r980 into r981;
    is.eq r965 0u32 into r982;
    is.neq r962 r972 into r983;
    is.neq r963 r972 into r984;
    and r983 r984 into r985;
    is.neq r964 r972 into r986;
    and r985 r986 into r987;
    and r982 r987 into r988;
    is.eq r966 0u32 into r989;
    is.neq r962 r972 into r990;
    is.neq r963 r972 into r991;
    and r990 r991 into r992;
    is.neq r964 r972 into r993;
    and r992 r993 into r994;
    is.neq r965 r972 into r995;
    and r994 r995 into r996;
    and r989 r996 into r997;
    is.eq r967 0u32 into r998;
    is.neq r962 r972 into r999;
    is.neq r963 r972 into r1000;
    and r999 r1000 into r1001;
    is.neq r964 r972 into r1002;
    and r1001 r1002 into r1003;
    is.neq r965 r972 into r1004;
    and r1003 r1004 into r1005;
    is.neq r966 r972 into r1006;
    and r1005 r1006 into r1007;
    and r998 r1007 into r1008;
    ternary r1008 r972 r967 into r1009;
    ternary r1008 true r968 into r1010;
    ternary r997 r972 r966 into r1011;
    ternary r997 r967 r1009 into r1012;
    ternary r997 r968 r1010 into r1013;
    ternary r988 r972 r965 into r1014;
    ternary r988 r966 r1011 into r1015;
    ternary r988 r967 r1012 into r1016;
    ternary r988 r968 r1013 into r1017;
    ternary r981 r972 r964 into r1018;
    ternary r981 r965 r1014 into r1019;
    ternary r981 r966 r1015 into r1020;
    ternary r981 r967 r1016 into r1021;
    ternary r981 r968 r1017 into r1022;
    ternary r976 r972 r963 into r1023;
    ternary r976 r964 r1018 into r1024;
    ternary r976 r965 r1019 into r1025;
    ternary r976 r966 r1020 into r1026;
    ternary r976 r967 r1021 into r1027;
    ternary r976 r968 r1022 into r1028;
    ternary r973 r972 r962 into r1029;
    ternary r973 r963 r1023 into r1030;
    ternary r973 r964 r1024 into r1031;
    ternary r973 r965 r1025 into r1032;
    ternary r973 r966 r1026 into r1033;
    ternary r973 r967 r1027 into r1034;
    ternary r973 r968 r1028 into r1035;
    ternary r970 r1029 r962 into r1036;
    ternary r970 r1030 r963 into r1037;
    ternary r970 r1031 r964 into r1038;
    ternary r970 r1032 r965 into r1039;
    ternary r970 r1033 r966 into r1040;
    ternary r970 r1034 r967 into r1041;
    ternary r970 r1035 r968 into r1042;
    rand.chacha into r1043 as u32;
    not r1042 into r1044;
    mod r1043 33u32 into r1045;
    add r1045 1u32 into r1046;
    is.eq r1036 0u32 into r1047;
    is.eq r1037 0u32 into r1048;
    is.neq r1036 r1046 into r1049;
    and r1048 r1049 into r1050;
    is.eq r1038 0u32 into r1051;
    is.neq r1036 r1046 into r1052;
    is.neq r1037 r1046 into r1053;
    and r1052 r1053 into r1054;
    and r1051 r1054 into r1055;
    is.eq r1039 0u32 into r1056;
    is.neq r1036 r1046 into r1057;
    is.neq r1037 r1046 into r1058;
    and r1057 r1058 into r1059;
    is.neq r1038 r1046 into r1060;
    and r1059 r1060 into r1061;
    and r1056 r1061 into r1062;
    is.eq r1040 0u32 into r1063;
    is.neq r1036 r1046 into r1064;
    is.neq r1037 r1046 into r1065;
    and r1064 r1065 into r1066;
    is.neq r1038 r1046 into r1067;
    and r1066 r1067 into r1068;
    is.neq r1039 r1046 into r1069;
    and r1068 r1069 into r1070;
    and r1063 r1070 into r1071;
    is.eq r1041 0u32 into r1072;
    is.neq r1036 r1046 into r1073;
    is.neq r1037 r1046 into r1074;
    and r1073 r1074 into r1075;
    is.neq r1038 r1046 into r1076;
    and r1075 r1076 into r1077;
    is.neq r1039 r1046 into r1078;
    and r1077 r1078 into r1079;
    is.neq r1040 r1046 into r1080;
    and r1079 r1080 into r1081;
    and r1072 r1081 into r1082;
    ternary r1082 r1046 r1041 into r1083;
    ternary r1082 true r1042 into r1084;
    ternary r1071 r1046 r1040 into r1085;
    ternary r1071 r1041 r1083 into r1086;
    ternary r1071 r1042 r1084 into r1087;
    ternary r1062 r1046 r1039 into r1088;
    ternary r1062 r1040 r1085 into r1089;
    ternary r1062 r1041 r1086 into r1090;
    ternary r1062 r1042 r1087 into r1091;
    ternary r1055 r1046 r1038 into r1092;
    ternary r1055 r1039 r1088 into r1093;
    ternary r1055 r1040 r1089 into r1094;
    ternary r1055 r1041 r1090 into r1095;
    ternary r1055 r1042 r1091 into r1096;
    ternary r1050 r1046 r1037 into r1097;
    ternary r1050 r1038 r1092 into r1098;
    ternary r1050 r1039 r1093 into r1099;
    ternary r1050 r1040 r1094 into r1100;
    ternary r1050 r1041 r1095 into r1101;
    ternary r1050 r1042 r1096 into r1102;
    ternary r1047 r1046 r1036 into r1103;
    ternary r1047 r1037 r1097 into r1104;
    ternary r1047 r1038 r1098 into r1105;
    ternary r1047 r1039 r1099 into r1106;
    ternary r1047 r1040 r1100 into r1107;
    ternary r1047 r1041 r1101 into r1108;
    ternary r1047 r1042 r1102 into r1109;
    ternary r1044 r1103 r1036 into r1110;
    ternary r1044 r1104 r1037 into r1111;
    ternary r1044 r1105 r1038 into r1112;
    ternary r1044 r1106 r1039 into r1113;
    ternary r1044 r1107 r1040 into r1114;
    ternary r1044 r1108 r1041 into r1115;
    ternary r1044 r1109 r1042 into r1116;
    rand.chacha into r1117 as u32;
    not r1116 into r1118;
    mod r1117 33u32 into r1119;
    add r1119 1u32 into r1120;
    is.eq r1110 0u32 into r1121;
    is.eq r1111 0u32 into r1122;
    is.neq r1110 r1120 into r1123;
    and r1122 r1123 into r1124;
    is.eq r1112 0u32 into r1125;
    is.neq r1110 r1120 into r1126;
    is.neq r1111 r1120 into r1127;
    and r1126 r1127 into r1128;
    and r1125 r1128 into r1129;
    is.eq r1113 0u32 into r1130;
    is.neq r1110 r1120 into r1131;
    is.neq r1111 r1120 into r1132;
    and r1131 r1132 into r1133;
    is.neq r1112 r1120 into r1134;
    and r1133 r1134 into r1135;
    and r1130 r1135 into r1136;
    is.eq r1114 0u32 into r1137;
    is.neq r1110 r1120 into r1138;
    is.neq r1111 r1120 into r1139;
    and r1138 r1139 into r1140;
    is.neq r1112 r1120 into r1141;
    and r1140 r1141 into r1142;
    is.neq r1113 r1120 into r1143;
    and r1142 r1143 into r1144;
    and r1137 r1144 into r1145;
    is.eq r1115 0u32 into r1146;
    is.neq r1110 r1120 into r1147;
    is.neq r1111 r1120 into r1148;
    and r1147 r1148 into r1149;
    is.neq r1112 r1120 into r1150;
    and r1149 r1150 into r1151;
    is.neq r1113 r1120 into r1152;
    and r1151 r1152 into r1153;
    is.neq r1114 r1120 into r1154;
    and r1153 r1154 into r1155;
    and r1146 r1155 into r1156;
    ternary r1156 r1120 r1115 into r1157;
    ternary r1156 true r1116 into r1158;
    ternary r1145 r1120 r1114 into r1159;
    ternary r1145 r1115 r1157 into r1160;
    ternary r1145 r1116 r1158 into r1161;
    ternary r1136 r1120 r1113 into r1162;
    ternary r1136 r1114 r1159 into r1163;
    ternary r1136 r1115 r1160 into r1164;
    ternary r1136 r1116 r1161 into r1165;
    ternary r1129 r1120 r1112 into r1166;
    ternary r1129 r1113 r1162 into r1167;
    ternary r1129 r1114 r1163 into r1168;
    ternary r1129 r1115 r1164 into r1169;
    ternary r1129 r1116 r1165 into r1170;
    ternary r1124 r1120 r1111 into r1171;
    ternary r1124 r1112 r1166 into r1172;
    ternary r1124 r1113 r1167 into r1173;
    ternary r1124 r1114 r1168 into r1174;
    ternary r1124 r1115 r1169 into r1175;
    ternary r1124 r1116 r1170 into r1176;
    ternary r1121 r1120 r1110 into r1177;
    ternary r1121 r1111 r1171 into r1178;
    ternary r1121 r1112 r1172 into r1179;
    ternary r1121 r1113 r1173 into r1180;
    ternary r1121 r1114 r1174 into r1181;
    ternary r1121 r1115 r1175 into r1182;
    ternary r1121 r1116 r1176 into r1183;
    ternary r1118 r1177 r1110 into r1184;
    ternary r1118 r1178 r1111 into r1185;
    ternary r1118 r1179 r1112 into r1186;
    ternary r1118 r1180 r1113 into r1187;
    ternary r1118 r1181 r1114 into r1188;
    ternary r1118 r1182 r1115 into r1189;
    ternary r1118 r1183 r1116 into r1190;
    rand.chacha into r1191 as u32;
    not r1190 into r1192;
    mod r1191 33u32 into r1193;
    add r1193 1u32 into r1194;
    is.eq r1184 0u32 into r1195;
    is.eq r1185 0u32 into r1196;
    is.neq r1184 r1194 into r1197;
    and r1196 r1197 into r1198;
    is.eq r1186 0u32 into r1199;
    is.neq r1184 r1194 into r1200;
    is.neq r1185 r1194 into r1201;
    and r1200 r1201 into r1202;
    and r1199 r1202 into r1203;
    is.eq r1187 0u32 into r1204;
    is.neq r1184 r1194 into r1205;
    is.neq r1185 r1194 into r1206;
    and r1205 r1206 into r1207;
    is.neq r1186 r1194 into r1208;
    and r1207 r1208 into r1209;
    and r1204 r1209 into r1210;
    is.eq r1188 0u32 into r1211;
    is.neq r1184 r1194 into r1212;
    is.neq r1185 r1194 into r1213;
    and r1212 r1213 into r1214;
    is.neq r1186 r1194 into r1215;
    and r1214 r1215 into r1216;
    is.neq r1187 r1194 into r1217;
    and r1216 r1217 into r1218;
    and r1211 r1218 into r1219;
    is.eq r1189 0u32 into r1220;
    is.neq r1184 r1194 into r1221;
    is.neq r1185 r1194 into r1222;
    and r1221 r1222 into r1223;
    is.neq r1186 r1194 into r1224;
    and r1223 r1224 into r1225;
    is.neq r1187 r1194 into r1226;
    and r1225 r1226 into r1227;
    is.neq r1188 r1194 into r1228;
    and r1227 r1228 into r1229;
    and r1220 r1229 into r1230;
    ternary r1230 r1194 r1189 into r1231;
    ternary r1230 true r1190 into r1232;
    ternary r1219 r1194 r1188 into r1233;
    ternary r1219 r1189 r1231 into r1234;
    ternary r1219 r1190 r1232 into r1235;
    ternary r1210 r1194 r1187 into r1236;
    ternary r1210 r1188 r1233 into r1237;
    ternary r1210 r1189 r1234 into r1238;
    ternary r1210 r1190 r1235 into r1239;
    ternary r1203 r1194 r1186 into r1240;
    ternary r1203 r1187 r1236 into r1241;
    ternary r1203 r1188 r1237 into r1242;
    ternary r1203 r1189 r1238 into r1243;
    ternary r1203 r1190 r1239 into r1244;
    ternary r1198 r1194 r1185 into r1245;
    ternary r1198 r1186 r1240 into r1246;
    ternary r1198 r1187 r1241 into r1247;
    ternary r1198 r1188 r1242 into r1248;
    ternary r1198 r1189 r1243 into r1249;
    ternary r1198 r1190 r1244 into r1250;
    ternary r1195 r1194 r1184 into r1251;
    ternary r1195 r1185 r1245 into r1252;
    ternary r1195 r1186 r1246 into r1253;
    ternary r1195 r1187 r1247 into r1254;
    ternary r1195 r1188 r1248 into r1255;
    ternary r1195 r1189 r1249 into r1256;
    ternary r1195 r1190 r1250 into r1257;
    ternary r1192 r1251 r1184 into r1258;
    ternary r1192 r1252 r1185 into r1259;
    ternary r1192 r1253 r1186 into r1260;
    ternary r1192 r1254 r1187 into r1261;
    ternary r1192 r1255 r1188 into r1262;
    ternary r1192 r1256 r1189 into r1263;
    ternary r1192 r1257 r1190 into r1264;
    rand.chacha into r1265 as u32;
    not r1264 into r1266;
    mod r1265 33u32 into r1267;
    add r1267 1u32 into r1268;
    is.eq r1258 0u32 into r1269;
    is.eq r1259 0u32 into r1270;
    is.neq r1258 r1268 into r1271;
    and r1270 r1271 into r1272;
    is.eq r1260 0u32 into r1273;
    is.neq r1258 r1268 into r1274;
    is.neq r1259 r1268 into r1275;
    and r1274 r1275 into r1276;
    and r1273 r1276 into r1277;
    is.eq r1261 0u32 into r1278;
    is.neq r1258 r1268 into r1279;
    is.neq r1259 r1268 into r1280;
    and r1279 r1280 into r1281;
    is.neq r1260 r1268 into r1282;
    and r1281 r1282 into r1283;
    and r1278 r1283 into r1284;
    is.eq r1262 0u32 into r1285;
    is.neq r1258 r1268 into r1286;
    is.neq r1259 r1268 into r1287;
    and r1286 r1287 into r1288;
    is.neq r1260 r1268 into r1289;
    and r1288 r1289 into r1290;
    is.neq r1261 r1268 into r1291;
    and r1290 r1291 into r1292;
    and r1285 r1292 into r1293;
    is.eq r1263 0u32 into r1294;
    is.neq r1258 r1268 into r1295;
    is.neq r1259 r1268 into r1296;
    and r1295 r1296 into r1297;
    is.neq r1260 r1268 into r1298;
    and r1297 r1298 into r1299;
    is.neq r1261 r1268 into r1300;
    and r1299 r1300 into r1301;
    is.neq r1262 r1268 into r1302;
    and r1301 r1302 into r1303;
    and r1294 r1303 into r1304;
    ternary r1304 r1268 r1263 into r1305;
    ternary r1304 true r1264 into r1306;
    ternary r1293 r1268 r1262 into r1307;
    ternary r1293 r1263 r1305 into r1308;
    ternary r1293 r1264 r1306 into r1309;
    ternary r1284 r1268 r1261 into r1310;
    ternary r1284 r1262 r1307 into r1311;
    ternary r1284 r1263 r1308 into r1312;
    ternary r1284 r1264 r1309 into r1313;
    ternary r1277 r1268 r1260 into r1314;
    ternary r1277 r1261 r1310 into r1315;
    ternary r1277 r1262 r1311 into r1316;
    ternary r1277 r1263 r1312 into r1317;
    ternary r1277 r1264 r1313 into r1318;
    ternary r1272 r1268 r1259 into r1319;
    ternary r1272 r1260 r1314 into r1320;
    ternary r1272 r1261 r1315 into r1321;
    ternary r1272 r1262 r1316 into r1322;
    ternary r1272 r1263 r1317 into r1323;
    ternary r1272 r1264 r1318 into r1324;
    ternary r1269 r1268 r1258 into r1325;
    ternary r1269 r1259 r1319 into r1326;
    ternary r1269 r1260 r1320 into r1327;
    ternary r1269 r1261 r1321 into r1328;
    ternary r1269 r1262 r1322 into r1329;
    ternary r1269 r1263 r1323 into r1330;
    ternary r1269 r1264 r1324 into r1331;
    ternary r1266 r1325 r1258 into r1332;
    ternary r1266 r1326 r1259 into r1333;
    ternary r1266 r1327 r1260 into r1334;
    ternary r1266 r1328 r1261 into r1335;
    ternary r1266 r1329 r1262 into r1336;
    ternary r1266 r1330 r1263 into r1337;
    ternary r1266 r1331 r1264 into r1338;
    rand.chacha into r1339 as u32;
    not r1338 into r1340;
    mod r1339 33u32 into r1341;
    add r1341 1u32 into r1342;
    is.eq r1332 0u32 into r1343;
    is.eq r1333 0u32 into r1344;
    is.neq r1332 r1342 into r1345;
    and r1344 r1345 into r1346;
    is.eq r1334 0u32 into r1347;
    is.neq r1332 r1342 into r1348;
    is.neq r1333 r1342 into r1349;
    and r1348 r1349 into r1350;
    and r1347 r1350 into r1351;
    is.eq r1335 0u32 into r1352;
    is.neq r1332 r1342 into r1353;
    is.neq r1333 r1342 into r1354;
    and r1353 r1354 into r1355;
    is.neq r1334 r1342 into r1356;
    and r1355 r1356 into r1357;
    and r1352 r1357 into r1358;
    is.eq r1336 0u32 into r1359;
    is.neq r1332 r1342 into r1360;
    is.neq r1333 r1342 into r1361;
    and r1360 r1361 into r1362;
    is.neq r1334 r1342 into r1363;
    and r1362 r1363 into r1364;
    is.neq r1335 r1342 into r1365;
    and r1364 r1365 into r1366;
    and r1359 r1366 into r1367;
    is.eq r1337 0u32 into r1368;
    is.neq r1332 r1342 into r1369;
    is.neq r1333 r1342 into r1370;
    and r1369 r1370 into r1371;
    is.neq r1334 r1342 into r1372;
    and r1371 r1372 into r1373;
    is.neq r1335 r1342 into r1374;
    and r1373 r1374 into r1375;
    is.neq r1336 r1342 into r1376;
    and r1375 r1376 into r1377;
    and r1368 r1377 into r1378;
    ternary r1378 r1342 r1337 into r1379;
    ternary r1378 true r1338 into r1380;
    ternary r1367 r1342 r1336 into r1381;
    ternary r1367 r1337 r1379 into r1382;
    ternary r1367 r1338 r1380 into r1383;
    ternary r1358 r1342 r1335 into r1384;
    ternary r1358 r1336 r1381 into r1385;
    ternary r1358 r1337 r1382 into r1386;
    ternary r1358 r1338 r1383 into r1387;
    ternary r1351 r1342 r1334 into r1388;
    ternary r1351 r1335 r1384 into r1389;
    ternary r1351 r1336 r1385 into r1390;
    ternary r1351 r1337 r1386 into r1391;
    ternary r1351 r1338 r1387 into r1392;
    ternary r1346 r1342 r1333 into r1393;
    ternary r1346 r1334 r1388 into r1394;
    ternary r1346 r1335 r1389 into r1395;
    ternary r1346 r1336 r1390 into r1396;
    ternary r1346 r1337 r1391 into r1397;
    ternary r1346 r1338 r1392 into r1398;
    ternary r1343 r1342 r1332 into r1399;
    ternary r1343 r1333 r1393 into r1400;
    ternary r1343 r1334 r1394 into r1401;
    ternary r1343 r1335 r1395 into r1402;
    ternary r1343 r1336 r1396 into r1403;
    ternary r1343 r1337 r1397 into r1404;
    ternary r1343 r1338 r1398 into r1405;
    ternary r1340 r1399 r1332 into r1406;
    ternary r1340 r1400 r1333 into r1407;
    ternary r1340 r1401 r1334 into r1408;
    ternary r1340 r1402 r1335 into r1409;
    ternary r1340 r1403 r1336 into r1410;
    ternary r1340 r1404 r1337 into r1411;
    ternary r1340 r1405 r1338 into r1412;
    rand.chacha into r1413 as u32;
    not r1412 into r1414;
    mod r1413 33u32 into r1415;
    add r1415 1u32 into r1416;
    is.eq r1406 0u32 into r1417;
    is.eq r1407 0u32 into r1418;
    is.neq r1406 r1416 into r1419;
    and r1418 r1419 into r1420;
    is.eq r1408 0u32 into r1421;
    is.neq r1406 r1416 into r1422;
    is.neq r1407 r1416 into r1423;
    and r1422 r1423 into r1424;
    and r1421 r1424 into r1425;
    is.eq r1409 0u32 into r1426;
    is.neq r1406 r1416 into r1427;
    is.neq r1407 r1416 into r1428;
    and r1427 r1428 into r1429;
    is.neq r1408 r1416 into r1430;
    and r1429 r1430 into r1431;
    and r1426 r1431 into r1432;
    is.eq r1410 0u32 into r1433;
    is.neq r1406 r1416 into r1434;
    is.neq r1407 r1416 into r1435;
    and r1434 r1435 into r1436;
    is.neq r1408 r1416 into r1437;
    and r1436 r1437 into r1438;
    is.neq r1409 r1416 into r1439;
    and r1438 r1439 into r1440;
    and r1433 r1440 into r1441;
    is.eq r1411 0u32 into r1442;
    is.neq r1406 r1416 into r1443;
    is.neq r1407 r1416 into r1444;
    and r1443 r1444 into r1445;
    is.neq r1408 r1416 into r1446;
    and r1445 r1446 into r1447;
    is.neq r1409 r1416 into r1448;
    and r1447 r1448 into r1449;
    is.neq r1410 r1416 into r1450;
    and r1449 r1450 into r1451;
    and r1442 r1451 into r1452;
    ternary r1452 r1416 r1411 into r1453;
    ternary r1452 true r1412 into r1454;
    ternary r1441 r1416 r1410 into r1455;
    ternary r1441 r1411 r1453 into r1456;
    ternary r1441 r1412 r1454 into r1457;
    ternary r1432 r1416 r1409 into r1458;
    ternary r1432 r1410 r1455 into r1459;
    ternary r1432 r1411 r1456 into r1460;
    ternary r1432 r1412 r1457 into r1461;
    ternary r1425 r1416 r1408 into r1462;
    ternary r1425 r1409 r1458 into r1463;
    ternary r1425 r1410 r1459 into r1464;
    ternary r1425 r1411 r1460 into r1465;
    ternary r1425 r1412 r1461 into r1466;
    ternary r1420 r1416 r1407 into r1467;
    ternary r1420 r1408 r1462 into r1468;
    ternary r1420 r1409 r1463 into r1469;
    ternary r1420 r1410 r1464 into r1470;
    ternary r1420 r1411 r1465 into r1471;
    ternary r1420 r1412 r1466 into r1472;
    ternary r1417 r1416 r1406 into r1473;
    ternary r1417 r1407 r1467 into r1474;
    ternary r1417 r1408 r1468 into r1475;
    ternary r1417 r1409 r1469 into r1476;
    ternary r1417 r1410 r1470 into r1477;
    ternary r1417 r1411 r1471 into r1478;
    ternary r1417 r1412 r1472 into r1479;
    ternary r1414 r1473 r1406 into r1480;
    ternary r1414 r1474 r1407 into r1481;
    ternary r1414 r1475 r1408 into r1482;
    ternary r1414 r1476 r1409 into r1483;
    ternary r1414 r1477 r1410 into r1484;
    ternary r1414 r1478 r1411 into r1485;
    ternary r1414 r1479 r1412 into r1486;
    rand.chacha into r1487 as u32;
    not r1486 into r1488;
    mod r1487 33u32 into r1489;
    add r1489 1u32 into r1490;
    is.eq r1480 0u32 into r1491;
    is.eq r1481 0u32 into r1492;
    is.neq r1480 r1490 into r1493;
    and r1492 r1493 into r1494;
    is.eq r1482 0u32 into r1495;
    is.neq r1480 r1490 into r1496;
    is.neq r1481 r1490 into r1497;
    and r1496 r1497 into r1498;
    and r1495 r1498 into r1499;
    is.eq r1483 0u32 into r1500;
    is.neq r1480 r1490 into r1501;
    is.neq r1481 r1490 into r1502;
    and r1501 r1502 into r1503;
    is.neq r1482 r1490 into r1504;
    and r1503 r1504 into r1505;
    and r1500 r1505 into r1506;
    is.eq r1484 0u32 into r1507;
    is.neq r1480 r1490 into r1508;
    is.neq r1481 r1490 into r1509;
    and r1508 r1509 into r1510;
    is.neq r1482 r1490 into r1511;
    and r1510 r1511 into r1512;
    is.neq r1483 r1490 into r1513;
    and r1512 r1513 into r1514;
    and r1507 r1514 into r1515;
    is.eq r1485 0u32 into r1516;
    is.neq r1480 r1490 into r1517;
    is.neq r1481 r1490 into r1518;
    and r1517 r1518 into r1519;
    is.neq r1482 r1490 into r1520;
    and r1519 r1520 into r1521;
    is.neq r1483 r1490 into r1522;
    and r1521 r1522 into r1523;
    is.neq r1484 r1490 into r1524;
    and r1523 r1524 into r1525;
    and r1516 r1525 into r1526;
    ternary r1526 r1490 r1485 into r1527;
    ternary r1526 true r1486 into r1528;
    ternary r1515 r1490 r1484 into r1529;
    ternary r1515 r1485 r1527 into r1530;
    ternary r1515 r1486 r1528 into r1531;
    ternary r1506 r1490 r1483 into r1532;
    ternary r1506 r1484 r1529 into r1533;
    ternary r1506 r1485 r1530 into r1534;
    ternary r1506 r1486 r1531 into r1535;
    ternary r1499 r1490 r1482 into r1536;
    ternary r1499 r1483 r1532 into r1537;
    ternary r1499 r1484 r1533 into r1538;
    ternary r1499 r1485 r1534 into r1539;
    ternary r1499 r1486 r1535 into r1540;
    ternary r1494 r1490 r1481 into r1541;
    ternary r1494 r1482 r1536 into r1542;
    ternary r1494 r1483 r1537 into r1543;
    ternary r1494 r1484 r1538 into r1544;
    ternary r1494 r1485 r1539 into r1545;
    ternary r1494 r1486 r1540 into r1546;
    ternary r1491 r1490 r1480 into r1547;
    ternary r1491 r1481 r1541 into r1548;
    ternary r1491 r1482 r1542 into r1549;
    ternary r1491 r1483 r1543 into r1550;
    ternary r1491 r1484 r1544 into r1551;
    ternary r1491 r1485 r1545 into r1552;
    ternary r1491 r1486 r1546 into r1553;
    ternary r1488 r1547 r1480 into r1554;
    ternary r1488 r1548 r1481 into r1555;
    ternary r1488 r1549 r1482 into r1556;
    ternary r1488 r1550 r1483 into r1557;
    ternary r1488 r1551 r1484 into r1558;
    ternary r1488 r1552 r1485 into r1559;
    ternary r1488 r1553 r1486 into r1560;
    rand.chacha into r1561 as u32;
    not r1560 into r1562;
    mod r1561 33u32 into r1563;
    add r1563 1u32 into r1564;
    is.eq r1554 0u32 into r1565;
    is.eq r1555 0u32 into r1566;
    is.neq r1554 r1564 into r1567;
    and r1566 r1567 into r1568;
    is.eq r1556 0u32 into r1569;
    is.neq r1554 r1564 into r1570;
    is.neq r1555 r1564 into r1571;
    and r1570 r1571 into r1572;
    and r1569 r1572 into r1573;
    is.eq r1557 0u32 into r1574;
    is.neq r1554 r1564 into r1575;
    is.neq r1555 r1564 into r1576;
    and r1575 r1576 into r1577;
    is.neq r1556 r1564 into r1578;
    and r1577 r1578 into r1579;
    and r1574 r1579 into r1580;
    is.eq r1558 0u32 into r1581;
    is.neq r1554 r1564 into r1582;
    is.neq r1555 r1564 into r1583;
    and r1582 r1583 into r1584;
    is.neq r1556 r1564 into r1585;
    and r1584 r1585 into r1586;
    is.neq r1557 r1564 into r1587;
    and r1586 r1587 into r1588;
    and r1581 r1588 into r1589;
    is.eq r1559 0u32 into r1590;
    is.neq r1554 r1564 into r1591;
    is.neq r1555 r1564 into r1592;
    and r1591 r1592 into r1593;
    is.neq r1556 r1564 into r1594;
    and r1593 r1594 into r1595;
    is.neq r1557 r1564 into r1596;
    and r1595 r1596 into r1597;
    is.neq r1558 r1564 into r1598;
    and r1597 r1598 into r1599;
    and r1590 r1599 into r1600;
    ternary r1600 r1564 r1559 into r1601;
    ternary r1600 true r1560 into r1602;
    ternary r1589 r1564 r1558 into r1603;
    ternary r1589 r1559 r1601 into r1604;
    ternary r1589 r1560 r1602 into r1605;
    ternary r1580 r1564 r1557 into r1606;
    ternary r1580 r1558 r1603 into r1607;
    ternary r1580 r1559 r1604 into r1608;
    ternary r1580 r1560 r1605 into r1609;
    ternary r1573 r1564 r1556 into r1610;
    ternary r1573 r1557 r1606 into r1611;
    ternary r1573 r1558 r1607 into r1612;
    ternary r1573 r1559 r1608 into r1613;
    ternary r1573 r1560 r1609 into r1614;
    ternary r1568 r1564 r1555 into r1615;
    ternary r1568 r1556 r1610 into r1616;
    ternary r1568 r1557 r1611 into r1617;
    ternary r1568 r1558 r1612 into r1618;
    ternary r1568 r1559 r1613 into r1619;
    ternary r1568 r1560 r1614 into r1620;
    ternary r1565 r1564 r1554 into r1621;
    ternary r1565 r1555 r1615 into r1622;
    ternary r1565 r1556 r1616 into r1623;
    ternary r1565 r1557 r1617 into r1624;
    ternary r1565 r1558 r1618 into r1625;
    ternary r1565 r1559 r1619 into r1626;
    ternary r1565 r1560 r1620 into r1627;
    ternary r1562 r1621 r1554 into r1628;
    ternary r1562 r1622 r1555 into r1629;
    ternary r1562 r1623 r1556 into r1630;
    ternary r1562 r1624 r1557 into r1631;
    ternary r1562 r1625 r1558 into r1632;
    ternary r1562 r1626 r1559 into r1633;
    ternary r1562 r1627 r1560 into r1634;
    rand.chacha into r1635 as u32;
    not r1634 into r1636;
    mod r1635 33u32 into r1637;
    add r1637 1u32 into r1638;
    is.eq r1628 0u32 into r1639;
    is.eq r1629 0u32 into r1640;
    is.neq r1628 r1638 into r1641;
    and r1640 r1641 into r1642;
    is.eq r1630 0u32 into r1643;
    is.neq r1628 r1638 into r1644;
    is.neq r1629 r1638 into r1645;
    and r1644 r1645 into r1646;
    and r1643 r1646 into r1647;
    is.eq r1631 0u32 into r1648;
    is.neq r1628 r1638 into r1649;
    is.neq r1629 r1638 into r1650;
    and r1649 r1650 into r1651;
    is.neq r1630 r1638 into r1652;
    and r1651 r1652 into r1653;
    and r1648 r1653 into r1654;
    is.eq r1632 0u32 into r1655;
    is.neq r1628 r1638 into r1656;
    is.neq r1629 r1638 into r1657;
    and r1656 r1657 into r1658;
    is.neq r1630 r1638 into r1659;
    and r1658 r1659 into r1660;
    is.neq r1631 r1638 into r1661;
    and r1660 r1661 into r1662;
    and r1655 r1662 into r1663;
    is.eq r1633 0u32 into r1664;
    is.neq r1628 r1638 into r1665;
    is.neq r1629 r1638 into r1666;
    and r1665 r1666 into r1667;
    is.neq r1630 r1638 into r1668;
    and r1667 r1668 into r1669;
    is.neq r1631 r1638 into r1670;
    and r1669 r1670 into r1671;
    is.neq r1632 r1638 into r1672;
    and r1671 r1672 into r1673;
    and r1664 r1673 into r1674;
    ternary r1674 r1638 r1633 into r1675;
    ternary r1674 true r1634 into r1676;
    ternary r1663 r1638 r1632 into r1677;
    ternary r1663 r1633 r1675 into r1678;
    ternary r1663 r1634 r1676 into r1679;
    ternary r1654 r1638 r1631 into r1680;
    ternary r1654 r1632 r1677 into r1681;
    ternary r1654 r1633 r1678 into r1682;
    ternary r1654 r1634 r1679 into r1683;
    ternary r1647 r1638 r1630 into r1684;
    ternary r1647 r1631 r1680 into r1685;
    ternary r1647 r1632 r1681 into r1686;
    ternary r1647 r1633 r1682 into r1687;
    ternary r1647 r1634 r1683 into r1688;
    ternary r1642 r1638 r1629 into r1689;
    ternary r1642 r1630 r1684 into r1690;
    ternary r1642 r1631 r1685 into r1691;
    ternary r1642 r1632 r1686 into r1692;
    ternary r1642 r1633 r1687 into r1693;
    ternary r1642 r1634 r1688 into r1694;
    ternary r1639 r1638 r1628 into r1695;
    ternary r1639 r1629 r1689 into r1696;
    ternary r1639 r1630 r1690 into r1697;
    ternary r1639 r1631 r1691 into r1698;
    ternary r1639 r1632 r1692 into r1699;
    ternary r1639 r1633 r1693 into r1700;
    ternary r1639 r1634 r1694 into r1701;
    ternary r1636 r1695 r1628 into r1702;
    ternary r1636 r1696 r1629 into r1703;
    ternary r1636 r1697 r1630 into r1704;
    ternary r1636 r1698 r1631 into r1705;
    ternary r1636 r1699 r1632 into r1706;
    ternary r1636 r1700 r1633 into r1707;
    ternary r1636 r1701 r1634 into r1708;
    rand.chacha into r1709 as u32;
    not r1708 into r1710;
    mod r1709 33u32 into r1711;
    add r1711 1u32 into r1712;
    is.eq r1702 0u32 into r1713;
    is.eq r1703 0u32 into r1714;
    is.neq r1702 r1712 into r1715;
    and r1714 r1715 into r1716;
    is.eq r1704 0u32 into r1717;
    is.neq r1702 r1712 into r1718;
    is.neq r1703 r1712 into r1719;
    and r1718 r1719 into r1720;
    and r1717 r1720 into r1721;
    is.eq r1705 0u32 into r1722;
    is.neq r1702 r1712 into r1723;
    is.neq r1703 r1712 into r1724;
    and r1723 r1724 into r1725;
    is.neq r1704 r1712 into r1726;
    and r1725 r1726 into r1727;
    and r1722 r1727 into r1728;
    is.eq r1706 0u32 into r1729;
    is.neq r1702 r1712 into r1730;
    is.neq r1703 r1712 into r1731;
    and r1730 r1731 into r1732;
    is.neq r1704 r1712 into r1733;
    and r1732 r1733 into r1734;
    is.neq r1705 r1712 into r1735;
    and r1734 r1735 into r1736;
    and r1729 r1736 into r1737;
    is.eq r1707 0u32 into r1738;
    is.neq r1702 r1712 into r1739;
    is.neq r1703 r1712 into r1740;
    and r1739 r1740 into r1741;
    is.neq r1704 r1712 into r1742;
    and r1741 r1742 into r1743;
    is.neq r1705 r1712 into r1744;
    and r1743 r1744 into r1745;
    is.neq r1706 r1712 into r1746;
    and r1745 r1746 into r1747;
    and r1738 r1747 into r1748;
    ternary r1748 r1712 r1707 into r1749;
    ternary r1748 true r1708 into r1750;
    ternary r1737 r1712 r1706 into r1751;
    ternary r1737 r1707 r1749 into r1752;
    ternary r1737 r1708 r1750 into r1753;
    ternary r1728 r1712 r1705 into r1754;
    ternary r1728 r1706 r1751 into r1755;
    ternary r1728 r1707 r1752 into r1756;
    ternary r1728 r1708 r1753 into r1757;
    ternary r1721 r1712 r1704 into r1758;
    ternary r1721 r1705 r1754 into r1759;
    ternary r1721 r1706 r1755 into r1760;
    ternary r1721 r1707 r1756 into r1761;
    ternary r1721 r1708 r1757 into r1762;
    ternary r1716 r1712 r1703 into r1763;
    ternary r1716 r1704 r1758 into r1764;
    ternary r1716 r1705 r1759 into r1765;
    ternary r1716 r1706 r1760 into r1766;
    ternary r1716 r1707 r1761 into r1767;
    ternary r1716 r1708 r1762 into r1768;
    ternary r1713 r1712 r1702 into r1769;
    ternary r1713 r1703 r1763 into r1770;
    ternary r1713 r1704 r1764 into r1771;
    ternary r1713 r1705 r1765 into r1772;
    ternary r1713 r1706 r1766 into r1773;
    ternary r1713 r1707 r1767 into r1774;
    ternary r1713 r1708 r1768 into r1775;
    ternary r1710 r1769 r1702 into r1776;
    ternary r1710 r1770 r1703 into r1777;
    ternary r1710 r1771 r1704 into r1778;
    ternary r1710 r1772 r1705 into r1779;
    ternary r1710 r1773 r1706 into r1780;
    ternary r1710 r1774 r1707 into r1781;
    ternary r1710 r1775 r1708 into r1782;
    rand.chacha into r1783 as u32;
    not r1782 into r1784;
    mod r1783 33u32 into r1785;
    add r1785 1u32 into r1786;
    is.eq r1776 0u32 into r1787;
    is.eq r1777 0u32 into r1788;
    is.neq r1776 r1786 into r1789;
    and r1788 r1789 into r1790;
    is.eq r1778 0u32 into r1791;
    is.neq r1776 r1786 into r1792;
    is.neq r1777 r1786 into r1793;
    and r1792 r1793 into r1794;
    and r1791 r1794 into r1795;
    is.eq r1779 0u32 into r1796;
    is.neq r1776 r1786 into r1797;
    is.neq r1777 r1786 into r1798;
    and r1797 r1798 into r1799;
    is.neq r1778 r1786 into r1800;
    and r1799 r1800 into r1801;
    and r1796 r1801 into r1802;
    is.eq r1780 0u32 into r1803;
    is.neq r1776 r1786 into r1804;
    is.neq r1777 r1786 into r1805;
    and r1804 r1805 into r1806;
    is.neq r1778 r1786 into r1807;
    and r1806 r1807 into r1808;
    is.neq r1779 r1786 into r1809;
    and r1808 r1809 into r1810;
    and r1803 r1810 into r1811;
    is.eq r1781 0u32 into r1812;
    is.neq r1776 r1786 into r1813;
    is.neq r1777 r1786 into r1814;
    and r1813 r1814 into r1815;
    is.neq r1778 r1786 into r1816;
    and r1815 r1816 into r1817;
    is.neq r1779 r1786 into r1818;
    and r1817 r1818 into r1819;
    is.neq r1780 r1786 into r1820;
    and r1819 r1820 into r1821;
    and r1812 r1821 into r1822;
    ternary r1822 r1786 r1781 into r1823;
    ternary r1822 true r1782 into r1824;
    ternary r1811 r1786 r1780 into r1825;
    ternary r1811 r1781 r1823 into r1826;
    ternary r1811 r1782 r1824 into r1827;
    ternary r1802 r1786 r1779 into r1828;
    ternary r1802 r1780 r1825 into r1829;
    ternary r1802 r1781 r1826 into r1830;
    ternary r1802 r1782 r1827 into r1831;
    ternary r1795 r1786 r1778 into r1832;
    ternary r1795 r1779 r1828 into r1833;
    ternary r1795 r1780 r1829 into r1834;
    ternary r1795 r1781 r1830 into r1835;
    ternary r1795 r1782 r1831 into r1836;
    ternary r1790 r1786 r1777 into r1837;
    ternary r1790 r1778 r1832 into r1838;
    ternary r1790 r1779 r1833 into r1839;
    ternary r1790 r1780 r1834 into r1840;
    ternary r1790 r1781 r1835 into r1841;
    ternary r1790 r1782 r1836 into r1842;
    ternary r1787 r1786 r1776 into r1843;
    ternary r1787 r1777 r1837 into r1844;
    ternary r1787 r1778 r1838 into r1845;
    ternary r1787 r1779 r1839 into r1846;
    ternary r1787 r1780 r1840 into r1847;
    ternary r1787 r1781 r1841 into r1848;
    ternary r1787 r1782 r1842 into r1849;
    ternary r1784 r1843 r1776 into r1850;
    ternary r1784 r1844 r1777 into r1851;
    ternary r1784 r1845 r1778 into r1852;
    ternary r1784 r1846 r1779 into r1853;
    ternary r1784 r1847 r1780 into r1854;
    ternary r1784 r1848 r1781 into r1855;
    ternary r1784 r1849 r1782 into r1856;
    rand.chacha into r1857 as u32;
    not r1856 into r1858;
    mod r1857 33u32 into r1859;
    add r1859 1u32 into r1860;
    is.eq r1850 0u32 into r1861;
    is.eq r1851 0u32 into r1862;
    is.neq r1850 r1860 into r1863;
    and r1862 r1863 into r1864;
    is.eq r1852 0u32 into r1865;
    is.neq r1850 r1860 into r1866;
    is.neq r1851 r1860 into r1867;
    and r1866 r1867 into r1868;
    and r1865 r1868 into r1869;
    is.eq r1853 0u32 into r1870;
    is.neq r1850 r1860 into r1871;
    is.neq r1851 r1860 into r1872;
    and r1871 r1872 into r1873;
    is.neq r1852 r1860 into r1874;
    and r1873 r1874 into r1875;
    and r1870 r1875 into r1876;
    is.eq r1854 0u32 into r1877;
    is.neq r1850 r1860 into r1878;
    is.neq r1851 r1860 into r1879;
    and r1878 r1879 into r1880;
    is.neq r1852 r1860 into r1881;
    and r1880 r1881 into r1882;
    is.neq r1853 r1860 into r1883;
    and r1882 r1883 into r1884;
    and r1877 r1884 into r1885;
    is.eq r1855 0u32 into r1886;
    is.neq r1850 r1860 into r1887;
    is.neq r1851 r1860 into r1888;
    and r1887 r1888 into r1889;
    is.neq r1852 r1860 into r1890;
    and r1889 r1890 into r1891;
    is.neq r1853 r1860 into r1892;
    and r1891 r1892 into r1893;
    is.neq r1854 r1860 into r1894;
    and r1893 r1894 into r1895;
    and r1886 r1895 into r1896;
    ternary r1896 r1860 r1855 into r1897;
    ternary r1896 true r1856 into r1898;
    ternary r1885 r1860 r1854 into r1899;
    ternary r1885 r1855 r1897 into r1900;
    ternary r1885 r1856 r1898 into r1901;
    ternary r1876 r1860 r1853 into r1902;
    ternary r1876 r1854 r1899 into r1903;
    ternary r1876 r1855 r1900 into r1904;
    ternary r1876 r1856 r1901 into r1905;
    ternary r1869 r1860 r1852 into r1906;
    ternary r1869 r1853 r1902 into r1907;
    ternary r1869 r1854 r1903 into r1908;
    ternary r1869 r1855 r1904 into r1909;
    ternary r1869 r1856 r1905 into r1910;
    ternary r1864 r1860 r1851 into r1911;
    ternary r1864 r1852 r1906 into r1912;
    ternary r1864 r1853 r1907 into r1913;
    ternary r1864 r1854 r1908 into r1914;
    ternary r1864 r1855 r1909 into r1915;
    ternary r1864 r1856 r1910 into r1916;
    ternary r1861 r1860 r1850 into r1917;
    ternary r1861 r1851 r1911 into r1918;
    ternary r1861 r1852 r1912 into r1919;
    ternary r1861 r1853 r1913 into r1920;
    ternary r1861 r1854 r1914 into r1921;
    ternary r1861 r1855 r1915 into r1922;
    ternary r1861 r1856 r1916 into r1923;
    ternary r1858 r1917 r1850 into r1924;
    ternary r1858 r1918 r1851 into r1925;
    ternary r1858 r1919 r1852 into r1926;
    ternary r1858 r1920 r1853 into r1927;
    ternary r1858 r1921 r1854 into r1928;
    ternary r1858 r1922 r1855 into r1929;
    ternary r1858 r1923 r1856 into r1930;
    rand.chacha into r1931 as u32;
    not r1930 into r1932;
    mod r1931 33u32 into r1933;
    add r1933 1u32 into r1934;
    is.eq r1924 0u32 into r1935;
    is.eq r1925 0u32 into r1936;
    is.neq r1924 r1934 into r1937;
    and r1936 r1937 into r1938;
    is.eq r1926 0u32 into r1939;
    is.neq r1924 r1934 into r1940;
    is.neq r1925 r1934 into r1941;
    and r1940 r1941 into r1942;
    and r1939 r1942 into r1943;
    is.eq r1927 0u32 into r1944;
    is.neq r1924 r1934 into r1945;
    is.neq r1925 r1934 into r1946;
    and r1945 r1946 into r1947;
    is.neq r1926 r1934 into r1948;
    and r1947 r1948 into r1949;
    and r1944 r1949 into r1950;
    is.eq r1928 0u32 into r1951;
    is.neq r1924 r1934 into r1952;
    is.neq r1925 r1934 into r1953;
    and r1952 r1953 into r1954;
    is.neq r1926 r1934 into r1955;
    and r1954 r1955 into r1956;
    is.neq r1927 r1934 into r1957;
    and r1956 r1957 into r1958;
    and r1951 r1958 into r1959;
    is.eq r1929 0u32 into r1960;
    is.neq r1924 r1934 into r1961;
    is.neq r1925 r1934 into r1962;
    and r1961 r1962 into r1963;
    is.neq r1926 r1934 into r1964;
    and r1963 r1964 into r1965;
    is.neq r1927 r1934 into r1966;
    and r1965 r1966 into r1967;
    is.neq r1928 r1934 into r1968;
    and r1967 r1968 into r1969;
    and r1960 r1969 into r1970;
    ternary r1970 r1934 r1929 into r1971;
    ternary r1970 true r1930 into r1972;
    ternary r1959 r1934 r1928 into r1973;
    ternary r1959 r1929 r1971 into r1974;
    ternary r1959 r1930 r1972 into r1975;
    ternary r1950 r1934 r1927 into r1976;
    ternary r1950 r1928 r1973 into r1977;
    ternary r1950 r1929 r1974 into r1978;
    ternary r1950 r1930 r1975 into r1979;
    ternary r1943 r1934 r1926 into r1980;
    ternary r1943 r1927 r1976 into r1981;
    ternary r1943 r1928 r1977 into r1982;
    ternary r1943 r1929 r1978 into r1983;
    ternary r1943 r1930 r1979 into r1984;
    ternary r1938 r1934 r1925 into r1985;
    ternary r1938 r1926 r1980 into r1986;
    ternary r1938 r1927 r1981 into r1987;
    ternary r1938 r1928 r1982 into r1988;
    ternary r1938 r1929 r1983 into r1989;
    ternary r1938 r1930 r1984 into r1990;
    ternary r1935 r1934 r1924 into r1991;
    ternary r1935 r1925 r1985 into r1992;
    ternary r1935 r1926 r1986 into r1993;
    ternary r1935 r1927 r1987 into r1994;
    ternary r1935 r1928 r1988 into r1995;
    ternary r1935 r1929 r1989 into r1996;
    ternary r1935 r1930 r1990 into r1997;
    ternary r1932 r1991 r1924 into r1998;
    ternary r1932 r1992 r1925 into r1999;
    ternary r1932 r1993 r1926 into r2000;
    ternary r1932 r1994 r1927 into r2001;
    ternary r1932 r1995 r1928 into r2002;
    ternary r1932 r1996 r1929 into r2003;
    ternary r1932 r1997 r1930 into r2004;
    rand.chacha into r2005 as u32;
    not r2004 into r2006;
    mod r2005 33u32 into r2007;
    add r2007 1u32 into r2008;
    is.eq r1998 0u32 into r2009;
    is.eq r1999 0u32 into r2010;
    is.neq r1998 r2008 into r2011;
    and r2010 r2011 into r2012;
    is.eq r2000 0u32 into r2013;
    is.neq r1998 r2008 into r2014;
    is.neq r1999 r2008 into r2015;
    and r2014 r2015 into r2016;
    and r2013 r2016 into r2017;
    is.eq r2001 0u32 into r2018;
    is.neq r1998 r2008 into r2019;
    is.neq r1999 r2008 into r2020;
    and r2019 r2020 into r2021;
    is.neq r2000 r2008 into r2022;
    and r2021 r2022 into r2023;
    and r2018 r2023 into r2024;
    is.eq r2002 0u32 into r2025;
    is.neq r1998 r2008 into r2026;
    is.neq r1999 r2008 into r2027;
    and r2026 r2027 into r2028;
    is.neq r2000 r2008 into r2029;
    and r2028 r2029 into r2030;
    is.neq r2001 r2008 into r2031;
    and r2030 r2031 into r2032;
    and r2025 r2032 into r2033;
    is.eq r2003 0u32 into r2034;
    is.neq r1998 r2008 into r2035;
    is.neq r1999 r2008 into r2036;
    and r2035 r2036 into r2037;
    is.neq r2000 r2008 into r2038;
    and r2037 r2038 into r2039;
    is.neq r2001 r2008 into r2040;
    and r2039 r2040 into r2041;
    is.neq r2002 r2008 into r2042;
    and r2041 r2042 into r2043;
    and r2034 r2043 into r2044;
    ternary r2044 r2008 r2003 into r2045;
    ternary r2044 true r2004 into r2046;
    ternary r2033 r2008 r2002 into r2047;
    ternary r2033 r2003 r2045 into r2048;
    ternary r2033 r2004 r2046 into r2049;
    ternary r2024 r2008 r2001 into r2050;
    ternary r2024 r2002 r2047 into r2051;
    ternary r2024 r2003 r2048 into r2052;
    ternary r2024 r2004 r2049 into r2053;
    ternary r2017 r2008 r2000 into r2054;
    ternary r2017 r2001 r2050 into r2055;
    ternary r2017 r2002 r2051 into r2056;
    ternary r2017 r2003 r2052 into r2057;
    ternary r2017 r2004 r2053 into r2058;
    ternary r2012 r2008 r1999 into r2059;
    ternary r2012 r2000 r2054 into r2060;
    ternary r2012 r2001 r2055 into r2061;
    ternary r2012 r2002 r2056 into r2062;
    ternary r2012 r2003 r2057 into r2063;
    ternary r2012 r2004 r2058 into r2064;
    ternary r2009 r2008 r1998 into r2065;
    ternary r2009 r1999 r2059 into r2066;
    ternary r2009 r2000 r2060 into r2067;
    ternary r2009 r2001 r2061 into r2068;
    ternary r2009 r2002 r2062 into r2069;
    ternary r2009 r2003 r2063 into r2070;
    ternary r2009 r2004 r2064 into r2071;
    ternary r2006 r2065 r1998 into r2072;
    ternary r2006 r2066 r1999 into r2073;
    ternary r2006 r2067 r2000 into r2074;
    ternary r2006 r2068 r2001 into r2075;
    ternary r2006 r2069 r2002 into r2076;
    ternary r2006 r2070 r2003 into r2077;
    ternary r2006 r2071 r2004 into r2078;
    rand.chacha into r2079 as u32;
    not r2078 into r2080;
    mod r2079 33u32 into r2081;
    add r2081 1u32 into r2082;
    is.eq r2072 0u32 into r2083;
    is.eq r2073 0u32 into r2084;
    is.neq r2072 r2082 into r2085;
    and r2084 r2085 into r2086;
    is.eq r2074 0u32 into r2087;
    is.neq r2072 r2082 into r2088;
    is.neq r2073 r2082 into r2089;
    and r2088 r2089 into r2090;
    and r2087 r2090 into r2091;
    is.eq r2075 0u32 into r2092;
    is.neq r2072 r2082 into r2093;
    is.neq r2073 r2082 into r2094;
    and r2093 r2094 into r2095;
    is.neq r2074 r2082 into r2096;
    and r2095 r2096 into r2097;
    and r2092 r2097 into r2098;
    is.eq r2076 0u32 into r2099;
    is.neq r2072 r2082 into r2100;
    is.neq r2073 r2082 into r2101;
    and r2100 r2101 into r2102;
    is.neq r2074 r2082 into r2103;
    and r2102 r2103 into r2104;
    is.neq r2075 r2082 into r2105;
    and r2104 r2105 into r2106;
    and r2099 r2106 into r2107;
    is.eq r2077 0u32 into r2108;
    is.neq r2072 r2082 into r2109;
    is.neq r2073 r2082 into r2110;
    and r2109 r2110 into r2111;
    is.neq r2074 r2082 into r2112;
    and r2111 r2112 into r2113;
    is.neq r2075 r2082 into r2114;
    and r2113 r2114 into r2115;
    is.neq r2076 r2082 into r2116;
    and r2115 r2116 into r2117;
    and r2108 r2117 into r2118;
    ternary r2118 r2082 r2077 into r2119;
    ternary r2118 true r2078 into r2120;
    ternary r2107 r2082 r2076 into r2121;
    ternary r2107 r2077 r2119 into r2122;
    ternary r2107 r2078 r2120 into r2123;
    ternary r2098 r2082 r2075 into r2124;
    ternary r2098 r2076 r2121 into r2125;
    ternary r2098 r2077 r2122 into r2126;
    ternary r2098 r2078 r2123 into r2127;
    ternary r2091 r2082 r2074 into r2128;
    ternary r2091 r2075 r2124 into r2129;
    ternary r2091 r2076 r2125 into r2130;
    ternary r2091 r2077 r2126 into r2131;
    ternary r2091 r2078 r2127 into r2132;
    ternary r2086 r2082 r2073 into r2133;
    ternary r2086 r2074 r2128 into r2134;
    ternary r2086 r2075 r2129 into r2135;
    ternary r2086 r2076 r2130 into r2136;
    ternary r2086 r2077 r2131 into r2137;
    ternary r2086 r2078 r2132 into r2138;
    ternary r2083 r2082 r2072 into r2139;
    ternary r2083 r2073 r2133 into r2140;
    ternary r2083 r2074 r2134 into r2141;
    ternary r2083 r2075 r2135 into r2142;
    ternary r2083 r2076 r2136 into r2143;
    ternary r2083 r2077 r2137 into r2144;
    ternary r2083 r2078 r2138 into r2145;
    ternary r2080 r2139 r2072 into r2146;
    ternary r2080 r2140 r2073 into r2147;
    ternary r2080 r2141 r2074 into r2148;
    ternary r2080 r2142 r2075 into r2149;
    ternary r2080 r2143 r2076 into r2150;
    ternary r2080 r2144 r2077 into r2151;
    ternary r2080 r2145 r2078 into r2152;
    rand.chacha into r2153 as u32;
    not r2152 into r2154;
    mod r2153 33u32 into r2155;
    add r2155 1u32 into r2156;
    is.eq r2146 0u32 into r2157;
    is.eq r2147 0u32 into r2158;
    is.neq r2146 r2156 into r2159;
    and r2158 r2159 into r2160;
    is.eq r2148 0u32 into r2161;
    is.neq r2146 r2156 into r2162;
    is.neq r2147 r2156 into r2163;
    and r2162 r2163 into r2164;
    and r2161 r2164 into r2165;
    is.eq r2149 0u32 into r2166;
    is.neq r2146 r2156 into r2167;
    is.neq r2147 r2156 into r2168;
    and r2167 r2168 into r2169;
    is.neq r2148 r2156 into r2170;
    and r2169 r2170 into r2171;
    and r2166 r2171 into r2172;
    is.eq r2150 0u32 into r2173;
    is.neq r2146 r2156 into r2174;
    is.neq r2147 r2156 into r2175;
    and r2174 r2175 into r2176;
    is.neq r2148 r2156 into r2177;
    and r2176 r2177 into r2178;
    is.neq r2149 r2156 into r2179;
    and r2178 r2179 into r2180;
    and r2173 r2180 into r2181;
    is.eq r2151 0u32 into r2182;
    is.neq r2146 r2156 into r2183;
    is.neq r2147 r2156 into r2184;
    and r2183 r2184 into r2185;
    is.neq r2148 r2156 into r2186;
    and r2185 r2186 into r2187;
    is.neq r2149 r2156 into r2188;
    and r2187 r2188 into r2189;
    is.neq r2150 r2156 into r2190;
    and r2189 r2190 into r2191;
    and r2182 r2191 into r2192;
    ternary r2192 r2156 r2151 into r2193;
    ternary r2192 true r2152 into r2194;
    ternary r2181 r2156 r2150 into r2195;
    ternary r2181 r2151 r2193 into r2196;
    ternary r2181 r2152 r2194 into r2197;
    ternary r2172 r2156 r2149 into r2198;
    ternary r2172 r2150 r2195 into r2199;
    ternary r2172 r2151 r2196 into r2200;
    ternary r2172 r2152 r2197 into r2201;
    ternary r2165 r2156 r2148 into r2202;
    ternary r2165 r2149 r2198 into r2203;
    ternary r2165 r2150 r2199 into r2204;
    ternary r2165 r2151 r2200 into r2205;
    ternary r2165 r2152 r2201 into r2206;
    ternary r2160 r2156 r2147 into r2207;
    ternary r2160 r2148 r2202 into r2208;
    ternary r2160 r2149 r2203 into r2209;
    ternary r2160 r2150 r2204 into r2210;
    ternary r2160 r2151 r2205 into r2211;
    ternary r2160 r2152 r2206 into r2212;
    ternary r2157 r2156 r2146 into r2213;
    ternary r2157 r2147 r2207 into r2214;
    ternary r2157 r2148 r2208 into r2215;
    ternary r2157 r2149 r2209 into r2216;
    ternary r2157 r2150 r2210 into r2217;
    ternary r2157 r2151 r2211 into r2218;
    ternary r2157 r2152 r2212 into r2219;
    ternary r2154 r2213 r2146 into r2220;
    ternary r2154 r2214 r2147 into r2221;
    ternary r2154 r2215 r2148 into r2222;
    ternary r2154 r2216 r2149 into r2223;
    ternary r2154 r2217 r2150 into r2224;
    ternary r2154 r2218 r2151 into r2225;
    ternary r2154 r2219 r2152 into r2226;
    rand.chacha into r2227 as u32;
    not r2226 into r2228;
    mod r2227 33u32 into r2229;
    add r2229 1u32 into r2230;
    is.eq r2220 0u32 into r2231;
    is.eq r2221 0u32 into r2232;
    is.neq r2220 r2230 into r2233;
    and r2232 r2233 into r2234;
    is.eq r2222 0u32 into r2235;
    is.neq r2220 r2230 into r2236;
    is.neq r2221 r2230 into r2237;
    and r2236 r2237 into r2238;
    and r2235 r2238 into r2239;
    is.eq r2223 0u32 into r2240;
    is.neq r2220 r2230 into r2241;
    is.neq r2221 r2230 into r2242;
    and r2241 r2242 into r2243;
    is.neq r2222 r2230 into r2244;
    and r2243 r2244 into r2245;
    and r2240 r2245 into r2246;
    is.eq r2224 0u32 into r2247;
    is.neq r2220 r2230 into r2248;
    is.neq r2221 r2230 into r2249;
    and r2248 r2249 into r2250;
    is.neq r2222 r2230 into r2251;
    and r2250 r2251 into r2252;
    is.neq r2223 r2230 into r2253;
    and r2252 r2253 into r2254;
    and r2247 r2254 into r2255;
    is.eq r2225 0u32 into r2256;
    is.neq r2220 r2230 into r2257;
    is.neq r2221 r2230 into r2258;
    and r2257 r2258 into r2259;
    is.neq r2222 r2230 into r2260;
    and r2259 r2260 into r2261;
    is.neq r2223 r2230 into r2262;
    and r2261 r2262 into r2263;
    is.neq r2224 r2230 into r2264;
    and r2263 r2264 into r2265;
    and r2256 r2265 into r2266;
    ternary r2266 r2230 r2225 into r2267;
    ternary r2266 true r2226 into r2268;
    ternary r2255 r2230 r2224 into r2269;
    ternary r2255 r2225 r2267 into r2270;
    ternary r2255 r2226 r2268 into r2271;
    ternary r2246 r2230 r2223 into r2272;
    ternary r2246 r2224 r2269 into r2273;
    ternary r2246 r2225 r2270 into r2274;
    ternary r2246 r2226 r2271 into r2275;
    ternary r2239 r2230 r2222 into r2276;
    ternary r2239 r2223 r2272 into r2277;
    ternary r2239 r2224 r2273 into r2278;
    ternary r2239 r2225 r2274 into r2279;
    ternary r2239 r2226 r2275 into r2280;
    ternary r2234 r2230 r2221 into r2281;
    ternary r2234 r2222 r2276 into r2282;
    ternary r2234 r2223 r2277 into r2283;
    ternary r2234 r2224 r2278 into r2284;
    ternary r2234 r2225 r2279 into r2285;
    ternary r2234 r2226 r2280 into r2286;
    ternary r2231 r2230 r2220 into r2287;
    ternary r2231 r2221 r2281 into r2288;
    ternary r2231 r2222 r2282 into r2289;
    ternary r2231 r2223 r2283 into r2290;
    ternary r2231 r2224 r2284 into r2291;
    ternary r2231 r2225 r2285 into r2292;
    ternary r2231 r2226 r2286 into r2293;
    ternary r2228 r2287 r2220 into r2294;
    ternary r2228 r2288 r2221 into r2295;
    ternary r2228 r2289 r2222 into r2296;
    ternary r2228 r2290 r2223 into r2297;
    ternary r2228 r2291 r2224 into r2298;
    ternary r2228 r2292 r2225 into r2299;
    ternary r2228 r2293 r2226 into r2300;
    rand.chacha into r2301 as u32;
    not r2300 into r2302;
    mod r2301 33u32 into r2303;
    add r2303 1u32 into r2304;
    is.eq r2294 0u32 into r2305;
    is.eq r2295 0u32 into r2306;
    is.neq r2294 r2304 into r2307;
    and r2306 r2307 into r2308;
    is.eq r2296 0u32 into r2309;
    is.neq r2294 r2304 into r2310;
    is.neq r2295 r2304 into r2311;
    and r2310 r2311 into r2312;
    and r2309 r2312 into r2313;
    is.eq r2297 0u32 into r2314;
    is.neq r2294 r2304 into r2315;
    is.neq r2295 r2304 into r2316;
    and r2315 r2316 into r2317;
    is.neq r2296 r2304 into r2318;
    and r2317 r2318 into r2319;
    and r2314 r2319 into r2320;
    is.eq r2298 0u32 into r2321;
    is.neq r2294 r2304 into r2322;
    is.neq r2295 r2304 into r2323;
    and r2322 r2323 into r2324;
    is.neq r2296 r2304 into r2325;
    and r2324 r2325 into r2326;
    is.neq r2297 r2304 into r2327;
    and r2326 r2327 into r2328;
    and r2321 r2328 into r2329;
    is.eq r2299 0u32 into r2330;
    is.neq r2294 r2304 into r2331;
    is.neq r2295 r2304 into r2332;
    and r2331 r2332 into r2333;
    is.neq r2296 r2304 into r2334;
    and r2333 r2334 into r2335;
    is.neq r2297 r2304 into r2336;
    and r2335 r2336 into r2337;
    is.neq r2298 r2304 into r2338;
    and r2337 r2338 into r2339;
    and r2330 r2339 into r2340;
    ternary r2340 r2304 r2299 into r2341;
    ternary r2340 true r2300 into r2342;
    ternary r2329 r2304 r2298 into r2343;
    ternary r2329 r2299 r2341 into r2344;
    ternary r2329 r2300 r2342 into r2345;
    ternary r2320 r2304 r2297 into r2346;
    ternary r2320 r2298 r2343 into r2347;
    ternary r2320 r2299 r2344 into r2348;
    ternary r2320 r2300 r2345 into r2349;
    ternary r2313 r2304 r2296 into r2350;
    ternary r2313 r2297 r2346 into r2351;
    ternary r2313 r2298 r2347 into r2352;
    ternary r2313 r2299 r2348 into r2353;
    ternary r2313 r2300 r2349 into r2354;
    ternary r2308 r2304 r2295 into r2355;
    ternary r2308 r2296 r2350 into r2356;
    ternary r2308 r2297 r2351 into r2357;
    ternary r2308 r2298 r2352 into r2358;
    ternary r2308 r2299 r2353 into r2359;
    ternary r2308 r2300 r2354 into r2360;
    ternary r2305 r2304 r2294 into r2361;
    ternary r2305 r2295 r2355 into r2362;
    ternary r2305 r2296 r2356 into r2363;
    ternary r2305 r2297 r2357 into r2364;
    ternary r2305 r2298 r2358 into r2365;
    ternary r2305 r2299 r2359 into r2366;
    ternary r2305 r2300 r2360 into r2367;
    ternary r2302 r2361 r2294 into r2368;
    ternary r2302 r2362 r2295 into r2369;
    ternary r2302 r2363 r2296 into r2370;
    ternary r2302 r2364 r2297 into r2371;
    ternary r2302 r2365 r2298 into r2372;
    ternary r2302 r2366 r2299 into r2373;
    ternary r2302 r2367 r2300 into r2374;
    rand.chacha into r2375 as u32;
    not r2374 into r2376;
    mod r2375 33u32 into r2377;
    add r2377 1u32 into r2378;
    is.eq r2368 0u32 into r2379;
    is.eq r2369 0u32 into r2380;
    is.neq r2368 r2378 into r2381;
    and r2380 r2381 into r2382;
    is.eq r2370 0u32 into r2383;
    is.neq r2368 r2378 into r2384;
    is.neq r2369 r2378 into r2385;
    and r2384 r2385 into r2386;
    and r2383 r2386 into r2387;
    is.eq r2371 0u32 into r2388;
    is.neq r2368 r2378 into r2389;
    is.neq r2369 r2378 into r2390;
    and r2389 r2390 into r2391;
    is.neq r2370 r2378 into r2392;
    and r2391 r2392 into r2393;
    and r2388 r2393 into r2394;
    is.eq r2372 0u32 into r2395;
    is.neq r2368 r2378 into r2396;
    is.neq r2369 r2378 into r2397;
    and r2396 r2397 into r2398;
    is.neq r2370 r2378 into r2399;
    and r2398 r2399 into r2400;
    is.neq r2371 r2378 into r2401;
    and r2400 r2401 into r2402;
    and r2395 r2402 into r2403;
    is.eq r2373 0u32 into r2404;
    is.neq r2368 r2378 into r2405;
    is.neq r2369 r2378 into r2406;
    and r2405 r2406 into r2407;
    is.neq r2370 r2378 into r2408;
    and r2407 r2408 into r2409;
    is.neq r2371 r2378 into r2410;
    and r2409 r2410 into r2411;
    is.neq r2372 r2378 into r2412;
    and r2411 r2412 into r2413;
    and r2404 r2413 into r2414;
    ternary r2414 r2378 r2373 into r2415;
    ternary r2414 true r2374 into r2416;
    ternary r2403 r2378 r2372 into r2417;
    ternary r2403 r2373 r2415 into r2418;
    ternary r2403 r2374 r2416 into r2419;
    ternary r2394 r2378 r2371 into r2420;
    ternary r2394 r2372 r2417 into r2421;
    ternary r2394 r2373 r2418 into r2422;
    ternary r2394 r2374 r2419 into r2423;
    ternary r2387 r2378 r2370 into r2424;
    ternary r2387 r2371 r2420 into r2425;
    ternary r2387 r2372 r2421 into r2426;
    ternary r2387 r2373 r2422 into r2427;
    ternary r2387 r2374 r2423 into r2428;
    ternary r2382 r2378 r2369 into r2429;
    ternary r2382 r2370 r2424 into r2430;
    ternary r2382 r2371 r2425 into r2431;
    ternary r2382 r2372 r2426 into r2432;
    ternary r2382 r2373 r2427 into r2433;
    ternary r2382 r2374 r2428 into r2434;
    ternary r2379 r2378 r2368 into r2435;
    ternary r2379 r2369 r2429 into r2436;
    ternary r2379 r2370 r2430 into r2437;
    ternary r2379 r2371 r2431 into r2438;
    ternary r2379 r2372 r2432 into r2439;
    ternary r2379 r2373 r2433 into r2440;
    ternary r2379 r2374 r2434 into r2441;
    ternary r2376 r2435 r2368 into r2442;
    ternary r2376 r2436 r2369 into r2443;
    ternary r2376 r2437 r2370 into r2444;
    ternary r2376 r2438 r2371 into r2445;
    ternary r2376 r2439 r2372 into r2446;
    ternary r2376 r2440 r2373 into r2447;
    ternary r2376 r2441 r2374 into r2448;
    rand.chacha into r2449 as u32;
    not r2448 into r2450;
    mod r2449 33u32 into r2451;
    add r2451 1u32 into r2452;
    is.eq r2442 0u32 into r2453;
    is.eq r2443 0u32 into r2454;
    is.neq r2442 r2452 into r2455;
    and r2454 r2455 into r2456;
    is.eq r2444 0u32 into r2457;
    is.neq r2442 r2452 into r2458;
    is.neq r2443 r2452 into r2459;
    and r2458 r2459 into r2460;
    and r2457 r2460 into r2461;
    is.eq r2445 0u32 into r2462;
    is.neq r2442 r2452 into r2463;
    is.neq r2443 r2452 into r2464;
    and r2463 r2464 into r2465;
    is.neq r2444 r2452 into r2466;
    and r2465 r2466 into r2467;
    and r2462 r2467 into r2468;
    is.eq r2446 0u32 into r2469;
    is.neq r2442 r2452 into r2470;
    is.neq r2443 r2452 into r2471;
    and r2470 r2471 into r2472;
    is.neq r2444 r2452 into r2473;
    and r2472 r2473 into r2474;
    is.neq r2445 r2452 into r2475;
    and r2474 r2475 into r2476;
    and r2469 r2476 into r2477;
    is.eq r2447 0u32 into r2478;
    is.neq r2442 r2452 into r2479;
    is.neq r2443 r2452 into r2480;
    and r2479 r2480 into r2481;
    is.neq r2444 r2452 into r2482;
    and r2481 r2482 into r2483;
    is.neq r2445 r2452 into r2484;
    and r2483 r2484 into r2485;
    is.neq r2446 r2452 into r2486;
    and r2485 r2486 into r2487;
    and r2478 r2487 into r2488;
    ternary r2488 r2452 r2447 into r2489;
    ternary r2488 true r2448 into r2490;
    ternary r2477 r2452 r2446 into r2491;
    ternary r2477 r2447 r2489 into r2492;
    ternary r2477 r2448 r2490 into r2493;
    ternary r2468 r2452 r2445 into r2494;
    ternary r2468 r2446 r2491 into r2495;
    ternary r2468 r2447 r2492 into r2496;
    ternary r2468 r2448 r2493 into r2497;
    ternary r2461 r2452 r2444 into r2498;
    ternary r2461 r2445 r2494 into r2499;
    ternary r2461 r2446 r2495 into r2500;
    ternary r2461 r2447 r2496 into r2501;
    ternary r2461 r2448 r2497 into r2502;
    ternary r2456 r2452 r2443 into r2503;
    ternary r2456 r2444 r2498 into r2504;
    ternary r2456 r2445 r2499 into r2505;
    ternary r2456 r2446 r2500 into r2506;
    ternary r2456 r2447 r2501 into r2507;
    ternary r2456 r2448 r2502 into r2508;
    ternary r2453 r2452 r2442 into r2509;
    ternary r2453 r2443 r2503 into r2510;
    ternary r2453 r2444 r2504 into r2511;
    ternary r2453 r2445 r2505 into r2512;
    ternary r2453 r2446 r2506 into r2513;
    ternary r2453 r2447 r2507 into r2514;
    ternary r2453 r2448 r2508 into r2515;
    ternary r2450 r2509 r2442 into r2516;
    ternary r2450 r2510 r2443 into r2517;
    ternary r2450 r2511 r2444 into r2518;
    ternary r2450 r2512 r2445 into r2519;
    ternary r2450 r2513 r2446 into r2520;
    ternary r2450 r2514 r2447 into r2521;
    ternary r2450 r2515 r2448 into r2522;
    rand.chacha into r2523 as u32;
    not r2522 into r2524;
    mod r2523 33u32 into r2525;
    add r2525 1u32 into r2526;
    is.eq r2516 0u32 into r2527;
    is.eq r2517 0u32 into r2528;
    is.neq r2516 r2526 into r2529;
    and r2528 r2529 into r2530;
    is.eq r2518 0u32 into r2531;
    is.neq r2516 r2526 into r2532;
    is.neq r2517 r2526 into r2533;
    and r2532 r2533 into r2534;
    and r2531 r2534 into r2535;
    is.eq r2519 0u32 into r2536;
    is.neq r2516 r2526 into r2537;
    is.neq r2517 r2526 into r2538;
    and r2537 r2538 into r2539;
    is.neq r2518 r2526 into r2540;
    and r2539 r2540 into r2541;
    and r2536 r2541 into r2542;
    is.eq r2520 0u32 into r2543;
    is.neq r2516 r2526 into r2544;
    is.neq r2517 r2526 into r2545;
    and r2544 r2545 into r2546;
    is.neq r2518 r2526 into r2547;
    and r2546 r2547 into r2548;
    is.neq r2519 r2526 into r2549;
    and r2548 r2549 into r2550;
    and r2543 r2550 into r2551;
    is.eq r2521 0u32 into r2552;
    is.neq r2516 r2526 into r2553;
    is.neq r2517 r2526 into r2554;
    and r2553 r2554 into r2555;
    is.neq r2518 r2526 into r2556;
    and r2555 r2556 into r2557;
    is.neq r2519 r2526 into r2558;
    and r2557 r2558 into r2559;
    is.neq r2520 r2526 into r2560;
    and r2559 r2560 into r2561;
    and r2552 r2561 into r2562;
    ternary r2562 r2526 r2521 into r2563;
    ternary r2562 true r2522 into r2564;
    ternary r2551 r2526 r2520 into r2565;
    ternary r2551 r2521 r2563 into r2566;
    ternary r2551 r2522 r2564 into r2567;
    ternary r2542 r2526 r2519 into r2568;
    ternary r2542 r2520 r2565 into r2569;
    ternary r2542 r2521 r2566 into r2570;
    ternary r2542 r2522 r2567 into r2571;
    ternary r2535 r2526 r2518 into r2572;
    ternary r2535 r2519 r2568 into r2573;
    ternary r2535 r2520 r2569 into r2574;
    ternary r2535 r2521 r2570 into r2575;
    ternary r2535 r2522 r2571 into r2576;
    ternary r2530 r2526 r2517 into r2577;
    ternary r2530 r2518 r2572 into r2578;
    ternary r2530 r2519 r2573 into r2579;
    ternary r2530 r2520 r2574 into r2580;
    ternary r2530 r2521 r2575 into r2581;
    ternary r2530 r2522 r2576 into r2582;
    ternary r2527 r2526 r2516 into r2583;
    ternary r2527 r2517 r2577 into r2584;
    ternary r2527 r2518 r2578 into r2585;
    ternary r2527 r2519 r2579 into r2586;
    ternary r2527 r2520 r2580 into r2587;
    ternary r2527 r2521 r2581 into r2588;
    ternary r2527 r2522 r2582 into r2589;
    ternary r2524 r2583 r2516 into r2590;
    ternary r2524 r2584 r2517 into r2591;
    ternary r2524 r2585 r2518 into r2592;
    ternary r2524 r2586 r2519 into r2593;
    ternary r2524 r2587 r2520 into r2594;
    ternary r2524 r2588 r2521 into r2595;
    ternary r2524 r2589 r2522 into r2596;
    rand.chacha into r2597 as u32;
    not r2596 into r2598;
    mod r2597 33u32 into r2599;
    add r2599 1u32 into r2600;
    is.eq r2590 0u32 into r2601;
    is.eq r2591 0u32 into r2602;
    is.neq r2590 r2600 into r2603;
    and r2602 r2603 into r2604;
    is.eq r2592 0u32 into r2605;
    is.neq r2590 r2600 into r2606;
    is.neq r2591 r2600 into r2607;
    and r2606 r2607 into r2608;
    and r2605 r2608 into r2609;
    is.eq r2593 0u32 into r2610;
    is.neq r2590 r2600 into r2611;
    is.neq r2591 r2600 into r2612;
    and r2611 r2612 into r2613;
    is.neq r2592 r2600 into r2614;
    and r2613 r2614 into r2615;
    and r2610 r2615 into r2616;
    is.eq r2594 0u32 into r2617;
    is.neq r2590 r2600 into r2618;
    is.neq r2591 r2600 into r2619;
    and r2618 r2619 into r2620;
    is.neq r2592 r2600 into r2621;
    and r2620 r2621 into r2622;
    is.neq r2593 r2600 into r2623;
    and r2622 r2623 into r2624;
    and r2617 r2624 into r2625;
    is.eq r2595 0u32 into r2626;
    is.neq r2590 r2600 into r2627;
    is.neq r2591 r2600 into r2628;
    and r2627 r2628 into r2629;
    is.neq r2592 r2600 into r2630;
    and r2629 r2630 into r2631;
    is.neq r2593 r2600 into r2632;
    and r2631 r2632 into r2633;
    is.neq r2594 r2600 into r2634;
    and r2633 r2634 into r2635;
    and r2626 r2635 into r2636;
    ternary r2636 r2600 r2595 into r2637;
    ternary r2636 true r2596 into r2638;
    ternary r2625 r2600 r2594 into r2639;
    ternary r2625 r2595 r2637 into r2640;
    ternary r2625 r2596 r2638 into r2641;
    ternary r2616 r2600 r2593 into r2642;
    ternary r2616 r2594 r2639 into r2643;
    ternary r2616 r2595 r2640 into r2644;
    ternary r2616 r2596 r2641 into r2645;
    ternary r2609 r2600 r2592 into r2646;
    ternary r2609 r2593 r2642 into r2647;
    ternary r2609 r2594 r2643 into r2648;
    ternary r2609 r2595 r2644 into r2649;
    ternary r2609 r2596 r2645 into r2650;
    ternary r2604 r2600 r2591 into r2651;
    ternary r2604 r2592 r2646 into r2652;
    ternary r2604 r2593 r2647 into r2653;
    ternary r2604 r2594 r2648 into r2654;
    ternary r2604 r2595 r2649 into r2655;
    ternary r2604 r2596 r2650 into r2656;
    ternary r2601 r2600 r2590 into r2657;
    ternary r2601 r2591 r2651 into r2658;
    ternary r2601 r2592 r2652 into r2659;
    ternary r2601 r2593 r2653 into r2660;
    ternary r2601 r2594 r2654 into r2661;
    ternary r2601 r2595 r2655 into r2662;
    ternary r2601 r2596 r2656 into r2663;
    ternary r2598 r2657 r2590 into r2664;
    ternary r2598 r2658 r2591 into r2665;
    ternary r2598 r2659 r2592 into r2666;
    ternary r2598 r2660 r2593 into r2667;
    ternary r2598 r2661 r2594 into r2668;
    ternary r2598 r2662 r2595 into r2669;
    ternary r2598 r2663 r2596 into r2670;
    rand.chacha into r2671 as u32;
    not r2670 into r2672;
    mod r2671 33u32 into r2673;
    add r2673 1u32 into r2674;
    is.eq r2664 0u32 into r2675;
    is.eq r2665 0u32 into r2676;
    is.neq r2664 r2674 into r2677;
    and r2676 r2677 into r2678;
    is.eq r2666 0u32 into r2679;
    is.neq r2664 r2674 into r2680;
    is.neq r2665 r2674 into r2681;
    and r2680 r2681 into r2682;
    and r2679 r2682 into r2683;
    is.eq r2667 0u32 into r2684;
    is.neq r2664 r2674 into r2685;
    is.neq r2665 r2674 into r2686;
    and r2685 r2686 into r2687;
    is.neq r2666 r2674 into r2688;
    and r2687 r2688 into r2689;
    and r2684 r2689 into r2690;
    is.eq r2668 0u32 into r2691;
    is.neq r2664 r2674 into r2692;
    is.neq r2665 r2674 into r2693;
    and r2692 r2693 into r2694;
    is.neq r2666 r2674 into r2695;
    and r2694 r2695 into r2696;
    is.neq r2667 r2674 into r2697;
    and r2696 r2697 into r2698;
    and r2691 r2698 into r2699;
    is.eq r2669 0u32 into r2700;
    is.neq r2664 r2674 into r2701;
    is.neq r2665 r2674 into r2702;
    and r2701 r2702 into r2703;
    is.neq r2666 r2674 into r2704;
    and r2703 r2704 into r2705;
    is.neq r2667 r2674 into r2706;
    and r2705 r2706 into r2707;
    is.neq r2668 r2674 into r2708;
    and r2707 r2708 into r2709;
    and r2700 r2709 into r2710;
    ternary r2710 r2674 r2669 into r2711;
    ternary r2710 true r2670 into r2712;
    ternary r2699 r2674 r2668 into r2713;
    ternary r2699 r2669 r2711 into r2714;
    ternary r2699 r2670 r2712 into r2715;
    ternary r2690 r2674 r2667 into r2716;
    ternary r2690 r2668 r2713 into r2717;
    ternary r2690 r2669 r2714 into r2718;
    ternary r2690 r2670 r2715 into r2719;
    ternary r2683 r2674 r2666 into r2720;
    ternary r2683 r2667 r2716 into r2721;
    ternary r2683 r2668 r2717 into r2722;
    ternary r2683 r2669 r2718 into r2723;
    ternary r2683 r2670 r2719 into r2724;
    ternary r2678 r2674 r2665 into r2725;
    ternary r2678 r2666 r2720 into r2726;
    ternary r2678 r2667 r2721 into r2727;
    ternary r2678 r2668 r2722 into r2728;
    ternary r2678 r2669 r2723 into r2729;
    ternary r2678 r2670 r2724 into r2730;
    ternary r2675 r2674 r2664 into r2731;
    ternary r2675 r2665 r2725 into r2732;
    ternary r2675 r2666 r2726 into r2733;
    ternary r2675 r2667 r2727 into r2734;
    ternary r2675 r2668 r2728 into r2735;
    ternary r2675 r2669 r2729 into r2736;
    ternary r2675 r2670 r2730 into r2737;
    ternary r2672 r2731 r2664 into r2738;
    ternary r2672 r2732 r2665 into r2739;
    ternary r2672 r2733 r2666 into r2740;
    ternary r2672 r2734 r2667 into r2741;
    ternary r2672 r2735 r2668 into r2742;
    ternary r2672 r2736 r2669 into r2743;
    ternary r2672 r2737 r2670 into r2744;
    rand.chacha into r2745 as u32;
    not r2744 into r2746;
    mod r2745 33u32 into r2747;
    add r2747 1u32 into r2748;
    is.eq r2738 0u32 into r2749;
    is.eq r2739 0u32 into r2750;
    is.neq r2738 r2748 into r2751;
    and r2750 r2751 into r2752;
    is.eq r2740 0u32 into r2753;
    is.neq r2738 r2748 into r2754;
    is.neq r2739 r2748 into r2755;
    and r2754 r2755 into r2756;
    and r2753 r2756 into r2757;
    is.eq r2741 0u32 into r2758;
    is.neq r2738 r2748 into r2759;
    is.neq r2739 r2748 into r2760;
    and r2759 r2760 into r2761;
    is.neq r2740 r2748 into r2762;
    and r2761 r2762 into r2763;
    and r2758 r2763 into r2764;
    is.eq r2742 0u32 into r2765;
    is.neq r2738 r2748 into r2766;
    is.neq r2739 r2748 into r2767;
    and r2766 r2767 into r2768;
    is.neq r2740 r2748 into r2769;
    and r2768 r2769 into r2770;
    is.neq r2741 r2748 into r2771;
    and r2770 r2771 into r2772;
    and r2765 r2772 into r2773;
    is.eq r2743 0u32 into r2774;
    is.neq r2738 r2748 into r2775;
    is.neq r2739 r2748 into r2776;
    and r2775 r2776 into r2777;
    is.neq r2740 r2748 into r2778;
    and r2777 r2778 into r2779;
    is.neq r2741 r2748 into r2780;
    and r2779 r2780 into r2781;
    is.neq r2742 r2748 into r2782;
    and r2781 r2782 into r2783;
    and r2774 r2783 into r2784;
    ternary r2784 r2748 r2743 into r2785;
    ternary r2784 true r2744 into r2786;
    ternary r2773 r2748 r2742 into r2787;
    ternary r2773 r2743 r2785 into r2788;
    ternary r2773 r2744 r2786 into r2789;
    ternary r2764 r2748 r2741 into r2790;
    ternary r2764 r2742 r2787 into r2791;
    ternary r2764 r2743 r2788 into r2792;
    ternary r2764 r2744 r2789 into r2793;
    ternary r2757 r2748 r2740 into r2794;
    ternary r2757 r2741 r2790 into r2795;
    ternary r2757 r2742 r2791 into r2796;
    ternary r2757 r2743 r2792 into r2797;
    ternary r2757 r2744 r2793 into r2798;
    ternary r2752 r2748 r2739 into r2799;
    ternary r2752 r2740 r2794 into r2800;
    ternary r2752 r2741 r2795 into r2801;
    ternary r2752 r2742 r2796 into r2802;
    ternary r2752 r2743 r2797 into r2803;
    ternary r2752 r2744 r2798 into r2804;
    ternary r2749 r2748 r2738 into r2805;
    ternary r2749 r2739 r2799 into r2806;
    ternary r2749 r2740 r2800 into r2807;
    ternary r2749 r2741 r2801 into r2808;
    ternary r2749 r2742 r2802 into r2809;
    ternary r2749 r2743 r2803 into r2810;
    ternary r2749 r2744 r2804 into r2811;
    ternary r2746 r2805 r2738 into r2812;
    ternary r2746 r2806 r2739 into r2813;
    ternary r2746 r2807 r2740 into r2814;
    ternary r2746 r2808 r2741 into r2815;
    ternary r2746 r2809 r2742 into r2816;
    ternary r2746 r2810 r2743 into r2817;
    ternary r2746 r2811 r2744 into r2818;
    rand.chacha into r2819 as u32;
    not r2818 into r2820;
    mod r2819 33u32 into r2821;
    add r2821 1u32 into r2822;
    is.eq r2812 0u32 into r2823;
    is.eq r2813 0u32 into r2824;
    is.neq r2812 r2822 into r2825;
    and r2824 r2825 into r2826;
    is.eq r2814 0u32 into r2827;
    is.neq r2812 r2822 into r2828;
    is.neq r2813 r2822 into r2829;
    and r2828 r2829 into r2830;
    and r2827 r2830 into r2831;
    is.eq r2815 0u32 into r2832;
    is.neq r2812 r2822 into r2833;
    is.neq r2813 r2822 into r2834;
    and r2833 r2834 into r2835;
    is.neq r2814 r2822 into r2836;
    and r2835 r2836 into r2837;
    and r2832 r2837 into r2838;
    is.eq r2816 0u32 into r2839;
    is.neq r2812 r2822 into r2840;
    is.neq r2813 r2822 into r2841;
    and r2840 r2841 into r2842;
    is.neq r2814 r2822 into r2843;
    and r2842 r2843 into r2844;
    is.neq r2815 r2822 into r2845;
    and r2844 r2845 into r2846;
    and r2839 r2846 into r2847;
    is.eq r2817 0u32 into r2848;
    is.neq r2812 r2822 into r2849;
    is.neq r2813 r2822 into r2850;
    and r2849 r2850 into r2851;
    is.neq r2814 r2822 into r2852;
    and r2851 r2852 into r2853;
    is.neq r2815 r2822 into r2854;
    and r2853 r2854 into r2855;
    is.neq r2816 r2822 into r2856;
    and r2855 r2856 into r2857;
    and r2848 r2857 into r2858;
    ternary r2858 r2822 r2817 into r2859;
    ternary r2858 true r2818 into r2860;
    ternary r2847 r2822 r2816 into r2861;
    ternary r2847 r2817 r2859 into r2862;
    ternary r2847 r2818 r2860 into r2863;
    ternary r2838 r2822 r2815 into r2864;
    ternary r2838 r2816 r2861 into r2865;
    ternary r2838 r2817 r2862 into r2866;
    ternary r2838 r2818 r2863 into r2867;
    ternary r2831 r2822 r2814 into r2868;
    ternary r2831 r2815 r2864 into r2869;
    ternary r2831 r2816 r2865 into r2870;
    ternary r2831 r2817 r2866 into r2871;
    ternary r2831 r2818 r2867 into r2872;
    ternary r2826 r2822 r2813 into r2873;
    ternary r2826 r2814 r2868 into r2874;
    ternary r2826 r2815 r2869 into r2875;
    ternary r2826 r2816 r2870 into r2876;
    ternary r2826 r2817 r2871 into r2877;
    ternary r2826 r2818 r2872 into r2878;
    ternary r2823 r2822 r2812 into r2879;
    ternary r2823 r2813 r2873 into r2880;
    ternary r2823 r2814 r2874 into r2881;
    ternary r2823 r2815 r2875 into r2882;
    ternary r2823 r2816 r2876 into r2883;
    ternary r2823 r2817 r2877 into r2884;
    ternary r2823 r2818 r2878 into r2885;
    ternary r2820 r2879 r2812 into r2886;
    ternary r2820 r2880 r2813 into r2887;
    ternary r2820 r2881 r2814 into r2888;
    ternary r2820 r2882 r2815 into r2889;
    ternary r2820 r2883 r2816 into r2890;
    ternary r2820 r2884 r2817 into r2891;
    ternary r2820 r2885 r2818 into r2892;
    rand.chacha into r2893 as u32;
    not r2892 into r2894;
    mod r2893 33u32 into r2895;
    add r2895 1u32 into r2896;
    is.eq r2886 0u32 into r2897;
    is.eq r2887 0u32 into r2898;
    is.neq r2886 r2896 into r2899;
    and r2898 r2899 into r2900;
    is.eq r2888 0u32 into r2901;
    is.neq r2886 r2896 into r2902;
    is.neq r2887 r2896 into r2903;
    and r2902 r2903 into r2904;
    and r2901 r2904 into r2905;
    is.eq r2889 0u32 into r2906;
    is.neq r2886 r2896 into r2907;
    is.neq r2887 r2896 into r2908;
    and r2907 r2908 into r2909;
    is.neq r2888 r2896 into r2910;
    and r2909 r2910 into r2911;
    and r2906 r2911 into r2912;
    is.eq r2890 0u32 into r2913;
    is.neq r2886 r2896 into r2914;
    is.neq r2887 r2896 into r2915;
    and r2914 r2915 into r2916;
    is.neq r2888 r2896 into r2917;
    and r2916 r2917 into r2918;
    is.neq r2889 r2896 into r2919;
    and r2918 r2919 into r2920;
    and r2913 r2920 into r2921;
    is.eq r2891 0u32 into r2922;
    is.neq r2886 r2896 into r2923;
    is.neq r2887 r2896 into r2924;
    and r2923 r2924 into r2925;
    is.neq r2888 r2896 into r2926;
    and r2925 r2926 into r2927;
    is.neq r2889 r2896 into r2928;
    and r2927 r2928 into r2929;
    is.neq r2890 r2896 into r2930;
    and r2929 r2930 into r2931;
    and r2922 r2931 into r2932;
    ternary r2932 r2896 r2891 into r2933;
    ternary r2932 true r2892 into r2934;
    ternary r2921 r2896 r2890 into r2935;
    ternary r2921 r2891 r2933 into r2936;
    ternary r2921 r2892 r2934 into r2937;
    ternary r2912 r2896 r2889 into r2938;
    ternary r2912 r2890 r2935 into r2939;
    ternary r2912 r2891 r2936 into r2940;
    ternary r2912 r2892 r2937 into r2941;
    ternary r2905 r2896 r2888 into r2942;
    ternary r2905 r2889 r2938 into r2943;
    ternary r2905 r2890 r2939 into r2944;
    ternary r2905 r2891 r2940 into r2945;
    ternary r2905 r2892 r2941 into r2946;
    ternary r2900 r2896 r2887 into r2947;
    ternary r2900 r2888 r2942 into r2948;
    ternary r2900 r2889 r2943 into r2949;
    ternary r2900 r2890 r2944 into r2950;
    ternary r2900 r2891 r2945 into r2951;
    ternary r2900 r2892 r2946 into r2952;
    ternary r2897 r2896 r2886 into r2953;
    ternary r2897 r2887 r2947 into r2954;
    ternary r2897 r2888 r2948 into r2955;
    ternary r2897 r2889 r2949 into r2956;
    ternary r2897 r2890 r2950 into r2957;
    ternary r2897 r2891 r2951 into r2958;
    ternary r2897 r2892 r2952 into r2959;
    ternary r2894 r2953 r2886 into r2960;
    ternary r2894 r2954 r2887 into r2961;
    ternary r2894 r2955 r2888 into r2962;
    ternary r2894 r2956 r2889 into r2963;
    ternary r2894 r2957 r2890 into r2964;
    ternary r2894 r2958 r2891 into r2965;
    ternary r2894 r2959 r2892 into r2966;
    rand.chacha into r2967 as u32;
    not r2966 into r2968;
    mod r2967 33u32 into r2969;
    add r2969 1u32 into r2970;
    is.eq r2960 0u32 into r2971;
    is.eq r2961 0u32 into r2972;
    is.neq r2960 r2970 into r2973;
    and r2972 r2973 into r2974;
    is.eq r2962 0u32 into r2975;
    is.neq r2960 r2970 into r2976;
    is.neq r2961 r2970 into r2977;
    and r2976 r2977 into r2978;
    and r2975 r2978 into r2979;
    is.eq r2963 0u32 into r2980;
    is.neq r2960 r2970 into r2981;
    is.neq r2961 r2970 into r2982;
    and r2981 r2982 into r2983;
    is.neq r2962 r2970 into r2984;
    and r2983 r2984 into r2985;
    and r2980 r2985 into r2986;
    is.eq r2964 0u32 into r2987;
    is.neq r2960 r2970 into r2988;
    is.neq r2961 r2970 into r2989;
    and r2988 r2989 into r2990;
    is.neq r2962 r2970 into r2991;
    and r2990 r2991 into r2992;
    is.neq r2963 r2970 into r2993;
    and r2992 r2993 into r2994;
    and r2987 r2994 into r2995;
    is.eq r2965 0u32 into r2996;
    is.neq r2960 r2970 into r2997;
    is.neq r2961 r2970 into r2998;
    and r2997 r2998 into r2999;
    is.neq r2962 r2970 into r3000;
    and r2999 r3000 into r3001;
    is.neq r2963 r2970 into r3002;
    and r3001 r3002 into r3003;
    is.neq r2964 r2970 into r3004;
    and r3003 r3004 into r3005;
    and r2996 r3005 into r3006;
    ternary r3006 r2970 r2965 into r3007;
    ternary r3006 true r2966 into r3008;
    ternary r2995 r2970 r2964 into r3009;
    ternary r2995 r2965 r3007 into r3010;
    ternary r2995 r2966 r3008 into r3011;
    ternary r2986 r2970 r2963 into r3012;
    ternary r2986 r2964 r3009 into r3013;
    ternary r2986 r2965 r3010 into r3014;
    ternary r2986 r2966 r3011 into r3015;
    ternary r2979 r2970 r2962 into r3016;
    ternary r2979 r2963 r3012 into r3017;
    ternary r2979 r2964 r3013 into r3018;
    ternary r2979 r2965 r3014 into r3019;
    ternary r2979 r2966 r3015 into r3020;
    ternary r2974 r2970 r2961 into r3021;
    ternary r2974 r2962 r3016 into r3022;
    ternary r2974 r2963 r3017 into r3023;
    ternary r2974 r2964 r3018 into r3024;
    ternary r2974 r2965 r3019 into r3025;
    ternary r2974 r2966 r3020 into r3026;
    ternary r2971 r2970 r2960 into r3027;
    ternary r2971 r2961 r3021 into r3028;
    ternary r2971 r2962 r3022 into r3029;
    ternary r2971 r2963 r3023 into r3030;
    ternary r2971 r2964 r3024 into r3031;
    ternary r2971 r2965 r3025 into r3032;
    ternary r2971 r2966 r3026 into r3033;
    ternary r2968 r3027 r2960 into r3034;
    ternary r2968 r3028 r2961 into r3035;
    ternary r2968 r3029 r2962 into r3036;
    ternary r2968 r3030 r2963 into r3037;
    ternary r2968 r3031 r2964 into r3038;
    ternary r2968 r3032 r2965 into r3039;
    ternary r2968 r3033 r2966 into r3040;
    rand.chacha into r3041 as u32;
    not r3040 into r3042;
    mod r3041 33u32 into r3043;
    add r3043 1u32 into r3044;
    is.eq r3034 0u32 into r3045;
    is.eq r3035 0u32 into r3046;
    is.neq r3034 r3044 into r3047;
    and r3046 r3047 into r3048;
    is.eq r3036 0u32 into r3049;
    is.neq r3034 r3044 into r3050;
    is.neq r3035 r3044 into r3051;
    and r3050 r3051 into r3052;
    and r3049 r3052 into r3053;
    is.eq r3037 0u32 into r3054;
    is.neq r3034 r3044 into r3055;
    is.neq r3035 r3044 into r3056;
    and r3055 r3056 into r3057;
    is.neq r3036 r3044 into r3058;
    and r3057 r3058 into r3059;
    and r3054 r3059 into r3060;
    is.eq r3038 0u32 into r3061;
    is.neq r3034 r3044 into r3062;
    is.neq r3035 r3044 into r3063;
    and r3062 r3063 into r3064;
    is.neq r3036 r3044 into r3065;
    and r3064 r3065 into r3066;
    is.neq r3037 r3044 into r3067;
    and r3066 r3067 into r3068;
    and r3061 r3068 into r3069;
    is.eq r3039 0u32 into r3070;
    is.neq r3034 r3044 into r3071;
    is.neq r3035 r3044 into r3072;
    and r3071 r3072 into r3073;
    is.neq r3036 r3044 into r3074;
    and r3073 r3074 into r3075;
    is.neq r3037 r3044 into r3076;
    and r3075 r3076 into r3077;
    is.neq r3038 r3044 into r3078;
    and r3077 r3078 into r3079;
    and r3070 r3079 into r3080;
    ternary r3080 r3044 r3039 into r3081;
    ternary r3080 true r3040 into r3082;
    ternary r3069 r3044 r3038 into r3083;
    ternary r3069 r3039 r3081 into r3084;
    ternary r3069 r3040 r3082 into r3085;
    ternary r3060 r3044 r3037 into r3086;
    ternary r3060 r3038 r3083 into r3087;
    ternary r3060 r3039 r3084 into r3088;
    ternary r3060 r3040 r3085 into r3089;
    ternary r3053 r3044 r3036 into r3090;
    ternary r3053 r3037 r3086 into r3091;
    ternary r3053 r3038 r3087 into r3092;
    ternary r3053 r3039 r3088 into r3093;
    ternary r3053 r3040 r3089 into r3094;
    ternary r3048 r3044 r3035 into r3095;
    ternary r3048 r3036 r3090 into r3096;
    ternary r3048 r3037 r3091 into r3097;
    ternary r3048 r3038 r3092 into r3098;
    ternary r3048 r3039 r3093 into r3099;
    ternary r3048 r3040 r3094 into r3100;
    ternary r3045 r3044 r3034 into r3101;
    ternary r3045 r3035 r3095 into r3102;
    ternary r3045 r3036 r3096 into r3103;
    ternary r3045 r3037 r3097 into r3104;
    ternary r3045 r3038 r3098 into r3105;
    ternary r3045 r3039 r3099 into r3106;
    ternary r3045 r3040 r3100 into r3107;
    ternary r3042 r3101 r3034 into r3108;
    ternary r3042 r3102 r3035 into r3109;
    ternary r3042 r3103 r3036 into r3110;
    ternary r3042 r3104 r3037 into r3111;
    ternary r3042 r3105 r3038 into r3112;
    ternary r3042 r3106 r3039 into r3113;
    ternary r3042 r3107 r3040 into r3114;
    rand.chacha into r3115 as u32;
    not r3114 into r3116;
    mod r3115 33u32 into r3117;
    add r3117 1u32 into r3118;
    is.eq r3108 0u32 into r3119;
    is.eq r3109 0u32 into r3120;
    is.neq r3108 r3118 into r3121;
    and r3120 r3121 into r3122;
    is.eq r3110 0u32 into r3123;
    is.neq r3108 r3118 into r3124;
    is.neq r3109 r3118 into r3125;
    and r3124 r3125 into r3126;
    and r3123 r3126 into r3127;
    is.eq r3111 0u32 into r3128;
    is.neq r3108 r3118 into r3129;
    is.neq r3109 r3118 into r3130;
    and r3129 r3130 into r3131;
    is.neq r3110 r3118 into r3132;
    and r3131 r3132 into r3133;
    and r3128 r3133 into r3134;
    is.eq r3112 0u32 into r3135;
    is.neq r3108 r3118 into r3136;
    is.neq r3109 r3118 into r3137;
    and r3136 r3137 into r3138;
    is.neq r3110 r3118 into r3139;
    and r3138 r3139 into r3140;
    is.neq r3111 r3118 into r3141;
    and r3140 r3141 into r3142;
    and r3135 r3142 into r3143;
    is.eq r3113 0u32 into r3144;
    is.neq r3108 r3118 into r3145;
    is.neq r3109 r3118 into r3146;
    and r3145 r3146 into r3147;
    is.neq r3110 r3118 into r3148;
    and r3147 r3148 into r3149;
    is.neq r3111 r3118 into r3150;
    and r3149 r3150 into r3151;
    is.neq r3112 r3118 into r3152;
    and r3151 r3152 into r3153;
    and r3144 r3153 into r3154;
    ternary r3154 r3118 r3113 into r3155;
    ternary r3154 true r3114 into r3156;
    ternary r3143 r3118 r3112 into r3157;
    ternary r3143 r3113 r3155 into r3158;
    ternary r3143 r3114 r3156 into r3159;
    ternary r3134 r3118 r3111 into r3160;
    ternary r3134 r3112 r3157 into r3161;
    ternary r3134 r3113 r3158 into r3162;
    ternary r3134 r3114 r3159 into r3163;
    ternary r3127 r3118 r3110 into r3164;
    ternary r3127 r3111 r3160 into r3165;
    ternary r3127 r3112 r3161 into r3166;
    ternary r3127 r3113 r3162 into r3167;
    ternary r3127 r3114 r3163 into r3168;
    ternary r3122 r3118 r3109 into r3169;
    ternary r3122 r3110 r3164 into r3170;
    ternary r3122 r3111 r3165 into r3171;
    ternary r3122 r3112 r3166 into r3172;
    ternary r3122 r3113 r3167 into r3173;
    ternary r3122 r3114 r3168 into r3174;
    ternary r3119 r3118 r3108 into r3175;
    ternary r3119 r3109 r3169 into r3176;
    ternary r3119 r3110 r3170 into r3177;
    ternary r3119 r3111 r3171 into r3178;
    ternary r3119 r3112 r3172 into r3179;
    ternary r3119 r3113 r3173 into r3180;
    ternary r3119 r3114 r3174 into r3181;
    ternary r3116 r3175 r3108 into r3182;
    ternary r3116 r3176 r3109 into r3183;
    ternary r3116 r3177 r3110 into r3184;
    ternary r3116 r3178 r3111 into r3185;
    ternary r3116 r3179 r3112 into r3186;
    ternary r3116 r3180 r3113 into r3187;
    ternary r3116 r3181 r3114 into r3188;
    rand.chacha into r3189 as u32;
    not r3188 into r3190;
    mod r3189 33u32 into r3191;
    add r3191 1u32 into r3192;
    is.eq r3182 0u32 into r3193;
    is.eq r3183 0u32 into r3194;
    is.neq r3182 r3192 into r3195;
    and r3194 r3195 into r3196;
    is.eq r3184 0u32 into r3197;
    is.neq r3182 r3192 into r3198;
    is.neq r3183 r3192 into r3199;
    and r3198 r3199 into r3200;
    and r3197 r3200 into r3201;
    is.eq r3185 0u32 into r3202;
    is.neq r3182 r3192 into r3203;
    is.neq r3183 r3192 into r3204;
    and r3203 r3204 into r3205;
    is.neq r3184 r3192 into r3206;
    and r3205 r3206 into r3207;
    and r3202 r3207 into r3208;
    is.eq r3186 0u32 into r3209;
    is.neq r3182 r3192 into r3210;
    is.neq r3183 r3192 into r3211;
    and r3210 r3211 into r3212;
    is.neq r3184 r3192 into r3213;
    and r3212 r3213 into r3214;
    is.neq r3185 r3192 into r3215;
    and r3214 r3215 into r3216;
    and r3209 r3216 into r3217;
    is.eq r3187 0u32 into r3218;
    is.neq r3182 r3192 into r3219;
    is.neq r3183 r3192 into r3220;
    and r3219 r3220 into r3221;
    is.neq r3184 r3192 into r3222;
    and r3221 r3222 into r3223;
    is.neq r3185 r3192 into r3224;
    and r3223 r3224 into r3225;
    is.neq r3186 r3192 into r3226;
    and r3225 r3226 into r3227;
    and r3218 r3227 into r3228;
    ternary r3228 r3192 r3187 into r3229;
    ternary r3228 true r3188 into r3230;
    ternary r3217 r3192 r3186 into r3231;
    ternary r3217 r3187 r3229 into r3232;
    ternary r3217 r3188 r3230 into r3233;
    ternary r3208 r3192 r3185 into r3234;
    ternary r3208 r3186 r3231 into r3235;
    ternary r3208 r3187 r3232 into r3236;
    ternary r3208 r3188 r3233 into r3237;
    ternary r3201 r3192 r3184 into r3238;
    ternary r3201 r3185 r3234 into r3239;
    ternary r3201 r3186 r3235 into r3240;
    ternary r3201 r3187 r3236 into r3241;
    ternary r3201 r3188 r3237 into r3242;
    ternary r3196 r3192 r3183 into r3243;
    ternary r3196 r3184 r3238 into r3244;
    ternary r3196 r3185 r3239 into r3245;
    ternary r3196 r3186 r3240 into r3246;
    ternary r3196 r3187 r3241 into r3247;
    ternary r3196 r3188 r3242 into r3248;
    ternary r3193 r3192 r3182 into r3249;
    ternary r3193 r3183 r3243 into r3250;
    ternary r3193 r3184 r3244 into r3251;
    ternary r3193 r3185 r3245 into r3252;
    ternary r3193 r3186 r3246 into r3253;
    ternary r3193 r3187 r3247 into r3254;
    ternary r3193 r3188 r3248 into r3255;
    ternary r3190 r3249 r3182 into r3256;
    ternary r3190 r3250 r3183 into r3257;
    ternary r3190 r3251 r3184 into r3258;
    ternary r3190 r3252 r3185 into r3259;
    ternary r3190 r3253 r3186 into r3260;
    ternary r3190 r3254 r3187 into r3261;
    ternary r3190 r3255 r3188 into r3262;
    rand.chacha into r3263 as u32;
    not r3262 into r3264;
    mod r3263 33u32 into r3265;
    add r3265 1u32 into r3266;
    is.eq r3256 0u32 into r3267;
    is.eq r3257 0u32 into r3268;
    is.neq r3256 r3266 into r3269;
    and r3268 r3269 into r3270;
    is.eq r3258 0u32 into r3271;
    is.neq r3256 r3266 into r3272;
    is.neq r3257 r3266 into r3273;
    and r3272 r3273 into r3274;
    and r3271 r3274 into r3275;
    is.eq r3259 0u32 into r3276;
    is.neq r3256 r3266 into r3277;
    is.neq r3257 r3266 into r3278;
    and r3277 r3278 into r3279;
    is.neq r3258 r3266 into r3280;
    and r3279 r3280 into r3281;
    and r3276 r3281 into r3282;
    is.eq r3260 0u32 into r3283;
    is.neq r3256 r3266 into r3284;
    is.neq r3257 r3266 into r3285;
    and r3284 r3285 into r3286;
    is.neq r3258 r3266 into r3287;
    and r3286 r3287 into r3288;
    is.neq r3259 r3266 into r3289;
    and r3288 r3289 into r3290;
    and r3283 r3290 into r3291;
    is.eq r3261 0u32 into r3292;
    is.neq r3256 r3266 into r3293;
    is.neq r3257 r3266 into r3294;
    and r3293 r3294 into r3295;
    is.neq r3258 r3266 into r3296;
    and r3295 r3296 into r3297;
    is.neq r3259 r3266 into r3298;
    and r3297 r3298 into r3299;
    is.neq r3260 r3266 into r3300;
    and r3299 r3300 into r3301;
    and r3292 r3301 into r3302;
    ternary r3302 r3266 r3261 into r3303;
    ternary r3302 true r3262 into r3304;
    ternary r3291 r3266 r3260 into r3305;
    ternary r3291 r3261 r3303 into r3306;
    ternary r3291 r3262 r3304 into r3307;
    ternary r3282 r3266 r3259 into r3308;
    ternary r3282 r3260 r3305 into r3309;
    ternary r3282 r3261 r3306 into r3310;
    ternary r3282 r3262 r3307 into r3311;
    ternary r3275 r3266 r3258 into r3312;
    ternary r3275 r3259 r3308 into r3313;
    ternary r3275 r3260 r3309 into r3314;
    ternary r3275 r3261 r3310 into r3315;
    ternary r3275 r3262 r3311 into r3316;
    ternary r3270 r3266 r3257 into r3317;
    ternary r3270 r3258 r3312 into r3318;
    ternary r3270 r3259 r3313 into r3319;
    ternary r3270 r3260 r3314 into r3320;
    ternary r3270 r3261 r3315 into r3321;
    ternary r3270 r3262 r3316 into r3322;
    ternary r3267 r3266 r3256 into r3323;
    ternary r3267 r3257 r3317 into r3324;
    ternary r3267 r3258 r3318 into r3325;
    ternary r3267 r3259 r3319 into r3326;
    ternary r3267 r3260 r3320 into r3327;
    ternary r3267 r3261 r3321 into r3328;
    ternary r3267 r3262 r3322 into r3329;
    ternary r3264 r3323 r3256 into r3330;
    ternary r3264 r3324 r3257 into r3331;
    ternary r3264 r3325 r3258 into r3332;
    ternary r3264 r3326 r3259 into r3333;
    ternary r3264 r3327 r3260 into r3334;
    ternary r3264 r3328 r3261 into r3335;
    ternary r3264 r3329 r3262 into r3336;
    rand.chacha into r3337 as u32;
    not r3336 into r3338;
    mod r3337 33u32 into r3339;
    add r3339 1u32 into r3340;
    is.eq r3330 0u32 into r3341;
    is.eq r3331 0u32 into r3342;
    is.neq r3330 r3340 into r3343;
    and r3342 r3343 into r3344;
    is.eq r3332 0u32 into r3345;
    is.neq r3330 r3340 into r3346;
    is.neq r3331 r3340 into r3347;
    and r3346 r3347 into r3348;
    and r3345 r3348 into r3349;
    is.eq r3333 0u32 into r3350;
    is.neq r3330 r3340 into r3351;
    is.neq r3331 r3340 into r3352;
    and r3351 r3352 into r3353;
    is.neq r3332 r3340 into r3354;
    and r3353 r3354 into r3355;
    and r3350 r3355 into r3356;
    is.eq r3334 0u32 into r3357;
    is.neq r3330 r3340 into r3358;
    is.neq r3331 r3340 into r3359;
    and r3358 r3359 into r3360;
    is.neq r3332 r3340 into r3361;
    and r3360 r3361 into r3362;
    is.neq r3333 r3340 into r3363;
    and r3362 r3363 into r3364;
    and r3357 r3364 into r3365;
    is.eq r3335 0u32 into r3366;
    is.neq r3330 r3340 into r3367;
    is.neq r3331 r3340 into r3368;
    and r3367 r3368 into r3369;
    is.neq r3332 r3340 into r3370;
    and r3369 r3370 into r3371;
    is.neq r3333 r3340 into r3372;
    and r3371 r3372 into r3373;
    is.neq r3334 r3340 into r3374;
    and r3373 r3374 into r3375;
    and r3366 r3375 into r3376;
    ternary r3376 r3340 r3335 into r3377;
    ternary r3376 true r3336 into r3378;
    ternary r3365 r3340 r3334 into r3379;
    ternary r3365 r3335 r3377 into r3380;
    ternary r3365 r3336 r3378 into r3381;
    ternary r3356 r3340 r3333 into r3382;
    ternary r3356 r3334 r3379 into r3383;
    ternary r3356 r3335 r3380 into r3384;
    ternary r3356 r3336 r3381 into r3385;
    ternary r3349 r3340 r3332 into r3386;
    ternary r3349 r3333 r3382 into r3387;
    ternary r3349 r3334 r3383 into r3388;
    ternary r3349 r3335 r3384 into r3389;
    ternary r3349 r3336 r3385 into r3390;
    ternary r3344 r3340 r3331 into r3391;
    ternary r3344 r3332 r3386 into r3392;
    ternary r3344 r3333 r3387 into r3393;
    ternary r3344 r3334 r3388 into r3394;
    ternary r3344 r3335 r3389 into r3395;
    ternary r3344 r3336 r3390 into r3396;
    ternary r3341 r3340 r3330 into r3397;
    ternary r3341 r3331 r3391 into r3398;
    ternary r3341 r3332 r3392 into r3399;
    ternary r3341 r3333 r3393 into r3400;
    ternary r3341 r3334 r3394 into r3401;
    ternary r3341 r3335 r3395 into r3402;
    ternary r3341 r3336 r3396 into r3403;
    ternary r3338 r3397 r3330 into r3404;
    ternary r3338 r3398 r3331 into r3405;
    ternary r3338 r3399 r3332 into r3406;
    ternary r3338 r3400 r3333 into r3407;
    ternary r3338 r3401 r3334 into r3408;
    ternary r3338 r3402 r3335 into r3409;
    ternary r3338 r3403 r3336 into r3410;
    rand.chacha into r3411 as u32;
    not r3410 into r3412;
    mod r3411 33u32 into r3413;
    add r3413 1u32 into r3414;
    is.eq r3404 0u32 into r3415;
    is.eq r3405 0u32 into r3416;
    is.neq r3404 r3414 into r3417;
    and r3416 r3417 into r3418;
    is.eq r3406 0u32 into r3419;
    is.neq r3404 r3414 into r3420;
    is.neq r3405 r3414 into r3421;
    and r3420 r3421 into r3422;
    and r3419 r3422 into r3423;
    is.eq r3407 0u32 into r3424;
    is.neq r3404 r3414 into r3425;
    is.neq r3405 r3414 into r3426;
    and r3425 r3426 into r3427;
    is.neq r3406 r3414 into r3428;
    and r3427 r3428 into r3429;
    and r3424 r3429 into r3430;
    is.eq r3408 0u32 into r3431;
    is.neq r3404 r3414 into r3432;
    is.neq r3405 r3414 into r3433;
    and r3432 r3433 into r3434;
    is.neq r3406 r3414 into r3435;
    and r3434 r3435 into r3436;
    is.neq r3407 r3414 into r3437;
    and r3436 r3437 into r3438;
    and r3431 r3438 into r3439;
    is.eq r3409 0u32 into r3440;
    is.neq r3404 r3414 into r3441;
    is.neq r3405 r3414 into r3442;
    and r3441 r3442 into r3443;
    is.neq r3406 r3414 into r3444;
    and r3443 r3444 into r3445;
    is.neq r3407 r3414 into r3446;
    and r3445 r3446 into r3447;
    is.neq r3408 r3414 into r3448;
    and r3447 r3448 into r3449;
    and r3440 r3449 into r3450;
    ternary r3450 r3414 r3409 into r3451;
    ternary r3450 true r3410 into r3452;
    ternary r3439 r3414 r3408 into r3453;
    ternary r3439 r3409 r3451 into r3454;
    ternary r3439 r3410 r3452 into r3455;
    ternary r3430 r3414 r3407 into r3456;
    ternary r3430 r3408 r3453 into r3457;
    ternary r3430 r3409 r3454 into r3458;
    ternary r3430 r3410 r3455 into r3459;
    ternary r3423 r3414 r3406 into r3460;
    ternary r3423 r3407 r3456 into r3461;
    ternary r3423 r3408 r3457 into r3462;
    ternary r3423 r3409 r3458 into r3463;
    ternary r3423 r3410 r3459 into r3464;
    ternary r3418 r3414 r3405 into r3465;
    ternary r3418 r3406 r3460 into r3466;
    ternary r3418 r3407 r3461 into r3467;
    ternary r3418 r3408 r3462 into r3468;
    ternary r3418 r3409 r3463 into r3469;
    ternary r3418 r3410 r3464 into r3470;
    ternary r3415 r3414 r3404 into r3471;
    ternary r3415 r3405 r3465 into r3472;
    ternary r3415 r3406 r3466 into r3473;
    ternary r3415 r3407 r3467 into r3474;
    ternary r3415 r3408 r3468 into r3475;
    ternary r3415 r3409 r3469 into r3476;
    ternary r3415 r3410 r3470 into r3477;
    ternary r3412 r3471 r3404 into r3478;
    ternary r3412 r3472 r3405 into r3479;
    ternary r3412 r3473 r3406 into r3480;
    ternary r3412 r3474 r3407 into r3481;
    ternary r3412 r3475 r3408 into r3482;
    ternary r3412 r3476 r3409 into r3483;
    ternary r3412 r3477 r3410 into r3484;
    rand.chacha into r3485 as u32;
    not r3484 into r3486;
    mod r3485 33u32 into r3487;
    add r3487 1u32 into r3488;
    is.eq r3478 0u32 into r3489;
    is.eq r3479 0u32 into r3490;
    is.neq r3478 r3488 into r3491;
    and r3490 r3491 into r3492;
    is.eq r3480 0u32 into r3493;
    is.neq r3478 r3488 into r3494;
    is.neq r3479 r3488 into r3495;
    and r3494 r3495 into r3496;
    and r3493 r3496 into r3497;
    is.eq r3481 0u32 into r3498;
    is.neq r3478 r3488 into r3499;
    is.neq r3479 r3488 into r3500;
    and r3499 r3500 into r3501;
    is.neq r3480 r3488 into r3502;
    and r3501 r3502 into r3503;
    and r3498 r3503 into r3504;
    is.eq r3482 0u32 into r3505;
    is.neq r3478 r3488 into r3506;
    is.neq r3479 r3488 into r3507;
    and r3506 r3507 into r3508;
    is.neq r3480 r3488 into r3509;
    and r3508 r3509 into r3510;
    is.neq r3481 r3488 into r3511;
    and r3510 r3511 into r3512;
    and r3505 r3512 into r3513;
    is.eq r3483 0u32 into r3514;
    is.neq r3478 r3488 into r3515;
    is.neq r3479 r3488 into r3516;
    and r3515 r3516 into r3517;
    is.neq r3480 r3488 into r3518;
    and r3517 r3518 into r3519;
    is.neq r3481 r3488 into r3520;
    and r3519 r3520 into r3521;
    is.neq r3482 r3488 into r3522;
    and r3521 r3522 into r3523;
    and r3514 r3523 into r3524;
    ternary r3524 r3488 r3483 into r3525;
    ternary r3524 true r3484 into r3526;
    ternary r3513 r3488 r3482 into r3527;
    ternary r3513 r3483 r3525 into r3528;
    ternary r3513 r3484 r3526 into r3529;
    ternary r3504 r3488 r3481 into r3530;
    ternary r3504 r3482 r3527 into r3531;
    ternary r3504 r3483 r3528 into r3532;
    ternary r3504 r3484 r3529 into r3533;
    ternary r3497 r3488 r3480 into r3534;
    ternary r3497 r3481 r3530 into r3535;
    ternary r3497 r3482 r3531 into r3536;
    ternary r3497 r3483 r3532 into r3537;
    ternary r3497 r3484 r3533 into r3538;
    ternary r3492 r3488 r3479 into r3539;
    ternary r3492 r3480 r3534 into r3540;
    ternary r3492 r3481 r3535 into r3541;
    ternary r3492 r3482 r3536 into r3542;
    ternary r3492 r3483 r3537 into r3543;
    ternary r3492 r3484 r3538 into r3544;
    ternary r3489 r3488 r3478 into r3545;
    ternary r3489 r3479 r3539 into r3546;
    ternary r3489 r3480 r3540 into r3547;
    ternary r3489 r3481 r3541 into r3548;
    ternary r3489 r3482 r3542 into r3549;
    ternary r3489 r3483 r3543 into r3550;
    ternary r3489 r3484 r3544 into r3551;
    ternary r3486 r3545 r3478 into r3552;
    ternary r3486 r3546 r3479 into r3553;
    ternary r3486 r3547 r3480 into r3554;
    ternary r3486 r3548 r3481 into r3555;
    ternary r3486 r3549 r3482 into r3556;
    ternary r3486 r3550 r3483 into r3557;
    ternary r3486 r3551 r3484 into r3558;
    rand.chacha into r3559 as u32;
    not r3558 into r3560;
    mod r3559 33u32 into r3561;
    add r3561 1u32 into r3562;
    is.eq r3552 0u32 into r3563;
    is.eq r3553 0u32 into r3564;
    is.neq r3552 r3562 into r3565;
    and r3564 r3565 into r3566;
    is.eq r3554 0u32 into r3567;
    is.neq r3552 r3562 into r3568;
    is.neq r3553 r3562 into r3569;
    and r3568 r3569 into r3570;
    and r3567 r3570 into r3571;
    is.eq r3555 0u32 into r3572;
    is.neq r3552 r3562 into r3573;
    is.neq r3553 r3562 into r3574;
    and r3573 r3574 into r3575;
    is.neq r3554 r3562 into r3576;
    and r3575 r3576 into r3577;
    and r3572 r3577 into r3578;
    is.eq r3556 0u32 into r3579;
    is.neq r3552 r3562 into r3580;
    is.neq r3553 r3562 into r3581;
    and r3580 r3581 into r3582;
    is.neq r3554 r3562 into r3583;
    and r3582 r3583 into r3584;
    is.neq r3555 r3562 into r3585;
    and r3584 r3585 into r3586;
    and r3579 r3586 into r3587;
    is.eq r3557 0u32 into r3588;
    is.neq r3552 r3562 into r3589;
    is.neq r3553 r3562 into r3590;
    and r3589 r3590 into r3591;
    is.neq r3554 r3562 into r3592;
    and r3591 r3592 into r3593;
    is.neq r3555 r3562 into r3594;
    and r3593 r3594 into r3595;
    is.neq r3556 r3562 into r3596;
    and r3595 r3596 into r3597;
    and r3588 r3597 into r3598;
    ternary r3598 r3562 r3557 into r3599;
    ternary r3598 true r3558 into r3600;
    ternary r3587 r3562 r3556 into r3601;
    ternary r3587 r3557 r3599 into r3602;
    ternary r3587 r3558 r3600 into r3603;
    ternary r3578 r3562 r3555 into r3604;
    ternary r3578 r3556 r3601 into r3605;
    ternary r3578 r3557 r3602 into r3606;
    ternary r3578 r3558 r3603 into r3607;
    ternary r3571 r3562 r3554 into r3608;
    ternary r3571 r3555 r3604 into r3609;
    ternary r3571 r3556 r3605 into r3610;
    ternary r3571 r3557 r3606 into r3611;
    ternary r3571 r3558 r3607 into r3612;
    ternary r3566 r3562 r3553 into r3613;
    ternary r3566 r3554 r3608 into r3614;
    ternary r3566 r3555 r3609 into r3615;
    ternary r3566 r3556 r3610 into r3616;
    ternary r3566 r3557 r3611 into r3617;
    ternary r3566 r3558 r3612 into r3618;
    ternary r3563 r3562 r3552 into r3619;
    ternary r3563 r3553 r3613 into r3620;
    ternary r3563 r3554 r3614 into r3621;
    ternary r3563 r3555 r3615 into r3622;
    ternary r3563 r3556 r3616 into r3623;
    ternary r3563 r3557 r3617 into r3624;
    ternary r3563 r3558 r3618 into r3625;
    ternary r3560 r3619 r3552 into r3626;
    ternary r3560 r3620 r3553 into r3627;
    ternary r3560 r3621 r3554 into r3628;
    ternary r3560 r3622 r3555 into r3629;
    ternary r3560 r3623 r3556 into r3630;
    ternary r3560 r3624 r3557 into r3631;
    ternary r3560 r3625 r3558 into r3632;
    rand.chacha into r3633 as u32;
    not r3632 into r3634;
    mod r3633 33u32 into r3635;
    add r3635 1u32 into r3636;
    is.eq r3626 0u32 into r3637;
    is.eq r3627 0u32 into r3638;
    is.neq r3626 r3636 into r3639;
    and r3638 r3639 into r3640;
    is.eq r3628 0u32 into r3641;
    is.neq r3626 r3636 into r3642;
    is.neq r3627 r3636 into r3643;
    and r3642 r3643 into r3644;
    and r3641 r3644 into r3645;
    is.eq r3629 0u32 into r3646;
    is.neq r3626 r3636 into r3647;
    is.neq r3627 r3636 into r3648;
    and r3647 r3648 into r3649;
    is.neq r3628 r3636 into r3650;
    and r3649 r3650 into r3651;
    and r3646 r3651 into r3652;
    is.eq r3630 0u32 into r3653;
    is.neq r3626 r3636 into r3654;
    is.neq r3627 r3636 into r3655;
    and r3654 r3655 into r3656;
    is.neq r3628 r3636 into r3657;
    and r3656 r3657 into r3658;
    is.neq r3629 r3636 into r3659;
    and r3658 r3659 into r3660;
    and r3653 r3660 into r3661;
    is.eq r3631 0u32 into r3662;
    is.neq r3626 r3636 into r3663;
    is.neq r3627 r3636 into r3664;
    and r3663 r3664 into r3665;
    is.neq r3628 r3636 into r3666;
    and r3665 r3666 into r3667;
    is.neq r3629 r3636 into r3668;
    and r3667 r3668 into r3669;
    is.neq r3630 r3636 into r3670;
    and r3669 r3670 into r3671;
    and r3662 r3671 into r3672;
    ternary r3672 r3636 r3631 into r3673;
    ternary r3672 true r3632 into r3674;
    ternary r3661 r3636 r3630 into r3675;
    ternary r3661 r3631 r3673 into r3676;
    ternary r3661 r3632 r3674 into r3677;
    ternary r3652 r3636 r3629 into r3678;
    ternary r3652 r3630 r3675 into r3679;
    ternary r3652 r3631 r3676 into r3680;
    ternary r3652 r3632 r3677 into r3681;
    ternary r3645 r3636 r3628 into r3682;
    ternary r3645 r3629 r3678 into r3683;
    ternary r3645 r3630 r3679 into r3684;
    ternary r3645 r3631 r3680 into r3685;
    ternary r3645 r3632 r3681 into r3686;
    ternary r3640 r3636 r3627 into r3687;
    ternary r3640 r3628 r3682 into r3688;
    ternary r3640 r3629 r3683 into r3689;
    ternary r3640 r3630 r3684 into r3690;
    ternary r3640 r3631 r3685 into r3691;
    ternary r3640 r3632 r3686 into r3692;
    ternary r3637 r3636 r3626 into r3693;
    ternary r3637 r3627 r3687 into r3694;
    ternary r3637 r3628 r3688 into r3695;
    ternary r3637 r3629 r3689 into r3696;
    ternary r3637 r3630 r3690 into r3697;
    ternary r3637 r3631 r3691 into r3698;
    ternary r3637 r3632 r3692 into r3699;
    ternary r3634 r3693 r3626 into r3700;
    ternary r3634 r3694 r3627 into r3701;
    ternary r3634 r3695 r3628 into r3702;
    ternary r3634 r3696 r3629 into r3703;
    ternary r3634 r3697 r3630 into r3704;
    ternary r3634 r3698 r3631 into r3705;
    ternary r3634 r3699 r3632 into r3706;
    rand.chacha into r3707 as u32;
    not r3706 into r3708;
    mod r3707 33u32 into r3709;
    add r3709 1u32 into r3710;
    is.eq r3700 0u32 into r3711;
    is.eq r3701 0u32 into r3712;
    is.neq r3700 r3710 into r3713;
    and r3712 r3713 into r3714;
    is.eq r3702 0u32 into r3715;
    is.neq r3700 r3710 into r3716;
    is.neq r3701 r3710 into r3717;
    and r3716 r3717 into r3718;
    and r3715 r3718 into r3719;
    is.eq r3703 0u32 into r3720;
    is.neq r3700 r3710 into r3721;
    is.neq r3701 r3710 into r3722;
    and r3721 r3722 into r3723;
    is.neq r3702 r3710 into r3724;
    and r3723 r3724 into r3725;
    and r3720 r3725 into r3726;
    is.eq r3704 0u32 into r3727;
    is.neq r3700 r3710 into r3728;
    is.neq r3701 r3710 into r3729;
    and r3728 r3729 into r3730;
    is.neq r3702 r3710 into r3731;
    and r3730 r3731 into r3732;
    is.neq r3703 r3710 into r3733;
    and r3732 r3733 into r3734;
    and r3727 r3734 into r3735;
    is.eq r3705 0u32 into r3736;
    is.neq r3700 r3710 into r3737;
    is.neq r3701 r3710 into r3738;
    and r3737 r3738 into r3739;
    is.neq r3702 r3710 into r3740;
    and r3739 r3740 into r3741;
    is.neq r3703 r3710 into r3742;
    and r3741 r3742 into r3743;
    is.neq r3704 r3710 into r3744;
    and r3743 r3744 into r3745;
    and r3736 r3745 into r3746;
    ternary r3746 r3710 r3705 into r3747;
    ternary r3746 true r3706 into r3748;
    ternary r3735 r3710 r3704 into r3749;
    ternary r3735 r3705 r3747 into r3750;
    ternary r3735 r3706 r3748 into r3751;
    ternary r3726 r3710 r3703 into r3752;
    ternary r3726 r3704 r3749 into r3753;
    ternary r3726 r3705 r3750 into r3754;
    ternary r3726 r3706 r3751 into r3755;
    ternary r3719 r3710 r3702 into r3756;
    ternary r3719 r3703 r3752 into r3757;
    ternary r3719 r3704 r3753 into r3758;
    ternary r3719 r3705 r3754 into r3759;
    ternary r3719 r3706 r3755 into r3760;
    ternary r3714 r3710 r3701 into r3761;
    ternary r3714 r3702 r3756 into r3762;
    ternary r3714 r3703 r3757 into r3763;
    ternary r3714 r3704 r3758 into r3764;
    ternary r3714 r3705 r3759 into r3765;
    ternary r3714 r3706 r3760 into r3766;
    ternary r3711 r3710 r3700 into r3767;
    ternary r3711 r3701 r3761 into r3768;
    ternary r3711 r3702 r3762 into r3769;
    ternary r3711 r3703 r3763 into r3770;
    ternary r3711 r3704 r3764 into r3771;
    ternary r3711 r3705 r3765 into r3772;
    ternary r3711 r3706 r3766 into r3773;
    ternary r3708 r3767 r3700 into r3774;
    ternary r3708 r3768 r3701 into r3775;
    ternary r3708 r3769 r3702 into r3776;
    ternary r3708 r3770 r3703 into r3777;
    ternary r3708 r3771 r3704 into r3778;
    ternary r3708 r3772 r3705 into r3779;
    ternary r3708 r3773 r3706 into r3780;
    rand.chacha into r3781 as u32;
    not r3780 into r3782;
    mod r3781 33u32 into r3783;
    add r3783 1u32 into r3784;
    is.eq r3774 0u32 into r3785;
    is.eq r3775 0u32 into r3786;
    is.neq r3774 r3784 into r3787;
    and r3786 r3787 into r3788;
    is.eq r3776 0u32 into r3789;
    is.neq r3774 r3784 into r3790;
    is.neq r3775 r3784 into r3791;
    and r3790 r3791 into r3792;
    and r3789 r3792 into r3793;
    is.eq r3777 0u32 into r3794;
    is.neq r3774 r3784 into r3795;
    is.neq r3775 r3784 into r3796;
    and r3795 r3796 into r3797;
    is.neq r3776 r3784 into r3798;
    and r3797 r3798 into r3799;
    and r3794 r3799 into r3800;
    is.eq r3778 0u32 into r3801;
    is.neq r3774 r3784 into r3802;
    is.neq r3775 r3784 into r3803;
    and r3802 r3803 into r3804;
    is.neq r3776 r3784 into r3805;
    and r3804 r3805 into r3806;
    is.neq r3777 r3784 into r3807;
    and r3806 r3807 into r3808;
    and r3801 r3808 into r3809;
    is.eq r3779 0u32 into r3810;
    is.neq r3774 r3784 into r3811;
    is.neq r3775 r3784 into r3812;
    and r3811 r3812 into r3813;
    is.neq r3776 r3784 into r3814;
    and r3813 r3814 into r3815;
    is.neq r3777 r3784 into r3816;
    and r3815 r3816 into r3817;
    is.neq r3778 r3784 into r3818;
    and r3817 r3818 into r3819;
    and r3810 r3819 into r3820;
    ternary r3820 r3784 r3779 into r3821;
    ternary r3820 true r3780 into r3822;
    ternary r3809 r3784 r3778 into r3823;
    ternary r3809 r3779 r3821 into r3824;
    ternary r3809 r3780 r3822 into r3825;
    ternary r3800 r3784 r3777 into r3826;
    ternary r3800 r3778 r3823 into r3827;
    ternary r3800 r3779 r3824 into r3828;
    ternary r3800 r3780 r3825 into r3829;
    ternary r3793 r3784 r3776 into r3830;
    ternary r3793 r3777 r3826 into r3831;
    ternary r3793 r3778 r3827 into r3832;
    ternary r3793 r3779 r3828 into r3833;
    ternary r3793 r3780 r3829 into r3834;
    ternary r3788 r3784 r3775 into r3835;
    ternary r3788 r3776 r3830 into r3836;
    ternary r3788 r3777 r3831 into r3837;
    ternary r3788 r3778 r3832 into r3838;
    ternary r3788 r3779 r3833 into r3839;
    ternary r3788 r3780 r3834 into r3840;
    ternary r3785 r3784 r3774 into r3841;
    ternary r3785 r3775 r3835 into r3842;
    ternary r3785 r3776 r3836 into r3843;
    ternary r3785 r3777 r3837 into r3844;
    ternary r3785 r3778 r3838 into r3845;
    ternary r3785 r3779 r3839 into r3846;
    ternary r3785 r3780 r3840 into r3847;
    ternary r3782 r3841 r3774 into r3848;
    ternary r3782 r3842 r3775 into r3849;
    ternary r3782 r3843 r3776 into r3850;
    ternary r3782 r3844 r3777 into r3851;
    ternary r3782 r3845 r3778 into r3852;
    ternary r3782 r3846 r3779 into r3853;
    ternary r3782 r3847 r3780 into r3854;
    rand.chacha into r3855 as u32;
    not r3854 into r3856;
    mod r3855 33u32 into r3857;
    add r3857 1u32 into r3858;
    is.eq r3848 0u32 into r3859;
    is.eq r3849 0u32 into r3860;
    is.neq r3848 r3858 into r3861;
    and r3860 r3861 into r3862;
    is.eq r3850 0u32 into r3863;
    is.neq r3848 r3858 into r3864;
    is.neq r3849 r3858 into r3865;
    and r3864 r3865 into r3866;
    and r3863 r3866 into r3867;
    is.eq r3851 0u32 into r3868;
    is.neq r3848 r3858 into r3869;
    is.neq r3849 r3858 into r3870;
    and r3869 r3870 into r3871;
    is.neq r3850 r3858 into r3872;
    and r3871 r3872 into r3873;
    and r3868 r3873 into r3874;
    is.eq r3852 0u32 into r3875;
    is.neq r3848 r3858 into r3876;
    is.neq r3849 r3858 into r3877;
    and r3876 r3877 into r3878;
    is.neq r3850 r3858 into r3879;
    and r3878 r3879 into r3880;
    is.neq r3851 r3858 into r3881;
    and r3880 r3881 into r3882;
    and r3875 r3882 into r3883;
    is.eq r3853 0u32 into r3884;
    is.neq r3848 r3858 into r3885;
    is.neq r3849 r3858 into r3886;
    and r3885 r3886 into r3887;
    is.neq r3850 r3858 into r3888;
    and r3887 r3888 into r3889;
    is.neq r3851 r3858 into r3890;
    and r3889 r3890 into r3891;
    is.neq r3852 r3858 into r3892;
    and r3891 r3892 into r3893;
    and r3884 r3893 into r3894;
    ternary r3894 r3858 r3853 into r3895;
    ternary r3894 true r3854 into r3896;
    ternary r3883 r3858 r3852 into r3897;
    ternary r3883 r3853 r3895 into r3898;
    ternary r3883 r3854 r3896 into r3899;
    ternary r3874 r3858 r3851 into r3900;
    ternary r3874 r3852 r3897 into r3901;
    ternary r3874 r3853 r3898 into r3902;
    ternary r3874 r3854 r3899 into r3903;
    ternary r3867 r3858 r3850 into r3904;
    ternary r3867 r3851 r3900 into r3905;
    ternary r3867 r3852 r3901 into r3906;
    ternary r3867 r3853 r3902 into r3907;
    ternary r3867 r3854 r3903 into r3908;
    ternary r3862 r3858 r3849 into r3909;
    ternary r3862 r3850 r3904 into r3910;
    ternary r3862 r3851 r3905 into r3911;
    ternary r3862 r3852 r3906 into r3912;
    ternary r3862 r3853 r3907 into r3913;
    ternary r3862 r3854 r3908 into r3914;
    ternary r3859 r3858 r3848 into r3915;
    ternary r3859 r3849 r3909 into r3916;
    ternary r3859 r3850 r3910 into r3917;
    ternary r3859 r3851 r3911 into r3918;
    ternary r3859 r3852 r3912 into r3919;
    ternary r3859 r3853 r3913 into r3920;
    ternary r3859 r3854 r3914 into r3921;
    ternary r3856 r3915 r3848 into r3922;
    ternary r3856 r3916 r3849 into r3923;
    ternary r3856 r3917 r3850 into r3924;
    ternary r3856 r3918 r3851 into r3925;
    ternary r3856 r3919 r3852 into r3926;
    ternary r3856 r3920 r3853 into r3927;
    ternary r3856 r3921 r3854 into r3928;
    rand.chacha into r3929 as u32;
    not r3928 into r3930;
    mod r3929 33u32 into r3931;
    add r3931 1u32 into r3932;
    is.eq r3922 0u32 into r3933;
    is.eq r3923 0u32 into r3934;
    is.neq r3922 r3932 into r3935;
    and r3934 r3935 into r3936;
    is.eq r3924 0u32 into r3937;
    is.neq r3922 r3932 into r3938;
    is.neq r3923 r3932 into r3939;
    and r3938 r3939 into r3940;
    and r3937 r3940 into r3941;
    is.eq r3925 0u32 into r3942;
    is.neq r3922 r3932 into r3943;
    is.neq r3923 r3932 into r3944;
    and r3943 r3944 into r3945;
    is.neq r3924 r3932 into r3946;
    and r3945 r3946 into r3947;
    and r3942 r3947 into r3948;
    is.eq r3926 0u32 into r3949;
    is.neq r3922 r3932 into r3950;
    is.neq r3923 r3932 into r3951;
    and r3950 r3951 into r3952;
    is.neq r3924 r3932 into r3953;
    and r3952 r3953 into r3954;
    is.neq r3925 r3932 into r3955;
    and r3954 r3955 into r3956;
    and r3949 r3956 into r3957;
    is.eq r3927 0u32 into r3958;
    is.neq r3922 r3932 into r3959;
    is.neq r3923 r3932 into r3960;
    and r3959 r3960 into r3961;
    is.neq r3924 r3932 into r3962;
    and r3961 r3962 into r3963;
    is.neq r3925 r3932 into r3964;
    and r3963 r3964 into r3965;
    is.neq r3926 r3932 into r3966;
    and r3965 r3966 into r3967;
    and r3958 r3967 into r3968;
    ternary r3968 r3932 r3927 into r3969;
    ternary r3968 true r3928 into r3970;
    ternary r3957 r3932 r3926 into r3971;
    ternary r3957 r3927 r3969 into r3972;
    ternary r3957 r3928 r3970 into r3973;
    ternary r3948 r3932 r3925 into r3974;
    ternary r3948 r3926 r3971 into r3975;
    ternary r3948 r3927 r3972 into r3976;
    ternary r3948 r3928 r3973 into r3977;
    ternary r3941 r3932 r3924 into r3978;
    ternary r3941 r3925 r3974 into r3979;
    ternary r3941 r3926 r3975 into r3980;
    ternary r3941 r3927 r3976 into r3981;
    ternary r3941 r3928 r3977 into r3982;
    ternary r3936 r3932 r3923 into r3983;
    ternary r3936 r3924 r3978 into r3984;
    ternary r3936 r3925 r3979 into r3985;
    ternary r3936 r3926 r3980 into r3986;
    ternary r3936 r3927 r3981 into r3987;
    ternary r3936 r3928 r3982 into r3988;
    ternary r3933 r3932 r3922 into r3989;
    ternary r3933 r3923 r3983 into r3990;
    ternary r3933 r3924 r3984 into r3991;
    ternary r3933 r3925 r3985 into r3992;
    ternary r3933 r3926 r3986 into r3993;
    ternary r3933 r3927 r3987 into r3994;
    ternary r3933 r3928 r3988 into r3995;
    ternary r3930 r3989 r3922 into r3996;
    ternary r3930 r3990 r3923 into r3997;
    ternary r3930 r3991 r3924 into r3998;
    ternary r3930 r3992 r3925 into r3999;
    ternary r3930 r3993 r3926 into r4000;
    ternary r3930 r3994 r3927 into r4001;
    ternary r3930 r3995 r3928 into r4002;
    rand.chacha into r4003 as u32;
    not r4002 into r4004;
    mod r4003 33u32 into r4005;
    add r4005 1u32 into r4006;
    is.eq r3996 0u32 into r4007;
    is.eq r3997 0u32 into r4008;
    is.neq r3996 r4006 into r4009;
    and r4008 r4009 into r4010;
    is.eq r3998 0u32 into r4011;
    is.neq r3996 r4006 into r4012;
    is.neq r3997 r4006 into r4013;
    and r4012 r4013 into r4014;
    and r4011 r4014 into r4015;
    is.eq r3999 0u32 into r4016;
    is.neq r3996 r4006 into r4017;
    is.neq r3997 r4006 into r4018;
    and r4017 r4018 into r4019;
    is.neq r3998 r4006 into r4020;
    and r4019 r4020 into r4021;
    and r4016 r4021 into r4022;
    is.eq r4000 0u32 into r4023;
    is.neq r3996 r4006 into r4024;
    is.neq r3997 r4006 into r4025;
    and r4024 r4025 into r4026;
    is.neq r3998 r4006 into r4027;
    and r4026 r4027 into r4028;
    is.neq r3999 r4006 into r4029;
    and r4028 r4029 into r4030;
    and r4023 r4030 into r4031;
    is.eq r4001 0u32 into r4032;
    is.neq r3996 r4006 into r4033;
    is.neq r3997 r4006 into r4034;
    and r4033 r4034 into r4035;
    is.neq r3998 r4006 into r4036;
    and r4035 r4036 into r4037;
    is.neq r3999 r4006 into r4038;
    and r4037 r4038 into r4039;
    is.neq r4000 r4006 into r4040;
    and r4039 r4040 into r4041;
    and r4032 r4041 into r4042;
    ternary r4042 r4006 r4001 into r4043;
    ternary r4042 true r4002 into r4044;
    ternary r4031 r4006 r4000 into r4045;
    ternary r4031 r4001 r4043 into r4046;
    ternary r4031 r4002 r4044 into r4047;
    ternary r4022 r4006 r3999 into r4048;
    ternary r4022 r4000 r4045 into r4049;
    ternary r4022 r4001 r4046 into r4050;
    ternary r4022 r4002 r4047 into r4051;
    ternary r4015 r4006 r3998 into r4052;
    ternary r4015 r3999 r4048 into r4053;
    ternary r4015 r4000 r4049 into r4054;
    ternary r4015 r4001 r4050 into r4055;
    ternary r4015 r4002 r4051 into r4056;
    ternary r4010 r4006 r3997 into r4057;
    ternary r4010 r3998 r4052 into r4058;
    ternary r4010 r3999 r4053 into r4059;
    ternary r4010 r4000 r4054 into r4060;
    ternary r4010 r4001 r4055 into r4061;
    ternary r4010 r4002 r4056 into r4062;
    ternary r4007 r4006 r3996 into r4063;
    ternary r4007 r3997 r4057 into r4064;
    ternary r4007 r3998 r4058 into r4065;
    ternary r4007 r3999 r4059 into r4066;
    ternary r4007 r4000 r4060 into r4067;
    ternary r4007 r4001 r4061 into r4068;
    ternary r4007 r4002 r4062 into r4069;
    ternary r4004 r4063 r3996 into r4070;
    ternary r4004 r4064 r3997 into r4071;
    ternary r4004 r4065 r3998 into r4072;
    ternary r4004 r4066 r3999 into r4073;
    ternary r4004 r4067 r4000 into r4074;
    ternary r4004 r4068 r4001 into r4075;
    ternary r4004 r4069 r4002 into r4076;
    rand.chacha into r4077 as u32;
    not r4076 into r4078;
    mod r4077 33u32 into r4079;
    add r4079 1u32 into r4080;
    is.eq r4070 0u32 into r4081;
    is.eq r4071 0u32 into r4082;
    is.neq r4070 r4080 into r4083;
    and r4082 r4083 into r4084;
    is.eq r4072 0u32 into r4085;
    is.neq r4070 r4080 into r4086;
    is.neq r4071 r4080 into r4087;
    and r4086 r4087 into r4088;
    and r4085 r4088 into r4089;
    is.eq r4073 0u32 into r4090;
    is.neq r4070 r4080 into r4091;
    is.neq r4071 r4080 into r4092;
    and r4091 r4092 into r4093;
    is.neq r4072 r4080 into r4094;
    and r4093 r4094 into r4095;
    and r4090 r4095 into r4096;
    is.eq r4074 0u32 into r4097;
    is.neq r4070 r4080 into r4098;
    is.neq r4071 r4080 into r4099;
    and r4098 r4099 into r4100;
    is.neq r4072 r4080 into r4101;
    and r4100 r4101 into r4102;
    is.neq r4073 r4080 into r4103;
    and r4102 r4103 into r4104;
    and r4097 r4104 into r4105;
    is.eq r4075 0u32 into r4106;
    is.neq r4070 r4080 into r4107;
    is.neq r4071 r4080 into r4108;
    and r4107 r4108 into r4109;
    is.neq r4072 r4080 into r4110;
    and r4109 r4110 into r4111;
    is.neq r4073 r4080 into r4112;
    and r4111 r4112 into r4113;
    is.neq r4074 r4080 into r4114;
    and r4113 r4114 into r4115;
    and r4106 r4115 into r4116;
    ternary r4116 r4080 r4075 into r4117;
    ternary r4116 true r4076 into r4118;
    ternary r4105 r4080 r4074 into r4119;
    ternary r4105 r4075 r4117 into r4120;
    ternary r4105 r4076 r4118 into r4121;
    ternary r4096 r4080 r4073 into r4122;
    ternary r4096 r4074 r4119 into r4123;
    ternary r4096 r4075 r4120 into r4124;
    ternary r4096 r4076 r4121 into r4125;
    ternary r4089 r4080 r4072 into r4126;
    ternary r4089 r4073 r4122 into r4127;
    ternary r4089 r4074 r4123 into r4128;
    ternary r4089 r4075 r4124 into r4129;
    ternary r4089 r4076 r4125 into r4130;
    ternary r4084 r4080 r4071 into r4131;
    ternary r4084 r4072 r4126 into r4132;
    ternary r4084 r4073 r4127 into r4133;
    ternary r4084 r4074 r4128 into r4134;
    ternary r4084 r4075 r4129 into r4135;
    ternary r4084 r4076 r4130 into r4136;
    ternary r4081 r4080 r4070 into r4137;
    ternary r4081 r4071 r4131 into r4138;
    ternary r4081 r4072 r4132 into r4139;
    ternary r4081 r4073 r4133 into r4140;
    ternary r4081 r4074 r4134 into r4141;
    ternary r4081 r4075 r4135 into r4142;
    ternary r4081 r4076 r4136 into r4143;
    ternary r4078 r4137 r4070 into r4144;
    ternary r4078 r4138 r4071 into r4145;
    ternary r4078 r4139 r4072 into r4146;
    ternary r4078 r4140 r4073 into r4147;
    ternary r4078 r4141 r4074 into r4148;
    ternary r4078 r4142 r4075 into r4149;
    ternary r4078 r4143 r4076 into r4150;
    rand.chacha into r4151 as u32;
    not r4150 into r4152;
    mod r4151 33u32 into r4153;
    add r4153 1u32 into r4154;
    is.eq r4144 0u32 into r4155;
    is.eq r4145 0u32 into r4156;
    is.neq r4144 r4154 into r4157;
    and r4156 r4157 into r4158;
    is.eq r4146 0u32 into r4159;
    is.neq r4144 r4154 into r4160;
    is.neq r4145 r4154 into r4161;
    and r4160 r4161 into r4162;
    and r4159 r4162 into r4163;
    is.eq r4147 0u32 into r4164;
    is.neq r4144 r4154 into r4165;
    is.neq r4145 r4154 into r4166;
    and r4165 r4166 into r4167;
    is.neq r4146 r4154 into r4168;
    and r4167 r4168 into r4169;
    and r4164 r4169 into r4170;
    is.eq r4148 0u32 into r4171;
    is.neq r4144 r4154 into r4172;
    is.neq r4145 r4154 into r4173;
    and r4172 r4173 into r4174;
    is.neq r4146 r4154 into r4175;
    and r4174 r4175 into r4176;
    is.neq r4147 r4154 into r4177;
    and r4176 r4177 into r4178;
    and r4171 r4178 into r4179;
    is.eq r4149 0u32 into r4180;
    is.neq r4144 r4154 into r4181;
    is.neq r4145 r4154 into r4182;
    and r4181 r4182 into r4183;
    is.neq r4146 r4154 into r4184;
    and r4183 r4184 into r4185;
    is.neq r4147 r4154 into r4186;
    and r4185 r4186 into r4187;
    is.neq r4148 r4154 into r4188;
    and r4187 r4188 into r4189;
    and r4180 r4189 into r4190;
    ternary r4190 r4154 r4149 into r4191;
    ternary r4190 true r4150 into r4192;
    ternary r4179 r4154 r4148 into r4193;
    ternary r4179 r4149 r4191 into r4194;
    ternary r4179 r4150 r4192 into r4195;
    ternary r4170 r4154 r4147 into r4196;
    ternary r4170 r4148 r4193 into r4197;
    ternary r4170 r4149 r4194 into r4198;
    ternary r4170 r4150 r4195 into r4199;
    ternary r4163 r4154 r4146 into r4200;
    ternary r4163 r4147 r4196 into r4201;
    ternary r4163 r4148 r4197 into r4202;
    ternary r4163 r4149 r4198 into r4203;
    ternary r4163 r4150 r4199 into r4204;
    ternary r4158 r4154 r4145 into r4205;
    ternary r4158 r4146 r4200 into r4206;
    ternary r4158 r4147 r4201 into r4207;
    ternary r4158 r4148 r4202 into r4208;
    ternary r4158 r4149 r4203 into r4209;
    ternary r4158 r4150 r4204 into r4210;
    ternary r4155 r4154 r4144 into r4211;
    ternary r4155 r4145 r4205 into r4212;
    ternary r4155 r4146 r4206 into r4213;
    ternary r4155 r4147 r4207 into r4214;
    ternary r4155 r4148 r4208 into r4215;
    ternary r4155 r4149 r4209 into r4216;
    ternary r4155 r4150 r4210 into r4217;
    ternary r4152 r4211 r4144 into r4218;
    ternary r4152 r4212 r4145 into r4219;
    ternary r4152 r4213 r4146 into r4220;
    ternary r4152 r4214 r4147 into r4221;
    ternary r4152 r4215 r4148 into r4222;
    ternary r4152 r4216 r4149 into r4223;
    ternary r4152 r4217 r4150 into r4224;
    rand.chacha into r4225 as u32;
    not r4224 into r4226;
    mod r4225 33u32 into r4227;
    add r4227 1u32 into r4228;
    is.eq r4218 0u32 into r4229;
    is.eq r4219 0u32 into r4230;
    is.neq r4218 r4228 into r4231;
    and r4230 r4231 into r4232;
    is.eq r4220 0u32 into r4233;
    is.neq r4218 r4228 into r4234;
    is.neq r4219 r4228 into r4235;
    and r4234 r4235 into r4236;
    and r4233 r4236 into r4237;
    is.eq r4221 0u32 into r4238;
    is.neq r4218 r4228 into r4239;
    is.neq r4219 r4228 into r4240;
    and r4239 r4240 into r4241;
    is.neq r4220 r4228 into r4242;
    and r4241 r4242 into r4243;
    and r4238 r4243 into r4244;
    is.eq r4222 0u32 into r4245;
    is.neq r4218 r4228 into r4246;
    is.neq r4219 r4228 into r4247;
    and r4246 r4247 into r4248;
    is.neq r4220 r4228 into r4249;
    and r4248 r4249 into r4250;
    is.neq r4221 r4228 into r4251;
    and r4250 r4251 into r4252;
    and r4245 r4252 into r4253;
    is.eq r4223 0u32 into r4254;
    is.neq r4218 r4228 into r4255;
    is.neq r4219 r4228 into r4256;
    and r4255 r4256 into r4257;
    is.neq r4220 r4228 into r4258;
    and r4257 r4258 into r4259;
    is.neq r4221 r4228 into r4260;
    and r4259 r4260 into r4261;
    is.neq r4222 r4228 into r4262;
    and r4261 r4262 into r4263;
    and r4254 r4263 into r4264;
    ternary r4264 r4228 r4223 into r4265;
    ternary r4264 true r4224 into r4266;
    ternary r4253 r4228 r4222 into r4267;
    ternary r4253 r4223 r4265 into r4268;
    ternary r4253 r4224 r4266 into r4269;
    ternary r4244 r4228 r4221 into r4270;
    ternary r4244 r4222 r4267 into r4271;
    ternary r4244 r4223 r4268 into r4272;
    ternary r4244 r4224 r4269 into r4273;
    ternary r4237 r4228 r4220 into r4274;
    ternary r4237 r4221 r4270 into r4275;
    ternary r4237 r4222 r4271 into r4276;
    ternary r4237 r4223 r4272 into r4277;
    ternary r4237 r4224 r4273 into r4278;
    ternary r4232 r4228 r4219 into r4279;
    ternary r4232 r4220 r4274 into r4280;
    ternary r4232 r4221 r4275 into r4281;
    ternary r4232 r4222 r4276 into r4282;
    ternary r4232 r4223 r4277 into r4283;
    ternary r4232 r4224 r4278 into r4284;
    ternary r4229 r4228 r4218 into r4285;
    ternary r4229 r4219 r4279 into r4286;
    ternary r4229 r4220 r4280 into r4287;
    ternary r4229 r4221 r4281 into r4288;
    ternary r4229 r4222 r4282 into r4289;
    ternary r4229 r4223 r4283 into r4290;
    ternary r4229 r4224 r4284 into r4291;
    ternary r4226 r4285 r4218 into r4292;
    ternary r4226 r4286 r4219 into r4293;
    ternary r4226 r4287 r4220 into r4294;
    ternary r4226 r4288 r4221 into r4295;
    ternary r4226 r4289 r4222 into r4296;
    ternary r4226 r4290 r4223 into r4297;
    ternary r4226 r4291 r4224 into r4298;
    rand.chacha into r4299 as u32;
    not r4298 into r4300;
    mod r4299 33u32 into r4301;
    add r4301 1u32 into r4302;
    is.eq r4292 0u32 into r4303;
    is.eq r4293 0u32 into r4304;
    is.neq r4292 r4302 into r4305;
    and r4304 r4305 into r4306;
    is.eq r4294 0u32 into r4307;
    is.neq r4292 r4302 into r4308;
    is.neq r4293 r4302 into r4309;
    and r4308 r4309 into r4310;
    and r4307 r4310 into r4311;
    is.eq r4295 0u32 into r4312;
    is.neq r4292 r4302 into r4313;
    is.neq r4293 r4302 into r4314;
    and r4313 r4314 into r4315;
    is.neq r4294 r4302 into r4316;
    and r4315 r4316 into r4317;
    and r4312 r4317 into r4318;
    is.eq r4296 0u32 into r4319;
    is.neq r4292 r4302 into r4320;
    is.neq r4293 r4302 into r4321;
    and r4320 r4321 into r4322;
    is.neq r4294 r4302 into r4323;
    and r4322 r4323 into r4324;
    is.neq r4295 r4302 into r4325;
    and r4324 r4325 into r4326;
    and r4319 r4326 into r4327;
    is.eq r4297 0u32 into r4328;
    is.neq r4292 r4302 into r4329;
    is.neq r4293 r4302 into r4330;
    and r4329 r4330 into r4331;
    is.neq r4294 r4302 into r4332;
    and r4331 r4332 into r4333;
    is.neq r4295 r4302 into r4334;
    and r4333 r4334 into r4335;
    is.neq r4296 r4302 into r4336;
    and r4335 r4336 into r4337;
    and r4328 r4337 into r4338;
    ternary r4338 r4302 r4297 into r4339;
    ternary r4338 true r4298 into r4340;
    ternary r4327 r4302 r4296 into r4341;
    ternary r4327 r4297 r4339 into r4342;
    ternary r4327 r4298 r4340 into r4343;
    ternary r4318 r4302 r4295 into r4344;
    ternary r4318 r4296 r4341 into r4345;
    ternary r4318 r4297 r4342 into r4346;
    ternary r4318 r4298 r4343 into r4347;
    ternary r4311 r4302 r4294 into r4348;
    ternary r4311 r4295 r4344 into r4349;
    ternary r4311 r4296 r4345 into r4350;
    ternary r4311 r4297 r4346 into r4351;
    ternary r4311 r4298 r4347 into r4352;
    ternary r4306 r4302 r4293 into r4353;
    ternary r4306 r4294 r4348 into r4354;
    ternary r4306 r4295 r4349 into r4355;
    ternary r4306 r4296 r4350 into r4356;
    ternary r4306 r4297 r4351 into r4357;
    ternary r4306 r4298 r4352 into r4358;
    ternary r4303 r4302 r4292 into r4359;
    ternary r4303 r4293 r4353 into r4360;
    ternary r4303 r4294 r4354 into r4361;
    ternary r4303 r4295 r4355 into r4362;
    ternary r4303 r4296 r4356 into r4363;
    ternary r4303 r4297 r4357 into r4364;
    ternary r4303 r4298 r4358 into r4365;
    ternary r4300 r4359 r4292 into r4366;
    ternary r4300 r4360 r4293 into r4367;
    ternary r4300 r4361 r4294 into r4368;
    ternary r4300 r4362 r4295 into r4369;
    ternary r4300 r4363 r4296 into r4370;
    ternary r4300 r4364 r4297 into r4371;
    ternary r4300 r4365 r4298 into r4372;
    rand.chacha into r4373 as u32;
    not r4372 into r4374;
    mod r4373 33u32 into r4375;
    add r4375 1u32 into r4376;
    is.eq r4366 0u32 into r4377;
    is.eq r4367 0u32 into r4378;
    is.neq r4366 r4376 into r4379;
    and r4378 r4379 into r4380;
    is.eq r4368 0u32 into r4381;
    is.neq r4366 r4376 into r4382;
    is.neq r4367 r4376 into r4383;
    and r4382 r4383 into r4384;
    and r4381 r4384 into r4385;
    is.eq r4369 0u32 into r4386;
    is.neq r4366 r4376 into r4387;
    is.neq r4367 r4376 into r4388;
    and r4387 r4388 into r4389;
    is.neq r4368 r4376 into r4390;
    and r4389 r4390 into r4391;
    and r4386 r4391 into r4392;
    is.eq r4370 0u32 into r4393;
    is.neq r4366 r4376 into r4394;
    is.neq r4367 r4376 into r4395;
    and r4394 r4395 into r4396;
    is.neq r4368 r4376 into r4397;
    and r4396 r4397 into r4398;
    is.neq r4369 r4376 into r4399;
    and r4398 r4399 into r4400;
    and r4393 r4400 into r4401;
    is.eq r4371 0u32 into r4402;
    is.neq r4366 r4376 into r4403;
    is.neq r4367 r4376 into r4404;
    and r4403 r4404 into r4405;
    is.neq r4368 r4376 into r4406;
    and r4405 r4406 into r4407;
    is.neq r4369 r4376 into r4408;
    and r4407 r4408 into r4409;
    is.neq r4370 r4376 into r4410;
    and r4409 r4410 into r4411;
    and r4402 r4411 into r4412;
    ternary r4412 r4376 r4371 into r4413;
    ternary r4412 true r4372 into r4414;
    ternary r4401 r4376 r4370 into r4415;
    ternary r4401 r4371 r4413 into r4416;
    ternary r4401 r4372 r4414 into r4417;
    ternary r4392 r4376 r4369 into r4418;
    ternary r4392 r4370 r4415 into r4419;
    ternary r4392 r4371 r4416 into r4420;
    ternary r4392 r4372 r4417 into r4421;
    ternary r4385 r4376 r4368 into r4422;
    ternary r4385 r4369 r4418 into r4423;
    ternary r4385 r4370 r4419 into r4424;
    ternary r4385 r4371 r4420 into r4425;
    ternary r4385 r4372 r4421 into r4426;
    ternary r4380 r4376 r4367 into r4427;
    ternary r4380 r4368 r4422 into r4428;
    ternary r4380 r4369 r4423 into r4429;
    ternary r4380 r4370 r4424 into r4430;
    ternary r4380 r4371 r4425 into r4431;
    ternary r4380 r4372 r4426 into r4432;
    ternary r4377 r4376 r4366 into r4433;
    ternary r4377 r4367 r4427 into r4434;
    ternary r4377 r4368 r4428 into r4435;
    ternary r4377 r4369 r4429 into r4436;
    ternary r4377 r4370 r4430 into r4437;
    ternary r4377 r4371 r4431 into r4438;
    ternary r4377 r4372 r4432 into r4439;
    ternary r4374 r4433 r4366 into r4440;
    ternary r4374 r4434 r4367 into r4441;
    ternary r4374 r4435 r4368 into r4442;
    ternary r4374 r4436 r4369 into r4443;
    ternary r4374 r4437 r4370 into r4444;
    ternary r4374 r4438 r4371 into r4445;
    ternary r4374 r4439 r4372 into r4446;
    not r4446 into r4447;
    not r4447 into r4448;
    is.eq 0u8 1u8 into r4449;
    or r4448 r4449 into r4450;
    assert.eq r4450 true ;
    rand.chacha into r4451 as u32;
    mod r4451 16u32 into r4452;
    add r4452 1u32 into r4453;
    cast r1 0u32 0u32 0u64 0u32 0u32 0u32 0u32 0u32 0u32 0u32 0u64 10u32 into r4454 as TicketPurchasePriceInfo;
    is.eq r2.current_round_num 0u32 into r4455;
    ternary r4455 true false into r4456;
    cast r1 0u32 0u32 0u64 0u32 0u32 0u32 0u32 0u32 0u32 0u32 into r4457 as TicketPurchaseInfo;
    not r4456 into r4458;
    lte 1u32 r2.current_round_num into r4459;
    and r4458 r4459 into r4460;
    get.or_use ticketPurchaseMap[1u32] r4457 into r4461;
    is.neq r4461.round_number 0u32 into r4462;
    is.eq r4461.blue_ball_1 r4453 into r4463;
    is.eq r4461.red_ball_1 r4440 into r4464;
    is.eq r4461.red_ball_1 r4441 into r4465;
    or r4464 r4465 into r4466;
    is.eq r4461.red_ball_1 r4442 into r4467;
    or r4466 r4467 into r4468;
    is.eq r4461.red_ball_1 r4443 into r4469;
    or r4468 r4469 into r4470;
    is.eq r4461.red_ball_1 r4444 into r4471;
    or r4470 r4471 into r4472;
    is.eq r4461.red_ball_1 r4445 into r4473;
    or r4472 r4473 into r4474;
    add 0u8 1u8 into r4475;
    ternary r4474 r4475 0u8 into r4476;
    is.eq r4461.red_ball_2 r4440 into r4477;
    is.eq r4461.red_ball_2 r4441 into r4478;
    or r4477 r4478 into r4479;
    is.eq r4461.red_ball_2 r4442 into r4480;
    or r4479 r4480 into r4481;
    is.eq r4461.red_ball_2 r4443 into r4482;
    or r4481 r4482 into r4483;
    is.eq r4461.red_ball_2 r4444 into r4484;
    or r4483 r4484 into r4485;
    is.eq r4461.red_ball_2 r4445 into r4486;
    or r4485 r4486 into r4487;
    add r4476 1u8 into r4488;
    ternary r4487 r4488 r4476 into r4489;
    is.eq r4461.red_ball_3 r4440 into r4490;
    is.eq r4461.red_ball_3 r4441 into r4491;
    or r4490 r4491 into r4492;
    is.eq r4461.red_ball_3 r4442 into r4493;
    or r4492 r4493 into r4494;
    is.eq r4461.red_ball_3 r4443 into r4495;
    or r4494 r4495 into r4496;
    is.eq r4461.red_ball_3 r4444 into r4497;
    or r4496 r4497 into r4498;
    is.eq r4461.red_ball_3 r4445 into r4499;
    or r4498 r4499 into r4500;
    add r4489 1u8 into r4501;
    ternary r4500 r4501 r4489 into r4502;
    is.eq r4461.red_ball_4 r4440 into r4503;
    is.eq r4461.red_ball_4 r4441 into r4504;
    or r4503 r4504 into r4505;
    is.eq r4461.red_ball_4 r4442 into r4506;
    or r4505 r4506 into r4507;
    is.eq r4461.red_ball_4 r4443 into r4508;
    or r4507 r4508 into r4509;
    is.eq r4461.red_ball_4 r4444 into r4510;
    or r4509 r4510 into r4511;
    is.eq r4461.red_ball_4 r4445 into r4512;
    or r4511 r4512 into r4513;
    add r4502 1u8 into r4514;
    ternary r4513 r4514 r4502 into r4515;
    is.eq r4461.red_ball_5 r4440 into r4516;
    is.eq r4461.red_ball_5 r4441 into r4517;
    or r4516 r4517 into r4518;
    is.eq r4461.red_ball_5 r4442 into r4519;
    or r4518 r4519 into r4520;
    is.eq r4461.red_ball_5 r4443 into r4521;
    or r4520 r4521 into r4522;
    is.eq r4461.red_ball_5 r4444 into r4523;
    or r4522 r4523 into r4524;
    is.eq r4461.red_ball_5 r4445 into r4525;
    or r4524 r4525 into r4526;
    add r4515 1u8 into r4527;
    ternary r4526 r4527 r4515 into r4528;
    is.eq r4461.red_ball_6 r4440 into r4529;
    is.eq r4461.red_ball_6 r4441 into r4530;
    or r4529 r4530 into r4531;
    is.eq r4461.red_ball_6 r4442 into r4532;
    or r4531 r4532 into r4533;
    is.eq r4461.red_ball_6 r4443 into r4534;
    or r4533 r4534 into r4535;
    is.eq r4461.red_ball_6 r4444 into r4536;
    or r4535 r4536 into r4537;
    is.eq r4461.red_ball_6 r4445 into r4538;
    or r4537 r4538 into r4539;
    add r4528 1u8 into r4540;
    ternary r4539 r4540 r4528 into r4541;
    gte r4541 3u8 into r4542;
    gte r4541 1u8 into r4543;
    ternary r4543 2u8 0u8 into r4544;
    ternary r4542 1u8 r4544 into r4545;
    is.eq r4461.red_ball_1 r4440 into r4546;
    is.eq r4461.red_ball_1 r4441 into r4547;
    or r4546 r4547 into r4548;
    is.eq r4461.red_ball_1 r4442 into r4549;
    or r4548 r4549 into r4550;
    is.eq r4461.red_ball_1 r4443 into r4551;
    or r4550 r4551 into r4552;
    is.eq r4461.red_ball_1 r4444 into r4553;
    or r4552 r4553 into r4554;
    is.eq r4461.red_ball_1 r4445 into r4555;
    or r4554 r4555 into r4556;
    add 0u8 1u8 into r4557;
    ternary r4556 r4557 0u8 into r4558;
    is.eq r4461.red_ball_2 r4440 into r4559;
    is.eq r4461.red_ball_2 r4441 into r4560;
    or r4559 r4560 into r4561;
    is.eq r4461.red_ball_2 r4442 into r4562;
    or r4561 r4562 into r4563;
    is.eq r4461.red_ball_2 r4443 into r4564;
    or r4563 r4564 into r4565;
    is.eq r4461.red_ball_2 r4444 into r4566;
    or r4565 r4566 into r4567;
    is.eq r4461.red_ball_2 r4445 into r4568;
    or r4567 r4568 into r4569;
    add r4558 1u8 into r4570;
    ternary r4569 r4570 r4558 into r4571;
    is.eq r4461.red_ball_3 r4440 into r4572;
    is.eq r4461.red_ball_3 r4441 into r4573;
    or r4572 r4573 into r4574;
    is.eq r4461.red_ball_3 r4442 into r4575;
    or r4574 r4575 into r4576;
    is.eq r4461.red_ball_3 r4443 into r4577;
    or r4576 r4577 into r4578;
    is.eq r4461.red_ball_3 r4444 into r4579;
    or r4578 r4579 into r4580;
    is.eq r4461.red_ball_3 r4445 into r4581;
    or r4580 r4581 into r4582;
    add r4571 1u8 into r4583;
    ternary r4582 r4583 r4571 into r4584;
    is.eq r4461.red_ball_4 r4440 into r4585;
    is.eq r4461.red_ball_4 r4441 into r4586;
    or r4585 r4586 into r4587;
    is.eq r4461.red_ball_4 r4442 into r4588;
    or r4587 r4588 into r4589;
    is.eq r4461.red_ball_4 r4443 into r4590;
    or r4589 r4590 into r4591;
    is.eq r4461.red_ball_4 r4444 into r4592;
    or r4591 r4592 into r4593;
    is.eq r4461.red_ball_4 r4445 into r4594;
    or r4593 r4594 into r4595;
    add r4584 1u8 into r4596;
    ternary r4595 r4596 r4584 into r4597;
    is.eq r4461.red_ball_5 r4440 into r4598;
    is.eq r4461.red_ball_5 r4441 into r4599;
    or r4598 r4599 into r4600;
    is.eq r4461.red_ball_5 r4442 into r4601;
    or r4600 r4601 into r4602;
    is.eq r4461.red_ball_5 r4443 into r4603;
    or r4602 r4603 into r4604;
    is.eq r4461.red_ball_5 r4444 into r4605;
    or r4604 r4605 into r4606;
    is.eq r4461.red_ball_5 r4445 into r4607;
    or r4606 r4607 into r4608;
    add r4597 1u8 into r4609;
    ternary r4608 r4609 r4597 into r4610;
    is.eq r4461.red_ball_6 r4440 into r4611;
    is.eq r4461.red_ball_6 r4441 into r4612;
    or r4611 r4612 into r4613;
    is.eq r4461.red_ball_6 r4442 into r4614;
    or r4613 r4614 into r4615;
    is.eq r4461.red_ball_6 r4443 into r4616;
    or r4615 r4616 into r4617;
    is.eq r4461.red_ball_6 r4444 into r4618;
    or r4617 r4618 into r4619;
    is.eq r4461.red_ball_6 r4445 into r4620;
    or r4619 r4620 into r4621;
    add r4610 1u8 into r4622;
    ternary r4621 r4622 r4610 into r4623;
    gte r4623 3u8 into r4624;
    ternary r4624 2u8 0u8 into r4625;
    ternary r4463 r4541 r4623 into r4626;
    ternary r4463 r4545 r4625 into r4627;
    is.eq r4627 1u8 into r4628;
    gt r4454.index 1u32 into r4629;
    cast r4461.user r4461.round_number r4461.count r4461.gates r4461.red_ball_1 r4461.red_ball_2 r4461.red_ball_3 r4461.red_ball_4 r4461.red_ball_5 r4461.red_ball_6 r4461.blue_ball_1 0u64 1u32 into r4630 as TicketPurchasePriceInfo;
    gt r4454.index 1u32 into r4631;
    cast r4461.user r4461.round_number r4461.count r4461.gates r4461.red_ball_1 r4461.red_ball_2 r4461.red_ball_3 r4461.red_ball_4 r4461.red_ball_5 r4461.red_ball_6 r4461.blue_ball_1 0u64 1u32 into r4632 as TicketPurchasePriceInfo;
    ternary r4631 r4454.user r4454.user into r4633;
    ternary r4631 r4454.round_number r4454.round_number into r4634;
    ternary r4631 r4454.count r4454.count into r4635;
    ternary r4631 r4454.gates r4454.gates into r4636;
    ternary r4631 r4454.red_ball_1 r4454.red_ball_1 into r4637;
    ternary r4631 r4454.red_ball_2 r4454.red_ball_2 into r4638;
    ternary r4631 r4454.red_ball_3 r4454.red_ball_3 into r4639;
    ternary r4631 r4454.red_ball_4 r4454.red_ball_4 into r4640;
    ternary r4631 r4454.red_ball_5 r4454.red_ball_5 into r4641;
    ternary r4631 r4454.red_ball_6 r4454.red_ball_6 into r4642;
    ternary r4631 r4454.blue_ball_1 r4454.blue_ball_1 into r4643;
    ternary r4631 r4454.reward r4454.reward into r4644;
    ternary r4631 r4454.index r4454.index into r4645;
    cast r4633 r4634 r4635 r4636 r4637 r4638 r4639 r4640 r4641 r4642 r4643 r4644 r4645 into r4646 as TicketPurchasePriceInfo;
    ternary r4631 r4632.user r4454.user into r4647;
    ternary r4631 r4632.round_number r4454.round_number into r4648;
    ternary r4631 r4632.count r4454.count into r4649;
    ternary r4631 r4632.gates r4454.gates into r4650;
    ternary r4631 r4632.red_ball_1 r4454.red_ball_1 into r4651;
    ternary r4631 r4632.red_ball_2 r4454.red_ball_2 into r4652;
    ternary r4631 r4632.red_ball_3 r4454.red_ball_3 into r4653;
    ternary r4631 r4632.red_ball_4 r4454.red_ball_4 into r4654;
    ternary r4631 r4632.red_ball_5 r4454.red_ball_5 into r4655;
    ternary r4631 r4632.red_ball_6 r4454.red_ball_6 into r4656;
    ternary r4631 r4632.blue_ball_1 r4454.blue_ball_1 into r4657;
    ternary r4631 r4632.reward r4454.reward into r4658;
    ternary r4631 r4632.index r4454.index into r4659;
    cast r4647 r4648 r4649 r4650 r4651 r4652 r4653 r4654 r4655 r4656 r4657 r4658 r4659 into r4660 as TicketPurchasePriceInfo;
    ternary r4629 r4630.user r4454.user into r4661;
    ternary r4629 r4630.round_number r4454.round_number into r4662;
    ternary r4629 r4630.count r4454.count into r4663;
    ternary r4629 r4630.gates r4454.gates into r4664;
    ternary r4629 r4630.red_ball_1 r4454.red_ball_1 into r4665;
    ternary r4629 r4630.red_ball_2 r4454.red_ball_2 into r4666;
    ternary r4629 r4630.red_ball_3 r4454.red_ball_3 into r4667;
    ternary r4629 r4630.red_ball_4 r4454.red_ball_4 into r4668;
    ternary r4629 r4630.red_ball_5 r4454.red_ball_5 into r4669;
    ternary r4629 r4630.red_ball_6 r4454.red_ball_6 into r4670;
    ternary r4629 r4630.blue_ball_1 r4454.blue_ball_1 into r4671;
    ternary r4629 r4630.reward r4454.reward into r4672;
    ternary r4629 r4630.index r4454.index into r4673;
    cast r4661 r4662 r4663 r4664 r4665 r4666 r4667 r4668 r4669 r4670 r4671 r4672 r4673 into r4674 as TicketPurchasePriceInfo;
    ternary r4629 r4454.user r4646.user into r4675;
    ternary r4629 r4454.round_number r4646.round_number into r4676;
    ternary r4629 r4454.count r4646.count into r4677;
    ternary r4629 r4454.gates r4646.gates into r4678;
    ternary r4629 r4454.red_ball_1 r4646.red_ball_1 into r4679;
    ternary r4629 r4454.red_ball_2 r4646.red_ball_2 into r4680;
    ternary r4629 r4454.red_ball_3 r4646.red_ball_3 into r4681;
    ternary r4629 r4454.red_ball_4 r4646.red_ball_4 into r4682;
    ternary r4629 r4454.red_ball_5 r4646.red_ball_5 into r4683;
    ternary r4629 r4454.red_ball_6 r4646.red_ball_6 into r4684;
    ternary r4629 r4454.blue_ball_1 r4646.blue_ball_1 into r4685;
    ternary r4629 r4454.reward r4646.reward into r4686;
    ternary r4629 r4454.index r4646.index into r4687;
    cast r4675 r4676 r4677 r4678 r4679 r4680 r4681 r4682 r4683 r4684 r4685 r4686 r4687 into r4688 as TicketPurchasePriceInfo;
    ternary r4629 r4454.user r4660.user into r4689;
    ternary r4629 r4454.round_number r4660.round_number into r4690;
    ternary r4629 r4454.count r4660.count into r4691;
    ternary r4629 r4454.gates r4660.gates into r4692;
    ternary r4629 r4454.red_ball_1 r4660.red_ball_1 into r4693;
    ternary r4629 r4454.red_ball_2 r4660.red_ball_2 into r4694;
    ternary r4629 r4454.red_ball_3 r4660.red_ball_3 into r4695;
    ternary r4629 r4454.red_ball_4 r4660.red_ball_4 into r4696;
    ternary r4629 r4454.red_ball_5 r4660.red_ball_5 into r4697;
    ternary r4629 r4454.red_ball_6 r4660.red_ball_6 into r4698;
    ternary r4629 r4454.blue_ball_1 r4660.blue_ball_1 into r4699;
    ternary r4629 r4454.reward r4660.reward into r4700;
    ternary r4629 r4454.index r4660.index into r4701;
    cast r4689 r4690 r4691 r4692 r4693 r4694 r4695 r4696 r4697 r4698 r4699 r4700 r4701 into r4702 as TicketPurchasePriceInfo;
    ternary r4628 r4674.user r4454.user into r4703;
    ternary r4628 r4674.round_number r4454.round_number into r4704;
    ternary r4628 r4674.count r4454.count into r4705;
    ternary r4628 r4674.gates r4454.gates into r4706;
    ternary r4628 r4674.red_ball_1 r4454.red_ball_1 into r4707;
    ternary r4628 r4674.red_ball_2 r4454.red_ball_2 into r4708;
    ternary r4628 r4674.red_ball_3 r4454.red_ball_3 into r4709;
    ternary r4628 r4674.red_ball_4 r4454.red_ball_4 into r4710;
    ternary r4628 r4674.red_ball_5 r4454.red_ball_5 into r4711;
    ternary r4628 r4674.red_ball_6 r4454.red_ball_6 into r4712;
    ternary r4628 r4674.blue_ball_1 r4454.blue_ball_1 into r4713;
    ternary r4628 r4674.reward r4454.reward into r4714;
    ternary r4628 r4674.index r4454.index into r4715;
    cast r4703 r4704 r4705 r4706 r4707 r4708 r4709 r4710 r4711 r4712 r4713 r4714 r4715 into r4716 as TicketPurchasePriceInfo;
    ternary r4628 r4688.user r4454.user into r4717;
    ternary r4628 r4688.round_number r4454.round_number into r4718;
    ternary r4628 r4688.count r4454.count into r4719;
    ternary r4628 r4688.gates r4454.gates into r4720;
    ternary r4628 r4688.red_ball_1 r4454.red_ball_1 into r4721;
    ternary r4628 r4688.red_ball_2 r4454.red_ball_2 into r4722;
    ternary r4628 r4688.red_ball_3 r4454.red_ball_3 into r4723;
    ternary r4628 r4688.red_ball_4 r4454.red_ball_4 into r4724;
    ternary r4628 r4688.red_ball_5 r4454.red_ball_5 into r4725;
    ternary r4628 r4688.red_ball_6 r4454.red_ball_6 into r4726;
    ternary r4628 r4688.blue_ball_1 r4454.blue_ball_1 into r4727;
    ternary r4628 r4688.reward r4454.reward into r4728;
    ternary r4628 r4688.index r4454.index into r4729;
    cast r4717 r4718 r4719 r4720 r4721 r4722 r4723 r4724 r4725 r4726 r4727 r4728 r4729 into r4730 as TicketPurchasePriceInfo;
    ternary r4628 r4702.user r4454.user into r4731;
    ternary r4628 r4702.round_number r4454.round_number into r4732;
    ternary r4628 r4702.count r4454.count into r4733;
    ternary r4628 r4702.gates r4454.gates into r4734;
    ternary r4628 r4702.red_ball_1 r4454.red_ball_1 into r4735;
    ternary r4628 r4702.red_ball_2 r4454.red_ball_2 into r4736;
    ternary r4628 r4702.red_ball_3 r4454.red_ball_3 into r4737;
    ternary r4628 r4702.red_ball_4 r4454.red_ball_4 into r4738;
    ternary r4628 r4702.red_ball_5 r4454.red_ball_5 into r4739;
    ternary r4628 r4702.red_ball_6 r4454.red_ball_6 into r4740;
    ternary r4628 r4702.blue_ball_1 r4454.blue_ball_1 into r4741;
    ternary r4628 r4702.reward r4454.reward into r4742;
    ternary r4628 r4702.index r4454.index into r4743;
    cast r4731 r4732 r4733 r4734 r4735 r4736 r4737 r4738 r4739 r4740 r4741 r4742 r4743 into r4744 as TicketPurchasePriceInfo;
    is.eq r4627 2u8 into r4745;
    gt r4744.index 2u32 into r4746;
    cast r4461.user r4461.round_number r4461.count r4461.gates r4461.red_ball_1 r4461.red_ball_2 r4461.red_ball_3 r4461.red_ball_4 r4461.red_ball_5 r4461.red_ball_6 r4461.blue_ball_1 0u64 2u32 into r4747 as TicketPurchasePriceInfo;
    gt r4730.index 2u32 into r4748;
    cast r4461.user r4461.round_number r4461.count r4461.gates r4461.red_ball_1 r4461.red_ball_2 r4461.red_ball_3 r4461.red_ball_4 r4461.red_ball_5 r4461.red_ball_6 r4461.blue_ball_1 0u64 2u32 into r4749 as TicketPurchasePriceInfo;
    ternary r4748 r4749.user r4730.user into r4750;
    ternary r4748 r4749.round_number r4730.round_number into r4751;
    ternary r4748 r4749.count r4730.count into r4752;
    ternary r4748 r4749.gates r4730.gates into r4753;
    ternary r4748 r4749.red_ball_1 r4730.red_ball_1 into r4754;
    ternary r4748 r4749.red_ball_2 r4730.red_ball_2 into r4755;
    ternary r4748 r4749.red_ball_3 r4730.red_ball_3 into r4756;
    ternary r4748 r4749.red_ball_4 r4730.red_ball_4 into r4757;
    ternary r4748 r4749.red_ball_5 r4730.red_ball_5 into r4758;
    ternary r4748 r4749.red_ball_6 r4730.red_ball_6 into r4759;
    ternary r4748 r4749.blue_ball_1 r4730.blue_ball_1 into r4760;
    ternary r4748 r4749.reward r4730.reward into r4761;
    ternary r4748 r4749.index r4730.index into r4762;
    cast r4750 r4751 r4752 r4753 r4754 r4755 r4756 r4757 r4758 r4759 r4760 r4761 r4762 into r4763 as TicketPurchasePriceInfo;
    ternary r4746 r4744.user r4763.user into r4764;
    ternary r4746 r4744.round_number r4763.round_number into r4765;
    ternary r4746 r4744.count r4763.count into r4766;
    ternary r4746 r4744.gates r4763.gates into r4767;
    ternary r4746 r4744.red_ball_1 r4763.red_ball_1 into r4768;
    ternary r4746 r4744.red_ball_2 r4763.red_ball_2 into r4769;
    ternary r4746 r4744.red_ball_3 r4763.red_ball_3 into r4770;
    ternary r4746 r4744.red_ball_4 r4763.red_ball_4 into r4771;
    ternary r4746 r4744.red_ball_5 r4763.red_ball_5 into r4772;
    ternary r4746 r4744.red_ball_6 r4763.red_ball_6 into r4773;
    ternary r4746 r4744.blue_ball_1 r4763.blue_ball_1 into r4774;
    ternary r4746 r4744.reward r4763.reward into r4775;
    ternary r4746 r4744.index r4763.index into r4776;
    cast r4764 r4765 r4766 r4767 r4768 r4769 r4770 r4771 r4772 r4773 r4774 r4775 r4776 into r4777 as TicketPurchasePriceInfo;
    ternary r4746 r4747.user r4744.user into r4778;
    ternary r4746 r4747.round_number r4744.round_number into r4779;
    ternary r4746 r4747.count r4744.count into r4780;
    ternary r4746 r4747.gates r4744.gates into r4781;
    ternary r4746 r4747.red_ball_1 r4744.red_ball_1 into r4782;
    ternary r4746 r4747.red_ball_2 r4744.red_ball_2 into r4783;
    ternary r4746 r4747.red_ball_3 r4744.red_ball_3 into r4784;
    ternary r4746 r4747.red_ball_4 r4744.red_ball_4 into r4785;
    ternary r4746 r4747.red_ball_5 r4744.red_ball_5 into r4786;
    ternary r4746 r4747.red_ball_6 r4744.red_ball_6 into r4787;
    ternary r4746 r4747.blue_ball_1 r4744.blue_ball_1 into r4788;
    ternary r4746 r4747.reward r4744.reward into r4789;
    ternary r4746 r4747.index r4744.index into r4790;
    cast r4778 r4779 r4780 r4781 r4782 r4783 r4784 r4785 r4786 r4787 r4788 r4789 r4790 into r4791 as TicketPurchasePriceInfo;
    ternary r4745 r4777.user r4730.user into r4792;
    ternary r4745 r4777.round_number r4730.round_number into r4793;
    ternary r4745 r4777.count r4730.count into r4794;
    ternary r4745 r4777.gates r4730.gates into r4795;
    ternary r4745 r4777.red_ball_1 r4730.red_ball_1 into r4796;
    ternary r4745 r4777.red_ball_2 r4730.red_ball_2 into r4797;
    ternary r4745 r4777.red_ball_3 r4730.red_ball_3 into r4798;
    ternary r4745 r4777.red_ball_4 r4730.red_ball_4 into r4799;
    ternary r4745 r4777.red_ball_5 r4730.red_ball_5 into r4800;
    ternary r4745 r4777.red_ball_6 r4730.red_ball_6 into r4801;
    ternary r4745 r4777.blue_ball_1 r4730.blue_ball_1 into r4802;
    ternary r4745 r4777.reward r4730.reward into r4803;
    ternary r4745 r4777.index r4730.index into r4804;
    cast r4792 r4793 r4794 r4795 r4796 r4797 r4798 r4799 r4800 r4801 r4802 r4803 r4804 into r4805 as TicketPurchasePriceInfo;
    ternary r4745 r4791.user r4744.user into r4806;
    ternary r4745 r4791.round_number r4744.round_number into r4807;
    ternary r4745 r4791.count r4744.count into r4808;
    ternary r4745 r4791.gates r4744.gates into r4809;
    ternary r4745 r4791.red_ball_1 r4744.red_ball_1 into r4810;
    ternary r4745 r4791.red_ball_2 r4744.red_ball_2 into r4811;
    ternary r4745 r4791.red_ball_3 r4744.red_ball_3 into r4812;
    ternary r4745 r4791.red_ball_4 r4744.red_ball_4 into r4813;
    ternary r4745 r4791.red_ball_5 r4744.red_ball_5 into r4814;
    ternary r4745 r4791.red_ball_6 r4744.red_ball_6 into r4815;
    ternary r4745 r4791.blue_ball_1 r4744.blue_ball_1 into r4816;
    ternary r4745 r4791.reward r4744.reward into r4817;
    ternary r4745 r4791.index r4744.index into r4818;
    cast r4806 r4807 r4808 r4809 r4810 r4811 r4812 r4813 r4814 r4815 r4816 r4817 r4818 into r4819 as TicketPurchasePriceInfo;
    ternary r4462 r4716.user r4454.user into r4820;
    ternary r4462 r4716.round_number r4454.round_number into r4821;
    ternary r4462 r4716.count r4454.count into r4822;
    ternary r4462 r4716.gates r4454.gates into r4823;
    ternary r4462 r4716.red_ball_1 r4454.red_ball_1 into r4824;
    ternary r4462 r4716.red_ball_2 r4454.red_ball_2 into r4825;
    ternary r4462 r4716.red_ball_3 r4454.red_ball_3 into r4826;
    ternary r4462 r4716.red_ball_4 r4454.red_ball_4 into r4827;
    ternary r4462 r4716.red_ball_5 r4454.red_ball_5 into r4828;
    ternary r4462 r4716.red_ball_6 r4454.red_ball_6 into r4829;
    ternary r4462 r4716.blue_ball_1 r4454.blue_ball_1 into r4830;
    ternary r4462 r4716.reward r4454.reward into r4831;
    ternary r4462 r4716.index r4454.index into r4832;
    cast r4820 r4821 r4822 r4823 r4824 r4825 r4826 r4827 r4828 r4829 r4830 r4831 r4832 into r4833 as TicketPurchasePriceInfo;
    ternary r4462 r4805.user r4454.user into r4834;
    ternary r4462 r4805.round_number r4454.round_number into r4835;
    ternary r4462 r4805.count r4454.count into r4836;
    ternary r4462 r4805.gates r4454.gates into r4837;
    ternary r4462 r4805.red_ball_1 r4454.red_ball_1 into r4838;
    ternary r4462 r4805.red_ball_2 r4454.red_ball_2 into r4839;
    ternary r4462 r4805.red_ball_3 r4454.red_ball_3 into r4840;
    ternary r4462 r4805.red_ball_4 r4454.red_ball_4 into r4841;
    ternary r4462 r4805.red_ball_5 r4454.red_ball_5 into r4842;
    ternary r4462 r4805.red_ball_6 r4454.red_ball_6 into r4843;
    ternary r4462 r4805.blue_ball_1 r4454.blue_ball_1 into r4844;
    ternary r4462 r4805.reward r4454.reward into r4845;
    ternary r4462 r4805.index r4454.index into r4846;
    cast r4834 r4835 r4836 r4837 r4838 r4839 r4840 r4841 r4842 r4843 r4844 r4845 r4846 into r4847 as TicketPurchasePriceInfo;
    ternary r4462 r4819.user r4454.user into r4848;
    ternary r4462 r4819.round_number r4454.round_number into r4849;
    ternary r4462 r4819.count r4454.count into r4850;
    ternary r4462 r4819.gates r4454.gates into r4851;
    ternary r4462 r4819.red_ball_1 r4454.red_ball_1 into r4852;
    ternary r4462 r4819.red_ball_2 r4454.red_ball_2 into r4853;
    ternary r4462 r4819.red_ball_3 r4454.red_ball_3 into r4854;
    ternary r4462 r4819.red_ball_4 r4454.red_ball_4 into r4855;
    ternary r4462 r4819.red_ball_5 r4454.red_ball_5 into r4856;
    ternary r4462 r4819.red_ball_6 r4454.red_ball_6 into r4857;
    ternary r4462 r4819.blue_ball_1 r4454.blue_ball_1 into r4858;
    ternary r4462 r4819.reward r4454.reward into r4859;
    ternary r4462 r4819.index r4454.index into r4860;
    cast r4848 r4849 r4850 r4851 r4852 r4853 r4854 r4855 r4856 r4857 r4858 r4859 r4860 into r4861 as TicketPurchasePriceInfo;
    ternary r4460 r4833.user r4454.user into r4862;
    ternary r4460 r4833.round_number r4454.round_number into r4863;
    ternary r4460 r4833.count r4454.count into r4864;
    ternary r4460 r4833.gates r4454.gates into r4865;
    ternary r4460 r4833.red_ball_1 r4454.red_ball_1 into r4866;
    ternary r4460 r4833.red_ball_2 r4454.red_ball_2 into r4867;
    ternary r4460 r4833.red_ball_3 r4454.red_ball_3 into r4868;
    ternary r4460 r4833.red_ball_4 r4454.red_ball_4 into r4869;
    ternary r4460 r4833.red_ball_5 r4454.red_ball_5 into r4870;
    ternary r4460 r4833.red_ball_6 r4454.red_ball_6 into r4871;
    ternary r4460 r4833.blue_ball_1 r4454.blue_ball_1 into r4872;
    ternary r4460 r4833.reward r4454.reward into r4873;
    ternary r4460 r4833.index r4454.index into r4874;
    cast r4862 r4863 r4864 r4865 r4866 r4867 r4868 r4869 r4870 r4871 r4872 r4873 r4874 into r4875 as TicketPurchasePriceInfo;
    ternary r4460 r4847.user r4454.user into r4876;
    ternary r4460 r4847.round_number r4454.round_number into r4877;
    ternary r4460 r4847.count r4454.count into r4878;
    ternary r4460 r4847.gates r4454.gates into r4879;
    ternary r4460 r4847.red_ball_1 r4454.red_ball_1 into r4880;
    ternary r4460 r4847.red_ball_2 r4454.red_ball_2 into r4881;
    ternary r4460 r4847.red_ball_3 r4454.red_ball_3 into r4882;
    ternary r4460 r4847.red_ball_4 r4454.red_ball_4 into r4883;
    ternary r4460 r4847.red_ball_5 r4454.red_ball_5 into r4884;
    ternary r4460 r4847.red_ball_6 r4454.red_ball_6 into r4885;
    ternary r4460 r4847.blue_ball_1 r4454.blue_ball_1 into r4886;
    ternary r4460 r4847.reward r4454.reward into r4887;
    ternary r4460 r4847.index r4454.index into r4888;
    cast r4876 r4877 r4878 r4879 r4880 r4881 r4882 r4883 r4884 r4885 r4886 r4887 r4888 into r4889 as TicketPurchasePriceInfo;
    ternary r4460 r4861.user r4454.user into r4890;
    ternary r4460 r4861.round_number r4454.round_number into r4891;
    ternary r4460 r4861.count r4454.count into r4892;
    ternary r4460 r4861.gates r4454.gates into r4893;
    ternary r4460 r4861.red_ball_1 r4454.red_ball_1 into r4894;
    ternary r4460 r4861.red_ball_2 r4454.red_ball_2 into r4895;
    ternary r4460 r4861.red_ball_3 r4454.red_ball_3 into r4896;
    ternary r4460 r4861.red_ball_4 r4454.red_ball_4 into r4897;
    ternary r4460 r4861.red_ball_5 r4454.red_ball_5 into r4898;
    ternary r4460 r4861.red_ball_6 r4454.red_ball_6 into r4899;
    ternary r4460 r4861.blue_ball_1 r4454.blue_ball_1 into r4900;
    ternary r4460 r4861.reward r4454.reward into r4901;
    ternary r4460 r4861.index r4454.index into r4902;
    cast r4890 r4891 r4892 r4893 r4894 r4895 r4896 r4897 r4898 r4899 r4900 r4901 r4902 into r4903 as TicketPurchasePriceInfo;
    not r4456 into r4904;
    lte 2u32 r2.current_round_num into r4905;
    and r4904 r4905 into r4906;
    get.or_use ticketPurchaseMap[2u32] r4457 into r4907;
    is.neq r4907.round_number 0u32 into r4908;
    is.eq r4907.blue_ball_1 r4453 into r4909;
    is.eq r4907.red_ball_1 r4440 into r4910;
    is.eq r4907.red_ball_1 r4441 into r4911;
    or r4910 r4911 into r4912;
    is.eq r4907.red_ball_1 r4442 into r4913;
    or r4912 r4913 into r4914;
    is.eq r4907.red_ball_1 r4443 into r4915;
    or r4914 r4915 into r4916;
    is.eq r4907.red_ball_1 r4444 into r4917;
    or r4916 r4917 into r4918;
    is.eq r4907.red_ball_1 r4445 into r4919;
    or r4918 r4919 into r4920;
    add 0u8 1u8 into r4921;
    ternary r4920 r4921 0u8 into r4922;
    is.eq r4907.red_ball_2 r4440 into r4923;
    is.eq r4907.red_ball_2 r4441 into r4924;
    or r4923 r4924 into r4925;
    is.eq r4907.red_ball_2 r4442 into r4926;
    or r4925 r4926 into r4927;
    is.eq r4907.red_ball_2 r4443 into r4928;
    or r4927 r4928 into r4929;
    is.eq r4907.red_ball_2 r4444 into r4930;
    or r4929 r4930 into r4931;
    is.eq r4907.red_ball_2 r4445 into r4932;
    or r4931 r4932 into r4933;
    add r4922 1u8 into r4934;
    ternary r4933 r4934 r4922 into r4935;
    is.eq r4907.red_ball_3 r4440 into r4936;
    is.eq r4907.red_ball_3 r4441 into r4937;
    or r4936 r4937 into r4938;
    is.eq r4907.red_ball_3 r4442 into r4939;
    or r4938 r4939 into r4940;
    is.eq r4907.red_ball_3 r4443 into r4941;
    or r4940 r4941 into r4942;
    is.eq r4907.red_ball_3 r4444 into r4943;
    or r4942 r4943 into r4944;
    is.eq r4907.red_ball_3 r4445 into r4945;
    or r4944 r4945 into r4946;
    add r4935 1u8 into r4947;
    ternary r4946 r4947 r4935 into r4948;
    is.eq r4907.red_ball_4 r4440 into r4949;
    is.eq r4907.red_ball_4 r4441 into r4950;
    or r4949 r4950 into r4951;
    is.eq r4907.red_ball_4 r4442 into r4952;
    or r4951 r4952 into r4953;
    is.eq r4907.red_ball_4 r4443 into r4954;
    or r4953 r4954 into r4955;
    is.eq r4907.red_ball_4 r4444 into r4956;
    or r4955 r4956 into r4957;
    is.eq r4907.red_ball_4 r4445 into r4958;
    or r4957 r4958 into r4959;
    add r4948 1u8 into r4960;
    ternary r4959 r4960 r4948 into r4961;
    is.eq r4907.red_ball_5 r4440 into r4962;
    is.eq r4907.red_ball_5 r4441 into r4963;
    or r4962 r4963 into r4964;
    is.eq r4907.red_ball_5 r4442 into r4965;
    or r4964 r4965 into r4966;
    is.eq r4907.red_ball_5 r4443 into r4967;
    or r4966 r4967 into r4968;
    is.eq r4907.red_ball_5 r4444 into r4969;
    or r4968 r4969 into r4970;
    is.eq r4907.red_ball_5 r4445 into r4971;
    or r4970 r4971 into r4972;
    add r4961 1u8 into r4973;
    ternary r4972 r4973 r4961 into r4974;
    is.eq r4907.red_ball_6 r4440 into r4975;
    is.eq r4907.red_ball_6 r4441 into r4976;
    or r4975 r4976 into r4977;
    is.eq r4907.red_ball_6 r4442 into r4978;
    or r4977 r4978 into r4979;
    is.eq r4907.red_ball_6 r4443 into r4980;
    or r4979 r4980 into r4981;
    is.eq r4907.red_ball_6 r4444 into r4982;
    or r4981 r4982 into r4983;
    is.eq r4907.red_ball_6 r4445 into r4984;
    or r4983 r4984 into r4985;
    add r4974 1u8 into r4986;
    ternary r4985 r4986 r4974 into r4987;
    gte r4987 3u8 into r4988;
    gte r4987 1u8 into r4989;
    ternary r4989 2u8 0u8 into r4990;
    ternary r4988 1u8 r4990 into r4991;
    is.eq r4907.red_ball_1 r4440 into r4992;
    is.eq r4907.red_ball_1 r4441 into r4993;
    or r4992 r4993 into r4994;
    is.eq r4907.red_ball_1 r4442 into r4995;
    or r4994 r4995 into r4996;
    is.eq r4907.red_ball_1 r4443 into r4997;
    or r4996 r4997 into r4998;
    is.eq r4907.red_ball_1 r4444 into r4999;
    or r4998 r4999 into r5000;
    is.eq r4907.red_ball_1 r4445 into r5001;
    or r5000 r5001 into r5002;
    add 0u8 1u8 into r5003;
    ternary r5002 r5003 0u8 into r5004;
    is.eq r4907.red_ball_2 r4440 into r5005;
    is.eq r4907.red_ball_2 r4441 into r5006;
    or r5005 r5006 into r5007;
    is.eq r4907.red_ball_2 r4442 into r5008;
    or r5007 r5008 into r5009;
    is.eq r4907.red_ball_2 r4443 into r5010;
    or r5009 r5010 into r5011;
    is.eq r4907.red_ball_2 r4444 into r5012;
    or r5011 r5012 into r5013;
    is.eq r4907.red_ball_2 r4445 into r5014;
    or r5013 r5014 into r5015;
    add r5004 1u8 into r5016;
    ternary r5015 r5016 r5004 into r5017;
    is.eq r4907.red_ball_3 r4440 into r5018;
    is.eq r4907.red_ball_3 r4441 into r5019;
    or r5018 r5019 into r5020;
    is.eq r4907.red_ball_3 r4442 into r5021;
    or r5020 r5021 into r5022;
    is.eq r4907.red_ball_3 r4443 into r5023;
    or r5022 r5023 into r5024;
    is.eq r4907.red_ball_3 r4444 into r5025;
    or r5024 r5025 into r5026;
    is.eq r4907.red_ball_3 r4445 into r5027;
    or r5026 r5027 into r5028;
    add r5017 1u8 into r5029;
    ternary r5028 r5029 r5017 into r5030;
    is.eq r4907.red_ball_4 r4440 into r5031;
    is.eq r4907.red_ball_4 r4441 into r5032;
    or r5031 r5032 into r5033;
    is.eq r4907.red_ball_4 r4442 into r5034;
    or r5033 r5034 into r5035;
    is.eq r4907.red_ball_4 r4443 into r5036;
    or r5035 r5036 into r5037;
    is.eq r4907.red_ball_4 r4444 into r5038;
    or r5037 r5038 into r5039;
    is.eq r4907.red_ball_4 r4445 into r5040;
    or r5039 r5040 into r5041;
    add r5030 1u8 into r5042;
    ternary r5041 r5042 r5030 into r5043;
    is.eq r4907.red_ball_5 r4440 into r5044;
    is.eq r4907.red_ball_5 r4441 into r5045;
    or r5044 r5045 into r5046;
    is.eq r4907.red_ball_5 r4442 into r5047;
    or r5046 r5047 into r5048;
    is.eq r4907.red_ball_5 r4443 into r5049;
    or r5048 r5049 into r5050;
    is.eq r4907.red_ball_5 r4444 into r5051;
    or r5050 r5051 into r5052;
    is.eq r4907.red_ball_5 r4445 into r5053;
    or r5052 r5053 into r5054;
    add r5043 1u8 into r5055;
    ternary r5054 r5055 r5043 into r5056;
    is.eq r4907.red_ball_6 r4440 into r5057;
    is.eq r4907.red_ball_6 r4441 into r5058;
    or r5057 r5058 into r5059;
    is.eq r4907.red_ball_6 r4442 into r5060;
    or r5059 r5060 into r5061;
    is.eq r4907.red_ball_6 r4443 into r5062;
    or r5061 r5062 into r5063;
    is.eq r4907.red_ball_6 r4444 into r5064;
    or r5063 r5064 into r5065;
    is.eq r4907.red_ball_6 r4445 into r5066;
    or r5065 r5066 into r5067;
    add r5056 1u8 into r5068;
    ternary r5067 r5068 r5056 into r5069;
    gte r5069 3u8 into r5070;
    ternary r5070 2u8 0u8 into r5071;
    ternary r4909 r4987 r5069 into r5072;
    ternary r4909 r4991 r5071 into r5073;
    is.eq r5073 1u8 into r5074;
    gt r4875.index 1u32 into r5075;
    cast r4907.user r4907.round_number r4907.count r4907.gates r4907.red_ball_1 r4907.red_ball_2 r4907.red_ball_3 r4907.red_ball_4 r4907.red_ball_5 r4907.red_ball_6 r4907.blue_ball_1 0u64 1u32 into r5076 as TicketPurchasePriceInfo;
    gt r4903.index 1u32 into r5077;
    cast r4907.user r4907.round_number r4907.count r4907.gates r4907.red_ball_1 r4907.red_ball_2 r4907.red_ball_3 r4907.red_ball_4 r4907.red_ball_5 r4907.red_ball_6 r4907.blue_ball_1 0u64 1u32 into r5078 as TicketPurchasePriceInfo;
    ternary r5077 r4903.user r4889.user into r5079;
    ternary r5077 r4903.round_number r4889.round_number into r5080;
    ternary r5077 r4903.count r4889.count into r5081;
    ternary r5077 r4903.gates r4889.gates into r5082;
    ternary r5077 r4903.red_ball_1 r4889.red_ball_1 into r5083;
    ternary r5077 r4903.red_ball_2 r4889.red_ball_2 into r5084;
    ternary r5077 r4903.red_ball_3 r4889.red_ball_3 into r5085;
    ternary r5077 r4903.red_ball_4 r4889.red_ball_4 into r5086;
    ternary r5077 r4903.red_ball_5 r4889.red_ball_5 into r5087;
    ternary r5077 r4903.red_ball_6 r4889.red_ball_6 into r5088;
    ternary r5077 r4903.blue_ball_1 r4889.blue_ball_1 into r5089;
    ternary r5077 r4903.reward r4889.reward into r5090;
    ternary r5077 r4903.index r4889.index into r5091;
    cast r5079 r5080 r5081 r5082 r5083 r5084 r5085 r5086 r5087 r5088 r5089 r5090 r5091 into r5092 as TicketPurchasePriceInfo;
    ternary r5077 r5078.user r4903.user into r5093;
    ternary r5077 r5078.round_number r4903.round_number into r5094;
    ternary r5077 r5078.count r4903.count into r5095;
    ternary r5077 r5078.gates r4903.gates into r5096;
    ternary r5077 r5078.red_ball_1 r4903.red_ball_1 into r5097;
    ternary r5077 r5078.red_ball_2 r4903.red_ball_2 into r5098;
    ternary r5077 r5078.red_ball_3 r4903.red_ball_3 into r5099;
    ternary r5077 r5078.red_ball_4 r4903.red_ball_4 into r5100;
    ternary r5077 r5078.red_ball_5 r4903.red_ball_5 into r5101;
    ternary r5077 r5078.red_ball_6 r4903.red_ball_6 into r5102;
    ternary r5077 r5078.blue_ball_1 r4903.blue_ball_1 into r5103;
    ternary r5077 r5078.reward r4903.reward into r5104;
    ternary r5077 r5078.index r4903.index into r5105;
    cast r5093 r5094 r5095 r5096 r5097 r5098 r5099 r5100 r5101 r5102 r5103 r5104 r5105 into r5106 as TicketPurchasePriceInfo;
    ternary r5075 r5076.user r4875.user into r5107;
    ternary r5075 r5076.round_number r4875.round_number into r5108;
    ternary r5075 r5076.count r4875.count into r5109;
    ternary r5075 r5076.gates r4875.gates into r5110;
    ternary r5075 r5076.red_ball_1 r4875.red_ball_1 into r5111;
    ternary r5075 r5076.red_ball_2 r4875.red_ball_2 into r5112;
    ternary r5075 r5076.red_ball_3 r4875.red_ball_3 into r5113;
    ternary r5075 r5076.red_ball_4 r4875.red_ball_4 into r5114;
    ternary r5075 r5076.red_ball_5 r4875.red_ball_5 into r5115;
    ternary r5075 r5076.red_ball_6 r4875.red_ball_6 into r5116;
    ternary r5075 r5076.blue_ball_1 r4875.blue_ball_1 into r5117;
    ternary r5075 r5076.reward r4875.reward into r5118;
    ternary r5075 r5076.index r4875.index into r5119;
    cast r5107 r5108 r5109 r5110 r5111 r5112 r5113 r5114 r5115 r5116 r5117 r5118 r5119 into r5120 as TicketPurchasePriceInfo;
    ternary r5075 r4889.user r5092.user into r5121;
    ternary r5075 r4889.round_number r5092.round_number into r5122;
    ternary r5075 r4889.count r5092.count into r5123;
    ternary r5075 r4889.gates r5092.gates into r5124;
    ternary r5075 r4889.red_ball_1 r5092.red_ball_1 into r5125;
    ternary r5075 r4889.red_ball_2 r5092.red_ball_2 into r5126;
    ternary r5075 r4889.red_ball_3 r5092.red_ball_3 into r5127;
    ternary r5075 r4889.red_ball_4 r5092.red_ball_4 into r5128;
    ternary r5075 r4889.red_ball_5 r5092.red_ball_5 into r5129;
    ternary r5075 r4889.red_ball_6 r5092.red_ball_6 into r5130;
    ternary r5075 r4889.blue_ball_1 r5092.blue_ball_1 into r5131;
    ternary r5075 r4889.reward r5092.reward into r5132;
    ternary r5075 r4889.index r5092.index into r5133;
    cast r5121 r5122 r5123 r5124 r5125 r5126 r5127 r5128 r5129 r5130 r5131 r5132 r5133 into r5134 as TicketPurchasePriceInfo;
    ternary r5075 r4903.user r5106.user into r5135;
    ternary r5075 r4903.round_number r5106.round_number into r5136;
    ternary r5075 r4903.count r5106.count into r5137;
    ternary r5075 r4903.gates r5106.gates into r5138;
    ternary r5075 r4903.red_ball_1 r5106.red_ball_1 into r5139;
    ternary r5075 r4903.red_ball_2 r5106.red_ball_2 into r5140;
    ternary r5075 r4903.red_ball_3 r5106.red_ball_3 into r5141;
    ternary r5075 r4903.red_ball_4 r5106.red_ball_4 into r5142;
    ternary r5075 r4903.red_ball_5 r5106.red_ball_5 into r5143;
    ternary r5075 r4903.red_ball_6 r5106.red_ball_6 into r5144;
    ternary r5075 r4903.blue_ball_1 r5106.blue_ball_1 into r5145;
    ternary r5075 r4903.reward r5106.reward into r5146;
    ternary r5075 r4903.index r5106.index into r5147;
    cast r5135 r5136 r5137 r5138 r5139 r5140 r5141 r5142 r5143 r5144 r5145 r5146 r5147 into r5148 as TicketPurchasePriceInfo;
    ternary r5074 r5120.user r4875.user into r5149;
    ternary r5074 r5120.round_number r4875.round_number into r5150;
    ternary r5074 r5120.count r4875.count into r5151;
    ternary r5074 r5120.gates r4875.gates into r5152;
    ternary r5074 r5120.red_ball_1 r4875.red_ball_1 into r5153;
    ternary r5074 r5120.red_ball_2 r4875.red_ball_2 into r5154;
    ternary r5074 r5120.red_ball_3 r4875.red_ball_3 into r5155;
    ternary r5074 r5120.red_ball_4 r4875.red_ball_4 into r5156;
    ternary r5074 r5120.red_ball_5 r4875.red_ball_5 into r5157;
    ternary r5074 r5120.red_ball_6 r4875.red_ball_6 into r5158;
    ternary r5074 r5120.blue_ball_1 r4875.blue_ball_1 into r5159;
    ternary r5074 r5120.reward r4875.reward into r5160;
    ternary r5074 r5120.index r4875.index into r5161;
    cast r5149 r5150 r5151 r5152 r5153 r5154 r5155 r5156 r5157 r5158 r5159 r5160 r5161 into r5162 as TicketPurchasePriceInfo;
    ternary r5074 r5134.user r4889.user into r5163;
    ternary r5074 r5134.round_number r4889.round_number into r5164;
    ternary r5074 r5134.count r4889.count into r5165;
    ternary r5074 r5134.gates r4889.gates into r5166;
    ternary r5074 r5134.red_ball_1 r4889.red_ball_1 into r5167;
    ternary r5074 r5134.red_ball_2 r4889.red_ball_2 into r5168;
    ternary r5074 r5134.red_ball_3 r4889.red_ball_3 into r5169;
    ternary r5074 r5134.red_ball_4 r4889.red_ball_4 into r5170;
    ternary r5074 r5134.red_ball_5 r4889.red_ball_5 into r5171;
    ternary r5074 r5134.red_ball_6 r4889.red_ball_6 into r5172;
    ternary r5074 r5134.blue_ball_1 r4889.blue_ball_1 into r5173;
    ternary r5074 r5134.reward r4889.reward into r5174;
    ternary r5074 r5134.index r4889.index into r5175;
    cast r5163 r5164 r5165 r5166 r5167 r5168 r5169 r5170 r5171 r5172 r5173 r5174 r5175 into r5176 as TicketPurchasePriceInfo;
    ternary r5074 r5148.user r4903.user into r5177;
    ternary r5074 r5148.round_number r4903.round_number into r5178;
    ternary r5074 r5148.count r4903.count into r5179;
    ternary r5074 r5148.gates r4903.gates into r5180;
    ternary r5074 r5148.red_ball_1 r4903.red_ball_1 into r5181;
    ternary r5074 r5148.red_ball_2 r4903.red_ball_2 into r5182;
    ternary r5074 r5148.red_ball_3 r4903.red_ball_3 into r5183;
    ternary r5074 r5148.red_ball_4 r4903.red_ball_4 into r5184;
    ternary r5074 r5148.red_ball_5 r4903.red_ball_5 into r5185;
    ternary r5074 r5148.red_ball_6 r4903.red_ball_6 into r5186;
    ternary r5074 r5148.blue_ball_1 r4903.blue_ball_1 into r5187;
    ternary r5074 r5148.reward r4903.reward into r5188;
    ternary r5074 r5148.index r4903.index into r5189;
    cast r5177 r5178 r5179 r5180 r5181 r5182 r5183 r5184 r5185 r5186 r5187 r5188 r5189 into r5190 as TicketPurchasePriceInfo;
    is.eq r5073 2u8 into r5191;
    gt r5190.index 2u32 into r5192;
    cast r4907.user r4907.round_number r4907.count r4907.gates r4907.red_ball_1 r4907.red_ball_2 r4907.red_ball_3 r4907.red_ball_4 r4907.red_ball_5 r4907.red_ball_6 r4907.blue_ball_1 0u64 2u32 into r5193 as TicketPurchasePriceInfo;
    gt r5176.index 2u32 into r5194;
    cast r4907.user r4907.round_number r4907.count r4907.gates r4907.red_ball_1 r4907.red_ball_2 r4907.red_ball_3 r4907.red_ball_4 r4907.red_ball_5 r4907.red_ball_6 r4907.blue_ball_1 0u64 2u32 into r5195 as TicketPurchasePriceInfo;
    ternary r5194 r5195.user r5176.user into r5196;
    ternary r5194 r5195.round_number r5176.round_number into r5197;
    ternary r5194 r5195.count r5176.count into r5198;
    ternary r5194 r5195.gates r5176.gates into r5199;
    ternary r5194 r5195.red_ball_1 r5176.red_ball_1 into r5200;
    ternary r5194 r5195.red_ball_2 r5176.red_ball_2 into r5201;
    ternary r5194 r5195.red_ball_3 r5176.red_ball_3 into r5202;
    ternary r5194 r5195.red_ball_4 r5176.red_ball_4 into r5203;
    ternary r5194 r5195.red_ball_5 r5176.red_ball_5 into r5204;
    ternary r5194 r5195.red_ball_6 r5176.red_ball_6 into r5205;
    ternary r5194 r5195.blue_ball_1 r5176.blue_ball_1 into r5206;
    ternary r5194 r5195.reward r5176.reward into r5207;
    ternary r5194 r5195.index r5176.index into r5208;
    cast r5196 r5197 r5198 r5199 r5200 r5201 r5202 r5203 r5204 r5205 r5206 r5207 r5208 into r5209 as TicketPurchasePriceInfo;
    ternary r5192 r5190.user r5209.user into r5210;
    ternary r5192 r5190.round_number r5209.round_number into r5211;
    ternary r5192 r5190.count r5209.count into r5212;
    ternary r5192 r5190.gates r5209.gates into r5213;
    ternary r5192 r5190.red_ball_1 r5209.red_ball_1 into r5214;
    ternary r5192 r5190.red_ball_2 r5209.red_ball_2 into r5215;
    ternary r5192 r5190.red_ball_3 r5209.red_ball_3 into r5216;
    ternary r5192 r5190.red_ball_4 r5209.red_ball_4 into r5217;
    ternary r5192 r5190.red_ball_5 r5209.red_ball_5 into r5218;
    ternary r5192 r5190.red_ball_6 r5209.red_ball_6 into r5219;
    ternary r5192 r5190.blue_ball_1 r5209.blue_ball_1 into r5220;
    ternary r5192 r5190.reward r5209.reward into r5221;
    ternary r5192 r5190.index r5209.index into r5222;
    cast r5210 r5211 r5212 r5213 r5214 r5215 r5216 r5217 r5218 r5219 r5220 r5221 r5222 into r5223 as TicketPurchasePriceInfo;
    ternary r5192 r5193.user r5190.user into r5224;
    ternary r5192 r5193.round_number r5190.round_number into r5225;
    ternary r5192 r5193.count r5190.count into r5226;
    ternary r5192 r5193.gates r5190.gates into r5227;
    ternary r5192 r5193.red_ball_1 r5190.red_ball_1 into r5228;
    ternary r5192 r5193.red_ball_2 r5190.red_ball_2 into r5229;
    ternary r5192 r5193.red_ball_3 r5190.red_ball_3 into r5230;
    ternary r5192 r5193.red_ball_4 r5190.red_ball_4 into r5231;
    ternary r5192 r5193.red_ball_5 r5190.red_ball_5 into r5232;
    ternary r5192 r5193.red_ball_6 r5190.red_ball_6 into r5233;
    ternary r5192 r5193.blue_ball_1 r5190.blue_ball_1 into r5234;
    ternary r5192 r5193.reward r5190.reward into r5235;
    ternary r5192 r5193.index r5190.index into r5236;
    cast r5224 r5225 r5226 r5227 r5228 r5229 r5230 r5231 r5232 r5233 r5234 r5235 r5236 into r5237 as TicketPurchasePriceInfo;
    ternary r5191 r5223.user r5176.user into r5238;
    ternary r5191 r5223.round_number r5176.round_number into r5239;
    ternary r5191 r5223.count r5176.count into r5240;
    ternary r5191 r5223.gates r5176.gates into r5241;
    ternary r5191 r5223.red_ball_1 r5176.red_ball_1 into r5242;
    ternary r5191 r5223.red_ball_2 r5176.red_ball_2 into r5243;
    ternary r5191 r5223.red_ball_3 r5176.red_ball_3 into r5244;
    ternary r5191 r5223.red_ball_4 r5176.red_ball_4 into r5245;
    ternary r5191 r5223.red_ball_5 r5176.red_ball_5 into r5246;
    ternary r5191 r5223.red_ball_6 r5176.red_ball_6 into r5247;
    ternary r5191 r5223.blue_ball_1 r5176.blue_ball_1 into r5248;
    ternary r5191 r5223.reward r5176.reward into r5249;
    ternary r5191 r5223.index r5176.index into r5250;
    cast r5238 r5239 r5240 r5241 r5242 r5243 r5244 r5245 r5246 r5247 r5248 r5249 r5250 into r5251 as TicketPurchasePriceInfo;
    ternary r5191 r5237.user r5190.user into r5252;
    ternary r5191 r5237.round_number r5190.round_number into r5253;
    ternary r5191 r5237.count r5190.count into r5254;
    ternary r5191 r5237.gates r5190.gates into r5255;
    ternary r5191 r5237.red_ball_1 r5190.red_ball_1 into r5256;
    ternary r5191 r5237.red_ball_2 r5190.red_ball_2 into r5257;
    ternary r5191 r5237.red_ball_3 r5190.red_ball_3 into r5258;
    ternary r5191 r5237.red_ball_4 r5190.red_ball_4 into r5259;
    ternary r5191 r5237.red_ball_5 r5190.red_ball_5 into r5260;
    ternary r5191 r5237.red_ball_6 r5190.red_ball_6 into r5261;
    ternary r5191 r5237.blue_ball_1 r5190.blue_ball_1 into r5262;
    ternary r5191 r5237.reward r5190.reward into r5263;
    ternary r5191 r5237.index r5190.index into r5264;
    cast r5252 r5253 r5254 r5255 r5256 r5257 r5258 r5259 r5260 r5261 r5262 r5263 r5264 into r5265 as TicketPurchasePriceInfo;
    ternary r4908 r5162.user r4875.user into r5266;
    ternary r4908 r5162.round_number r4875.round_number into r5267;
    ternary r4908 r5162.count r4875.count into r5268;
    ternary r4908 r5162.gates r4875.gates into r5269;
    ternary r4908 r5162.red_ball_1 r4875.red_ball_1 into r5270;
    ternary r4908 r5162.red_ball_2 r4875.red_ball_2 into r5271;
    ternary r4908 r5162.red_ball_3 r4875.red_ball_3 into r5272;
    ternary r4908 r5162.red_ball_4 r4875.red_ball_4 into r5273;
    ternary r4908 r5162.red_ball_5 r4875.red_ball_5 into r5274;
    ternary r4908 r5162.red_ball_6 r4875.red_ball_6 into r5275;
    ternary r4908 r5162.blue_ball_1 r4875.blue_ball_1 into r5276;
    ternary r4908 r5162.reward r4875.reward into r5277;
    ternary r4908 r5162.index r4875.index into r5278;
    cast r5266 r5267 r5268 r5269 r5270 r5271 r5272 r5273 r5274 r5275 r5276 r5277 r5278 into r5279 as TicketPurchasePriceInfo;
    ternary r4908 r5251.user r4889.user into r5280;
    ternary r4908 r5251.round_number r4889.round_number into r5281;
    ternary r4908 r5251.count r4889.count into r5282;
    ternary r4908 r5251.gates r4889.gates into r5283;
    ternary r4908 r5251.red_ball_1 r4889.red_ball_1 into r5284;
    ternary r4908 r5251.red_ball_2 r4889.red_ball_2 into r5285;
    ternary r4908 r5251.red_ball_3 r4889.red_ball_3 into r5286;
    ternary r4908 r5251.red_ball_4 r4889.red_ball_4 into r5287;
    ternary r4908 r5251.red_ball_5 r4889.red_ball_5 into r5288;
    ternary r4908 r5251.red_ball_6 r4889.red_ball_6 into r5289;
    ternary r4908 r5251.blue_ball_1 r4889.blue_ball_1 into r5290;
    ternary r4908 r5251.reward r4889.reward into r5291;
    ternary r4908 r5251.index r4889.index into r5292;
    cast r5280 r5281 r5282 r5283 r5284 r5285 r5286 r5287 r5288 r5289 r5290 r5291 r5292 into r5293 as TicketPurchasePriceInfo;
    ternary r4908 r5265.user r4903.user into r5294;
    ternary r4908 r5265.round_number r4903.round_number into r5295;
    ternary r4908 r5265.count r4903.count into r5296;
    ternary r4908 r5265.gates r4903.gates into r5297;
    ternary r4908 r5265.red_ball_1 r4903.red_ball_1 into r5298;
    ternary r4908 r5265.red_ball_2 r4903.red_ball_2 into r5299;
    ternary r4908 r5265.red_ball_3 r4903.red_ball_3 into r5300;
    ternary r4908 r5265.red_ball_4 r4903.red_ball_4 into r5301;
    ternary r4908 r5265.red_ball_5 r4903.red_ball_5 into r5302;
    ternary r4908 r5265.red_ball_6 r4903.red_ball_6 into r5303;
    ternary r4908 r5265.blue_ball_1 r4903.blue_ball_1 into r5304;
    ternary r4908 r5265.reward r4903.reward into r5305;
    ternary r4908 r5265.index r4903.index into r5306;
    cast r5294 r5295 r5296 r5297 r5298 r5299 r5300 r5301 r5302 r5303 r5304 r5305 r5306 into r5307 as TicketPurchasePriceInfo;
    ternary r4906 r5279.user r4875.user into r5308;
    ternary r4906 r5279.round_number r4875.round_number into r5309;
    ternary r4906 r5279.count r4875.count into r5310;
    ternary r4906 r5279.gates r4875.gates into r5311;
    ternary r4906 r5279.red_ball_1 r4875.red_ball_1 into r5312;
    ternary r4906 r5279.red_ball_2 r4875.red_ball_2 into r5313;
    ternary r4906 r5279.red_ball_3 r4875.red_ball_3 into r5314;
    ternary r4906 r5279.red_ball_4 r4875.red_ball_4 into r5315;
    ternary r4906 r5279.red_ball_5 r4875.red_ball_5 into r5316;
    ternary r4906 r5279.red_ball_6 r4875.red_ball_6 into r5317;
    ternary r4906 r5279.blue_ball_1 r4875.blue_ball_1 into r5318;
    ternary r4906 r5279.reward r4875.reward into r5319;
    ternary r4906 r5279.index r4875.index into r5320;
    cast r5308 r5309 r5310 r5311 r5312 r5313 r5314 r5315 r5316 r5317 r5318 r5319 r5320 into r5321 as TicketPurchasePriceInfo;
    ternary r4906 r5293.user r4889.user into r5322;
    ternary r4906 r5293.round_number r4889.round_number into r5323;
    ternary r4906 r5293.count r4889.count into r5324;
    ternary r4906 r5293.gates r4889.gates into r5325;
    ternary r4906 r5293.red_ball_1 r4889.red_ball_1 into r5326;
    ternary r4906 r5293.red_ball_2 r4889.red_ball_2 into r5327;
    ternary r4906 r5293.red_ball_3 r4889.red_ball_3 into r5328;
    ternary r4906 r5293.red_ball_4 r4889.red_ball_4 into r5329;
    ternary r4906 r5293.red_ball_5 r4889.red_ball_5 into r5330;
    ternary r4906 r5293.red_ball_6 r4889.red_ball_6 into r5331;
    ternary r4906 r5293.blue_ball_1 r4889.blue_ball_1 into r5332;
    ternary r4906 r5293.reward r4889.reward into r5333;
    ternary r4906 r5293.index r4889.index into r5334;
    cast r5322 r5323 r5324 r5325 r5326 r5327 r5328 r5329 r5330 r5331 r5332 r5333 r5334 into r5335 as TicketPurchasePriceInfo;
    ternary r4906 r5307.user r4903.user into r5336;
    ternary r4906 r5307.round_number r4903.round_number into r5337;
    ternary r4906 r5307.count r4903.count into r5338;
    ternary r4906 r5307.gates r4903.gates into r5339;
    ternary r4906 r5307.red_ball_1 r4903.red_ball_1 into r5340;
    ternary r4906 r5307.red_ball_2 r4903.red_ball_2 into r5341;
    ternary r4906 r5307.red_ball_3 r4903.red_ball_3 into r5342;
    ternary r4906 r5307.red_ball_4 r4903.red_ball_4 into r5343;
    ternary r4906 r5307.red_ball_5 r4903.red_ball_5 into r5344;
    ternary r4906 r5307.red_ball_6 r4903.red_ball_6 into r5345;
    ternary r4906 r5307.blue_ball_1 r4903.blue_ball_1 into r5346;
    ternary r4906 r5307.reward r4903.reward into r5347;
    ternary r4906 r5307.index r4903.index into r5348;
    cast r5336 r5337 r5338 r5339 r5340 r5341 r5342 r5343 r5344 r5345 r5346 r5347 r5348 into r5349 as TicketPurchasePriceInfo;
    not r4456 into r5350;
    lte 3u32 r2.current_round_num into r5351;
    and r5350 r5351 into r5352;
    get.or_use ticketPurchaseMap[3u32] r4457 into r5353;
    is.neq r5353.round_number 0u32 into r5354;
    is.eq r5353.blue_ball_1 r4453 into r5355;
    is.eq r5353.red_ball_1 r4440 into r5356;
    is.eq r5353.red_ball_1 r4441 into r5357;
    or r5356 r5357 into r5358;
    is.eq r5353.red_ball_1 r4442 into r5359;
    or r5358 r5359 into r5360;
    is.eq r5353.red_ball_1 r4443 into r5361;
    or r5360 r5361 into r5362;
    is.eq r5353.red_ball_1 r4444 into r5363;
    or r5362 r5363 into r5364;
    is.eq r5353.red_ball_1 r4445 into r5365;
    or r5364 r5365 into r5366;
    add 0u8 1u8 into r5367;
    ternary r5366 r5367 0u8 into r5368;
    is.eq r5353.red_ball_2 r4440 into r5369;
    is.eq r5353.red_ball_2 r4441 into r5370;
    or r5369 r5370 into r5371;
    is.eq r5353.red_ball_2 r4442 into r5372;
    or r5371 r5372 into r5373;
    is.eq r5353.red_ball_2 r4443 into r5374;
    or r5373 r5374 into r5375;
    is.eq r5353.red_ball_2 r4444 into r5376;
    or r5375 r5376 into r5377;
    is.eq r5353.red_ball_2 r4445 into r5378;
    or r5377 r5378 into r5379;
    add r5368 1u8 into r5380;
    ternary r5379 r5380 r5368 into r5381;
    is.eq r5353.red_ball_3 r4440 into r5382;
    is.eq r5353.red_ball_3 r4441 into r5383;
    or r5382 r5383 into r5384;
    is.eq r5353.red_ball_3 r4442 into r5385;
    or r5384 r5385 into r5386;
    is.eq r5353.red_ball_3 r4443 into r5387;
    or r5386 r5387 into r5388;
    is.eq r5353.red_ball_3 r4444 into r5389;
    or r5388 r5389 into r5390;
    is.eq r5353.red_ball_3 r4445 into r5391;
    or r5390 r5391 into r5392;
    add r5381 1u8 into r5393;
    ternary r5392 r5393 r5381 into r5394;
    is.eq r5353.red_ball_4 r4440 into r5395;
    is.eq r5353.red_ball_4 r4441 into r5396;
    or r5395 r5396 into r5397;
    is.eq r5353.red_ball_4 r4442 into r5398;
    or r5397 r5398 into r5399;
    is.eq r5353.red_ball_4 r4443 into r5400;
    or r5399 r5400 into r5401;
    is.eq r5353.red_ball_4 r4444 into r5402;
    or r5401 r5402 into r5403;
    is.eq r5353.red_ball_4 r4445 into r5404;
    or r5403 r5404 into r5405;
    add r5394 1u8 into r5406;
    ternary r5405 r5406 r5394 into r5407;
    is.eq r5353.red_ball_5 r4440 into r5408;
    is.eq r5353.red_ball_5 r4441 into r5409;
    or r5408 r5409 into r5410;
    is.eq r5353.red_ball_5 r4442 into r5411;
    or r5410 r5411 into r5412;
    is.eq r5353.red_ball_5 r4443 into r5413;
    or r5412 r5413 into r5414;
    is.eq r5353.red_ball_5 r4444 into r5415;
    or r5414 r5415 into r5416;
    is.eq r5353.red_ball_5 r4445 into r5417;
    or r5416 r5417 into r5418;
    add r5407 1u8 into r5419;
    ternary r5418 r5419 r5407 into r5420;
    is.eq r5353.red_ball_6 r4440 into r5421;
    is.eq r5353.red_ball_6 r4441 into r5422;
    or r5421 r5422 into r5423;
    is.eq r5353.red_ball_6 r4442 into r5424;
    or r5423 r5424 into r5425;
    is.eq r5353.red_ball_6 r4443 into r5426;
    or r5425 r5426 into r5427;
    is.eq r5353.red_ball_6 r4444 into r5428;
    or r5427 r5428 into r5429;
    is.eq r5353.red_ball_6 r4445 into r5430;
    or r5429 r5430 into r5431;
    add r5420 1u8 into r5432;
    ternary r5431 r5432 r5420 into r5433;
    gte r5433 3u8 into r5434;
    gte r5433 1u8 into r5435;
    ternary r5435 2u8 0u8 into r5436;
    ternary r5434 1u8 r5436 into r5437;
    is.eq r5353.red_ball_1 r4440 into r5438;
    is.eq r5353.red_ball_1 r4441 into r5439;
    or r5438 r5439 into r5440;
    is.eq r5353.red_ball_1 r4442 into r5441;
    or r5440 r5441 into r5442;
    is.eq r5353.red_ball_1 r4443 into r5443;
    or r5442 r5443 into r5444;
    is.eq r5353.red_ball_1 r4444 into r5445;
    or r5444 r5445 into r5446;
    is.eq r5353.red_ball_1 r4445 into r5447;
    or r5446 r5447 into r5448;
    add 0u8 1u8 into r5449;
    ternary r5448 r5449 0u8 into r5450;
    is.eq r5353.red_ball_2 r4440 into r5451;
    is.eq r5353.red_ball_2 r4441 into r5452;
    or r5451 r5452 into r5453;
    is.eq r5353.red_ball_2 r4442 into r5454;
    or r5453 r5454 into r5455;
    is.eq r5353.red_ball_2 r4443 into r5456;
    or r5455 r5456 into r5457;
    is.eq r5353.red_ball_2 r4444 into r5458;
    or r5457 r5458 into r5459;
    is.eq r5353.red_ball_2 r4445 into r5460;
    or r5459 r5460 into r5461;
    add r5450 1u8 into r5462;
    ternary r5461 r5462 r5450 into r5463;
    is.eq r5353.red_ball_3 r4440 into r5464;
    is.eq r5353.red_ball_3 r4441 into r5465;
    or r5464 r5465 into r5466;
    is.eq r5353.red_ball_3 r4442 into r5467;
    or r5466 r5467 into r5468;
    is.eq r5353.red_ball_3 r4443 into r5469;
    or r5468 r5469 into r5470;
    is.eq r5353.red_ball_3 r4444 into r5471;
    or r5470 r5471 into r5472;
    is.eq r5353.red_ball_3 r4445 into r5473;
    or r5472 r5473 into r5474;
    add r5463 1u8 into r5475;
    ternary r5474 r5475 r5463 into r5476;
    is.eq r5353.red_ball_4 r4440 into r5477;
    is.eq r5353.red_ball_4 r4441 into r5478;
    or r5477 r5478 into r5479;
    is.eq r5353.red_ball_4 r4442 into r5480;
    or r5479 r5480 into r5481;
    is.eq r5353.red_ball_4 r4443 into r5482;
    or r5481 r5482 into r5483;
    is.eq r5353.red_ball_4 r4444 into r5484;
    or r5483 r5484 into r5485;
    is.eq r5353.red_ball_4 r4445 into r5486;
    or r5485 r5486 into r5487;
    add r5476 1u8 into r5488;
    ternary r5487 r5488 r5476 into r5489;
    is.eq r5353.red_ball_5 r4440 into r5490;
    is.eq r5353.red_ball_5 r4441 into r5491;
    or r5490 r5491 into r5492;
    is.eq r5353.red_ball_5 r4442 into r5493;
    or r5492 r5493 into r5494;
    is.eq r5353.red_ball_5 r4443 into r5495;
    or r5494 r5495 into r5496;
    is.eq r5353.red_ball_5 r4444 into r5497;
    or r5496 r5497 into r5498;
    is.eq r5353.red_ball_5 r4445 into r5499;
    or r5498 r5499 into r5500;
    add r5489 1u8 into r5501;
    ternary r5500 r5501 r5489 into r5502;
    is.eq r5353.red_ball_6 r4440 into r5503;
    is.eq r5353.red_ball_6 r4441 into r5504;
    or r5503 r5504 into r5505;
    is.eq r5353.red_ball_6 r4442 into r5506;
    or r5505 r5506 into r5507;
    is.eq r5353.red_ball_6 r4443 into r5508;
    or r5507 r5508 into r5509;
    is.eq r5353.red_ball_6 r4444 into r5510;
    or r5509 r5510 into r5511;
    is.eq r5353.red_ball_6 r4445 into r5512;
    or r5511 r5512 into r5513;
    add r5502 1u8 into r5514;
    ternary r5513 r5514 r5502 into r5515;
    gte r5515 3u8 into r5516;
    ternary r5516 2u8 0u8 into r5517;
    ternary r5355 r5433 r5515 into r5518;
    ternary r5355 r5437 r5517 into r5519;
    is.eq r5519 1u8 into r5520;
    gt r5321.index 1u32 into r5521;
    cast r5353.user r5353.round_number r5353.count r5353.gates r5353.red_ball_1 r5353.red_ball_2 r5353.red_ball_3 r5353.red_ball_4 r5353.red_ball_5 r5353.red_ball_6 r5353.blue_ball_1 0u64 1u32 into r5522 as TicketPurchasePriceInfo;
    gt r5349.index 1u32 into r5523;
    cast r5353.user r5353.round_number r5353.count r5353.gates r5353.red_ball_1 r5353.red_ball_2 r5353.red_ball_3 r5353.red_ball_4 r5353.red_ball_5 r5353.red_ball_6 r5353.blue_ball_1 0u64 1u32 into r5524 as TicketPurchasePriceInfo;
    ternary r5523 r5349.user r5335.user into r5525;
    ternary r5523 r5349.round_number r5335.round_number into r5526;
    ternary r5523 r5349.count r5335.count into r5527;
    ternary r5523 r5349.gates r5335.gates into r5528;
    ternary r5523 r5349.red_ball_1 r5335.red_ball_1 into r5529;
    ternary r5523 r5349.red_ball_2 r5335.red_ball_2 into r5530;
    ternary r5523 r5349.red_ball_3 r5335.red_ball_3 into r5531;
    ternary r5523 r5349.red_ball_4 r5335.red_ball_4 into r5532;
    ternary r5523 r5349.red_ball_5 r5335.red_ball_5 into r5533;
    ternary r5523 r5349.red_ball_6 r5335.red_ball_6 into r5534;
    ternary r5523 r5349.blue_ball_1 r5335.blue_ball_1 into r5535;
    ternary r5523 r5349.reward r5335.reward into r5536;
    ternary r5523 r5349.index r5335.index into r5537;
    cast r5525 r5526 r5527 r5528 r5529 r5530 r5531 r5532 r5533 r5534 r5535 r5536 r5537 into r5538 as TicketPurchasePriceInfo;
    ternary r5523 r5524.user r5349.user into r5539;
    ternary r5523 r5524.round_number r5349.round_number into r5540;
    ternary r5523 r5524.count r5349.count into r5541;
    ternary r5523 r5524.gates r5349.gates into r5542;
    ternary r5523 r5524.red_ball_1 r5349.red_ball_1 into r5543;
    ternary r5523 r5524.red_ball_2 r5349.red_ball_2 into r5544;
    ternary r5523 r5524.red_ball_3 r5349.red_ball_3 into r5545;
    ternary r5523 r5524.red_ball_4 r5349.red_ball_4 into r5546;
    ternary r5523 r5524.red_ball_5 r5349.red_ball_5 into r5547;
    ternary r5523 r5524.red_ball_6 r5349.red_ball_6 into r5548;
    ternary r5523 r5524.blue_ball_1 r5349.blue_ball_1 into r5549;
    ternary r5523 r5524.reward r5349.reward into r5550;
    ternary r5523 r5524.index r5349.index into r5551;
    cast r5539 r5540 r5541 r5542 r5543 r5544 r5545 r5546 r5547 r5548 r5549 r5550 r5551 into r5552 as TicketPurchasePriceInfo;
    ternary r5521 r5522.user r5321.user into r5553;
    ternary r5521 r5522.round_number r5321.round_number into r5554;
    ternary r5521 r5522.count r5321.count into r5555;
    ternary r5521 r5522.gates r5321.gates into r5556;
    ternary r5521 r5522.red_ball_1 r5321.red_ball_1 into r5557;
    ternary r5521 r5522.red_ball_2 r5321.red_ball_2 into r5558;
    ternary r5521 r5522.red_ball_3 r5321.red_ball_3 into r5559;
    ternary r5521 r5522.red_ball_4 r5321.red_ball_4 into r5560;
    ternary r5521 r5522.red_ball_5 r5321.red_ball_5 into r5561;
    ternary r5521 r5522.red_ball_6 r5321.red_ball_6 into r5562;
    ternary r5521 r5522.blue_ball_1 r5321.blue_ball_1 into r5563;
    ternary r5521 r5522.reward r5321.reward into r5564;
    ternary r5521 r5522.index r5321.index into r5565;
    cast r5553 r5554 r5555 r5556 r5557 r5558 r5559 r5560 r5561 r5562 r5563 r5564 r5565 into r5566 as TicketPurchasePriceInfo;
    ternary r5521 r5335.user r5538.user into r5567;
    ternary r5521 r5335.round_number r5538.round_number into r5568;
    ternary r5521 r5335.count r5538.count into r5569;
    ternary r5521 r5335.gates r5538.gates into r5570;
    ternary r5521 r5335.red_ball_1 r5538.red_ball_1 into r5571;
    ternary r5521 r5335.red_ball_2 r5538.red_ball_2 into r5572;
    ternary r5521 r5335.red_ball_3 r5538.red_ball_3 into r5573;
    ternary r5521 r5335.red_ball_4 r5538.red_ball_4 into r5574;
    ternary r5521 r5335.red_ball_5 r5538.red_ball_5 into r5575;
    ternary r5521 r5335.red_ball_6 r5538.red_ball_6 into r5576;
    ternary r5521 r5335.blue_ball_1 r5538.blue_ball_1 into r5577;
    ternary r5521 r5335.reward r5538.reward into r5578;
    ternary r5521 r5335.index r5538.index into r5579;
    cast r5567 r5568 r5569 r5570 r5571 r5572 r5573 r5574 r5575 r5576 r5577 r5578 r5579 into r5580 as TicketPurchasePriceInfo;
    ternary r5521 r5349.user r5552.user into r5581;
    ternary r5521 r5349.round_number r5552.round_number into r5582;
    ternary r5521 r5349.count r5552.count into r5583;
    ternary r5521 r5349.gates r5552.gates into r5584;
    ternary r5521 r5349.red_ball_1 r5552.red_ball_1 into r5585;
    ternary r5521 r5349.red_ball_2 r5552.red_ball_2 into r5586;
    ternary r5521 r5349.red_ball_3 r5552.red_ball_3 into r5587;
    ternary r5521 r5349.red_ball_4 r5552.red_ball_4 into r5588;
    ternary r5521 r5349.red_ball_5 r5552.red_ball_5 into r5589;
    ternary r5521 r5349.red_ball_6 r5552.red_ball_6 into r5590;
    ternary r5521 r5349.blue_ball_1 r5552.blue_ball_1 into r5591;
    ternary r5521 r5349.reward r5552.reward into r5592;
    ternary r5521 r5349.index r5552.index into r5593;
    cast r5581 r5582 r5583 r5584 r5585 r5586 r5587 r5588 r5589 r5590 r5591 r5592 r5593 into r5594 as TicketPurchasePriceInfo;
    ternary r5520 r5566.user r5321.user into r5595;
    ternary r5520 r5566.round_number r5321.round_number into r5596;
    ternary r5520 r5566.count r5321.count into r5597;
    ternary r5520 r5566.gates r5321.gates into r5598;
    ternary r5520 r5566.red_ball_1 r5321.red_ball_1 into r5599;
    ternary r5520 r5566.red_ball_2 r5321.red_ball_2 into r5600;
    ternary r5520 r5566.red_ball_3 r5321.red_ball_3 into r5601;
    ternary r5520 r5566.red_ball_4 r5321.red_ball_4 into r5602;
    ternary r5520 r5566.red_ball_5 r5321.red_ball_5 into r5603;
    ternary r5520 r5566.red_ball_6 r5321.red_ball_6 into r5604;
    ternary r5520 r5566.blue_ball_1 r5321.blue_ball_1 into r5605;
    ternary r5520 r5566.reward r5321.reward into r5606;
    ternary r5520 r5566.index r5321.index into r5607;
    cast r5595 r5596 r5597 r5598 r5599 r5600 r5601 r5602 r5603 r5604 r5605 r5606 r5607 into r5608 as TicketPurchasePriceInfo;
    ternary r5520 r5580.user r5335.user into r5609;
    ternary r5520 r5580.round_number r5335.round_number into r5610;
    ternary r5520 r5580.count r5335.count into r5611;
    ternary r5520 r5580.gates r5335.gates into r5612;
    ternary r5520 r5580.red_ball_1 r5335.red_ball_1 into r5613;
    ternary r5520 r5580.red_ball_2 r5335.red_ball_2 into r5614;
    ternary r5520 r5580.red_ball_3 r5335.red_ball_3 into r5615;
    ternary r5520 r5580.red_ball_4 r5335.red_ball_4 into r5616;
    ternary r5520 r5580.red_ball_5 r5335.red_ball_5 into r5617;
    ternary r5520 r5580.red_ball_6 r5335.red_ball_6 into r5618;
    ternary r5520 r5580.blue_ball_1 r5335.blue_ball_1 into r5619;
    ternary r5520 r5580.reward r5335.reward into r5620;
    ternary r5520 r5580.index r5335.index into r5621;
    cast r5609 r5610 r5611 r5612 r5613 r5614 r5615 r5616 r5617 r5618 r5619 r5620 r5621 into r5622 as TicketPurchasePriceInfo;
    ternary r5520 r5594.user r5349.user into r5623;
    ternary r5520 r5594.round_number r5349.round_number into r5624;
    ternary r5520 r5594.count r5349.count into r5625;
    ternary r5520 r5594.gates r5349.gates into r5626;
    ternary r5520 r5594.red_ball_1 r5349.red_ball_1 into r5627;
    ternary r5520 r5594.red_ball_2 r5349.red_ball_2 into r5628;
    ternary r5520 r5594.red_ball_3 r5349.red_ball_3 into r5629;
    ternary r5520 r5594.red_ball_4 r5349.red_ball_4 into r5630;
    ternary r5520 r5594.red_ball_5 r5349.red_ball_5 into r5631;
    ternary r5520 r5594.red_ball_6 r5349.red_ball_6 into r5632;
    ternary r5520 r5594.blue_ball_1 r5349.blue_ball_1 into r5633;
    ternary r5520 r5594.reward r5349.reward into r5634;
    ternary r5520 r5594.index r5349.index into r5635;
    cast r5623 r5624 r5625 r5626 r5627 r5628 r5629 r5630 r5631 r5632 r5633 r5634 r5635 into r5636 as TicketPurchasePriceInfo;
    is.eq r5519 2u8 into r5637;
    gt r5636.index 2u32 into r5638;
    cast r5353.user r5353.round_number r5353.count r5353.gates r5353.red_ball_1 r5353.red_ball_2 r5353.red_ball_3 r5353.red_ball_4 r5353.red_ball_5 r5353.red_ball_6 r5353.blue_ball_1 0u64 2u32 into r5639 as TicketPurchasePriceInfo;
    gt r5622.index 2u32 into r5640;
    cast r5353.user r5353.round_number r5353.count r5353.gates r5353.red_ball_1 r5353.red_ball_2 r5353.red_ball_3 r5353.red_ball_4 r5353.red_ball_5 r5353.red_ball_6 r5353.blue_ball_1 0u64 2u32 into r5641 as TicketPurchasePriceInfo;
    ternary r5640 r5641.user r5622.user into r5642;
    ternary r5640 r5641.round_number r5622.round_number into r5643;
    ternary r5640 r5641.count r5622.count into r5644;
    ternary r5640 r5641.gates r5622.gates into r5645;
    ternary r5640 r5641.red_ball_1 r5622.red_ball_1 into r5646;
    ternary r5640 r5641.red_ball_2 r5622.red_ball_2 into r5647;
    ternary r5640 r5641.red_ball_3 r5622.red_ball_3 into r5648;
    ternary r5640 r5641.red_ball_4 r5622.red_ball_4 into r5649;
    ternary r5640 r5641.red_ball_5 r5622.red_ball_5 into r5650;
    ternary r5640 r5641.red_ball_6 r5622.red_ball_6 into r5651;
    ternary r5640 r5641.blue_ball_1 r5622.blue_ball_1 into r5652;
    ternary r5640 r5641.reward r5622.reward into r5653;
    ternary r5640 r5641.index r5622.index into r5654;
    cast r5642 r5643 r5644 r5645 r5646 r5647 r5648 r5649 r5650 r5651 r5652 r5653 r5654 into r5655 as TicketPurchasePriceInfo;
    ternary r5638 r5636.user r5655.user into r5656;
    ternary r5638 r5636.round_number r5655.round_number into r5657;
    ternary r5638 r5636.count r5655.count into r5658;
    ternary r5638 r5636.gates r5655.gates into r5659;
    ternary r5638 r5636.red_ball_1 r5655.red_ball_1 into r5660;
    ternary r5638 r5636.red_ball_2 r5655.red_ball_2 into r5661;
    ternary r5638 r5636.red_ball_3 r5655.red_ball_3 into r5662;
    ternary r5638 r5636.red_ball_4 r5655.red_ball_4 into r5663;
    ternary r5638 r5636.red_ball_5 r5655.red_ball_5 into r5664;
    ternary r5638 r5636.red_ball_6 r5655.red_ball_6 into r5665;
    ternary r5638 r5636.blue_ball_1 r5655.blue_ball_1 into r5666;
    ternary r5638 r5636.reward r5655.reward into r5667;
    ternary r5638 r5636.index r5655.index into r5668;
    cast r5656 r5657 r5658 r5659 r5660 r5661 r5662 r5663 r5664 r5665 r5666 r5667 r5668 into r5669 as TicketPurchasePriceInfo;
    ternary r5638 r5639.user r5636.user into r5670;
    ternary r5638 r5639.round_number r5636.round_number into r5671;
    ternary r5638 r5639.count r5636.count into r5672;
    ternary r5638 r5639.gates r5636.gates into r5673;
    ternary r5638 r5639.red_ball_1 r5636.red_ball_1 into r5674;
    ternary r5638 r5639.red_ball_2 r5636.red_ball_2 into r5675;
    ternary r5638 r5639.red_ball_3 r5636.red_ball_3 into r5676;
    ternary r5638 r5639.red_ball_4 r5636.red_ball_4 into r5677;
    ternary r5638 r5639.red_ball_5 r5636.red_ball_5 into r5678;
    ternary r5638 r5639.red_ball_6 r5636.red_ball_6 into r5679;
    ternary r5638 r5639.blue_ball_1 r5636.blue_ball_1 into r5680;
    ternary r5638 r5639.reward r5636.reward into r5681;
    ternary r5638 r5639.index r5636.index into r5682;
    cast r5670 r5671 r5672 r5673 r5674 r5675 r5676 r5677 r5678 r5679 r5680 r5681 r5682 into r5683 as TicketPurchasePriceInfo;
    ternary r5637 r5669.user r5622.user into r5684;
    ternary r5637 r5669.round_number r5622.round_number into r5685;
    ternary r5637 r5669.count r5622.count into r5686;
    ternary r5637 r5669.gates r5622.gates into r5687;
    ternary r5637 r5669.red_ball_1 r5622.red_ball_1 into r5688;
    ternary r5637 r5669.red_ball_2 r5622.red_ball_2 into r5689;
    ternary r5637 r5669.red_ball_3 r5622.red_ball_3 into r5690;
    ternary r5637 r5669.red_ball_4 r5622.red_ball_4 into r5691;
    ternary r5637 r5669.red_ball_5 r5622.red_ball_5 into r5692;
    ternary r5637 r5669.red_ball_6 r5622.red_ball_6 into r5693;
    ternary r5637 r5669.blue_ball_1 r5622.blue_ball_1 into r5694;
    ternary r5637 r5669.reward r5622.reward into r5695;
    ternary r5637 r5669.index r5622.index into r5696;
    cast r5684 r5685 r5686 r5687 r5688 r5689 r5690 r5691 r5692 r5693 r5694 r5695 r5696 into r5697 as TicketPurchasePriceInfo;
    ternary r5637 r5683.user r5636.user into r5698;
    ternary r5637 r5683.round_number r5636.round_number into r5699;
    ternary r5637 r5683.count r5636.count into r5700;
    ternary r5637 r5683.gates r5636.gates into r5701;
    ternary r5637 r5683.red_ball_1 r5636.red_ball_1 into r5702;
    ternary r5637 r5683.red_ball_2 r5636.red_ball_2 into r5703;
    ternary r5637 r5683.red_ball_3 r5636.red_ball_3 into r5704;
    ternary r5637 r5683.red_ball_4 r5636.red_ball_4 into r5705;
    ternary r5637 r5683.red_ball_5 r5636.red_ball_5 into r5706;
    ternary r5637 r5683.red_ball_6 r5636.red_ball_6 into r5707;
    ternary r5637 r5683.blue_ball_1 r5636.blue_ball_1 into r5708;
    ternary r5637 r5683.reward r5636.reward into r5709;
    ternary r5637 r5683.index r5636.index into r5710;
    cast r5698 r5699 r5700 r5701 r5702 r5703 r5704 r5705 r5706 r5707 r5708 r5709 r5710 into r5711 as TicketPurchasePriceInfo;
    ternary r5354 r5608.user r5321.user into r5712;
    ternary r5354 r5608.round_number r5321.round_number into r5713;
    ternary r5354 r5608.count r5321.count into r5714;
    ternary r5354 r5608.gates r5321.gates into r5715;
    ternary r5354 r5608.red_ball_1 r5321.red_ball_1 into r5716;
    ternary r5354 r5608.red_ball_2 r5321.red_ball_2 into r5717;
    ternary r5354 r5608.red_ball_3 r5321.red_ball_3 into r5718;
    ternary r5354 r5608.red_ball_4 r5321.red_ball_4 into r5719;
    ternary r5354 r5608.red_ball_5 r5321.red_ball_5 into r5720;
    ternary r5354 r5608.red_ball_6 r5321.red_ball_6 into r5721;
    ternary r5354 r5608.blue_ball_1 r5321.blue_ball_1 into r5722;
    ternary r5354 r5608.reward r5321.reward into r5723;
    ternary r5354 r5608.index r5321.index into r5724;
    cast r5712 r5713 r5714 r5715 r5716 r5717 r5718 r5719 r5720 r5721 r5722 r5723 r5724 into r5725 as TicketPurchasePriceInfo;
    ternary r5354 r5697.user r5335.user into r5726;
    ternary r5354 r5697.round_number r5335.round_number into r5727;
    ternary r5354 r5697.count r5335.count into r5728;
    ternary r5354 r5697.gates r5335.gates into r5729;
    ternary r5354 r5697.red_ball_1 r5335.red_ball_1 into r5730;
    ternary r5354 r5697.red_ball_2 r5335.red_ball_2 into r5731;
    ternary r5354 r5697.red_ball_3 r5335.red_ball_3 into r5732;
    ternary r5354 r5697.red_ball_4 r5335.red_ball_4 into r5733;
    ternary r5354 r5697.red_ball_5 r5335.red_ball_5 into r5734;
    ternary r5354 r5697.red_ball_6 r5335.red_ball_6 into r5735;
    ternary r5354 r5697.blue_ball_1 r5335.blue_ball_1 into r5736;
    ternary r5354 r5697.reward r5335.reward into r5737;
    ternary r5354 r5697.index r5335.index into r5738;
    cast r5726 r5727 r5728 r5729 r5730 r5731 r5732 r5733 r5734 r5735 r5736 r5737 r5738 into r5739 as TicketPurchasePriceInfo;
    ternary r5354 r5711.user r5349.user into r5740;
    ternary r5354 r5711.round_number r5349.round_number into r5741;
    ternary r5354 r5711.count r5349.count into r5742;
    ternary r5354 r5711.gates r5349.gates into r5743;
    ternary r5354 r5711.red_ball_1 r5349.red_ball_1 into r5744;
    ternary r5354 r5711.red_ball_2 r5349.red_ball_2 into r5745;
    ternary r5354 r5711.red_ball_3 r5349.red_ball_3 into r5746;
    ternary r5354 r5711.red_ball_4 r5349.red_ball_4 into r5747;
    ternary r5354 r5711.red_ball_5 r5349.red_ball_5 into r5748;
    ternary r5354 r5711.red_ball_6 r5349.red_ball_6 into r5749;
    ternary r5354 r5711.blue_ball_1 r5349.blue_ball_1 into r5750;
    ternary r5354 r5711.reward r5349.reward into r5751;
    ternary r5354 r5711.index r5349.index into r5752;
    cast r5740 r5741 r5742 r5743 r5744 r5745 r5746 r5747 r5748 r5749 r5750 r5751 r5752 into r5753 as TicketPurchasePriceInfo;
    ternary r5352 r5725.user r5321.user into r5754;
    ternary r5352 r5725.round_number r5321.round_number into r5755;
    ternary r5352 r5725.count r5321.count into r5756;
    ternary r5352 r5725.gates r5321.gates into r5757;
    ternary r5352 r5725.red_ball_1 r5321.red_ball_1 into r5758;
    ternary r5352 r5725.red_ball_2 r5321.red_ball_2 into r5759;
    ternary r5352 r5725.red_ball_3 r5321.red_ball_3 into r5760;
    ternary r5352 r5725.red_ball_4 r5321.red_ball_4 into r5761;
    ternary r5352 r5725.red_ball_5 r5321.red_ball_5 into r5762;
    ternary r5352 r5725.red_ball_6 r5321.red_ball_6 into r5763;
    ternary r5352 r5725.blue_ball_1 r5321.blue_ball_1 into r5764;
    ternary r5352 r5725.reward r5321.reward into r5765;
    ternary r5352 r5725.index r5321.index into r5766;
    cast r5754 r5755 r5756 r5757 r5758 r5759 r5760 r5761 r5762 r5763 r5764 r5765 r5766 into r5767 as TicketPurchasePriceInfo;
    ternary r5352 r5739.user r5335.user into r5768;
    ternary r5352 r5739.round_number r5335.round_number into r5769;
    ternary r5352 r5739.count r5335.count into r5770;
    ternary r5352 r5739.gates r5335.gates into r5771;
    ternary r5352 r5739.red_ball_1 r5335.red_ball_1 into r5772;
    ternary r5352 r5739.red_ball_2 r5335.red_ball_2 into r5773;
    ternary r5352 r5739.red_ball_3 r5335.red_ball_3 into r5774;
    ternary r5352 r5739.red_ball_4 r5335.red_ball_4 into r5775;
    ternary r5352 r5739.red_ball_5 r5335.red_ball_5 into r5776;
    ternary r5352 r5739.red_ball_6 r5335.red_ball_6 into r5777;
    ternary r5352 r5739.blue_ball_1 r5335.blue_ball_1 into r5778;
    ternary r5352 r5739.reward r5335.reward into r5779;
    ternary r5352 r5739.index r5335.index into r5780;
    cast r5768 r5769 r5770 r5771 r5772 r5773 r5774 r5775 r5776 r5777 r5778 r5779 r5780 into r5781 as TicketPurchasePriceInfo;
    ternary r5352 r5753.user r5349.user into r5782;
    ternary r5352 r5753.round_number r5349.round_number into r5783;
    ternary r5352 r5753.count r5349.count into r5784;
    ternary r5352 r5753.gates r5349.gates into r5785;
    ternary r5352 r5753.red_ball_1 r5349.red_ball_1 into r5786;
    ternary r5352 r5753.red_ball_2 r5349.red_ball_2 into r5787;
    ternary r5352 r5753.red_ball_3 r5349.red_ball_3 into r5788;
    ternary r5352 r5753.red_ball_4 r5349.red_ball_4 into r5789;
    ternary r5352 r5753.red_ball_5 r5349.red_ball_5 into r5790;
    ternary r5352 r5753.red_ball_6 r5349.red_ball_6 into r5791;
    ternary r5352 r5753.blue_ball_1 r5349.blue_ball_1 into r5792;
    ternary r5352 r5753.reward r5349.reward into r5793;
    ternary r5352 r5753.index r5349.index into r5794;
    cast r5782 r5783 r5784 r5785 r5786 r5787 r5788 r5789 r5790 r5791 r5792 r5793 r5794 into r5795 as TicketPurchasePriceInfo;
    not r4456 into r5796;
    lte 4u32 r2.current_round_num into r5797;
    and r5796 r5797 into r5798;
    get.or_use ticketPurchaseMap[4u32] r4457 into r5799;
    is.neq r5799.round_number 0u32 into r5800;
    is.eq r5799.blue_ball_1 r4453 into r5801;
    is.eq r5799.red_ball_1 r4440 into r5802;
    is.eq r5799.red_ball_1 r4441 into r5803;
    or r5802 r5803 into r5804;
    is.eq r5799.red_ball_1 r4442 into r5805;
    or r5804 r5805 into r5806;
    is.eq r5799.red_ball_1 r4443 into r5807;
    or r5806 r5807 into r5808;
    is.eq r5799.red_ball_1 r4444 into r5809;
    or r5808 r5809 into r5810;
    is.eq r5799.red_ball_1 r4445 into r5811;
    or r5810 r5811 into r5812;
    add 0u8 1u8 into r5813;
    ternary r5812 r5813 0u8 into r5814;
    is.eq r5799.red_ball_2 r4440 into r5815;
    is.eq r5799.red_ball_2 r4441 into r5816;
    or r5815 r5816 into r5817;
    is.eq r5799.red_ball_2 r4442 into r5818;
    or r5817 r5818 into r5819;
    is.eq r5799.red_ball_2 r4443 into r5820;
    or r5819 r5820 into r5821;
    is.eq r5799.red_ball_2 r4444 into r5822;
    or r5821 r5822 into r5823;
    is.eq r5799.red_ball_2 r4445 into r5824;
    or r5823 r5824 into r5825;
    add r5814 1u8 into r5826;
    ternary r5825 r5826 r5814 into r5827;
    is.eq r5799.red_ball_3 r4440 into r5828;
    is.eq r5799.red_ball_3 r4441 into r5829;
    or r5828 r5829 into r5830;
    is.eq r5799.red_ball_3 r4442 into r5831;
    or r5830 r5831 into r5832;
    is.eq r5799.red_ball_3 r4443 into r5833;
    or r5832 r5833 into r5834;
    is.eq r5799.red_ball_3 r4444 into r5835;
    or r5834 r5835 into r5836;
    is.eq r5799.red_ball_3 r4445 into r5837;
    or r5836 r5837 into r5838;
    add r5827 1u8 into r5839;
    ternary r5838 r5839 r5827 into r5840;
    is.eq r5799.red_ball_4 r4440 into r5841;
    is.eq r5799.red_ball_4 r4441 into r5842;
    or r5841 r5842 into r5843;
    is.eq r5799.red_ball_4 r4442 into r5844;
    or r5843 r5844 into r5845;
    is.eq r5799.red_ball_4 r4443 into r5846;
    or r5845 r5846 into r5847;
    is.eq r5799.red_ball_4 r4444 into r5848;
    or r5847 r5848 into r5849;
    is.eq r5799.red_ball_4 r4445 into r5850;
    or r5849 r5850 into r5851;
    add r5840 1u8 into r5852;
    ternary r5851 r5852 r5840 into r5853;
    is.eq r5799.red_ball_5 r4440 into r5854;
    is.eq r5799.red_ball_5 r4441 into r5855;
    or r5854 r5855 into r5856;
    is.eq r5799.red_ball_5 r4442 into r5857;
    or r5856 r5857 into r5858;
    is.eq r5799.red_ball_5 r4443 into r5859;
    or r5858 r5859 into r5860;
    is.eq r5799.red_ball_5 r4444 into r5861;
    or r5860 r5861 into r5862;
    is.eq r5799.red_ball_5 r4445 into r5863;
    or r5862 r5863 into r5864;
    add r5853 1u8 into r5865;
    ternary r5864 r5865 r5853 into r5866;
    is.eq r5799.red_ball_6 r4440 into r5867;
    is.eq r5799.red_ball_6 r4441 into r5868;
    or r5867 r5868 into r5869;
    is.eq r5799.red_ball_6 r4442 into r5870;
    or r5869 r5870 into r5871;
    is.eq r5799.red_ball_6 r4443 into r5872;
    or r5871 r5872 into r5873;
    is.eq r5799.red_ball_6 r4444 into r5874;
    or r5873 r5874 into r5875;
    is.eq r5799.red_ball_6 r4445 into r5876;
    or r5875 r5876 into r5877;
    add r5866 1u8 into r5878;
    ternary r5877 r5878 r5866 into r5879;
    gte r5879 3u8 into r5880;
    gte r5879 1u8 into r5881;
    ternary r5881 2u8 0u8 into r5882;
    ternary r5880 1u8 r5882 into r5883;
    is.eq r5799.red_ball_1 r4440 into r5884;
    is.eq r5799.red_ball_1 r4441 into r5885;
    or r5884 r5885 into r5886;
    is.eq r5799.red_ball_1 r4442 into r5887;
    or r5886 r5887 into r5888;
    is.eq r5799.red_ball_1 r4443 into r5889;
    or r5888 r5889 into r5890;
    is.eq r5799.red_ball_1 r4444 into r5891;
    or r5890 r5891 into r5892;
    is.eq r5799.red_ball_1 r4445 into r5893;
    or r5892 r5893 into r5894;
    add 0u8 1u8 into r5895;
    ternary r5894 r5895 0u8 into r5896;
    is.eq r5799.red_ball_2 r4440 into r5897;
    is.eq r5799.red_ball_2 r4441 into r5898;
    or r5897 r5898 into r5899;
    is.eq r5799.red_ball_2 r4442 into r5900;
    or r5899 r5900 into r5901;
    is.eq r5799.red_ball_2 r4443 into r5902;
    or r5901 r5902 into r5903;
    is.eq r5799.red_ball_2 r4444 into r5904;
    or r5903 r5904 into r5905;
    is.eq r5799.red_ball_2 r4445 into r5906;
    or r5905 r5906 into r5907;
    add r5896 1u8 into r5908;
    ternary r5907 r5908 r5896 into r5909;
    is.eq r5799.red_ball_3 r4440 into r5910;
    is.eq r5799.red_ball_3 r4441 into r5911;
    or r5910 r5911 into r5912;
    is.eq r5799.red_ball_3 r4442 into r5913;
    or r5912 r5913 into r5914;
    is.eq r5799.red_ball_3 r4443 into r5915;
    or r5914 r5915 into r5916;
    is.eq r5799.red_ball_3 r4444 into r5917;
    or r5916 r5917 into r5918;
    is.eq r5799.red_ball_3 r4445 into r5919;
    or r5918 r5919 into r5920;
    add r5909 1u8 into r5921;
    ternary r5920 r5921 r5909 into r5922;
    is.eq r5799.red_ball_4 r4440 into r5923;
    is.eq r5799.red_ball_4 r4441 into r5924;
    or r5923 r5924 into r5925;
    is.eq r5799.red_ball_4 r4442 into r5926;
    or r5925 r5926 into r5927;
    is.eq r5799.red_ball_4 r4443 into r5928;
    or r5927 r5928 into r5929;
    is.eq r5799.red_ball_4 r4444 into r5930;
    or r5929 r5930 into r5931;
    is.eq r5799.red_ball_4 r4445 into r5932;
    or r5931 r5932 into r5933;
    add r5922 1u8 into r5934;
    ternary r5933 r5934 r5922 into r5935;
    is.eq r5799.red_ball_5 r4440 into r5936;
    is.eq r5799.red_ball_5 r4441 into r5937;
    or r5936 r5937 into r5938;
    is.eq r5799.red_ball_5 r4442 into r5939;
    or r5938 r5939 into r5940;
    is.eq r5799.red_ball_5 r4443 into r5941;
    or r5940 r5941 into r5942;
    is.eq r5799.red_ball_5 r4444 into r5943;
    or r5942 r5943 into r5944;
    is.eq r5799.red_ball_5 r4445 into r5945;
    or r5944 r5945 into r5946;
    add r5935 1u8 into r5947;
    ternary r5946 r5947 r5935 into r5948;
    is.eq r5799.red_ball_6 r4440 into r5949;
    is.eq r5799.red_ball_6 r4441 into r5950;
    or r5949 r5950 into r5951;
    is.eq r5799.red_ball_6 r4442 into r5952;
    or r5951 r5952 into r5953;
    is.eq r5799.red_ball_6 r4443 into r5954;
    or r5953 r5954 into r5955;
    is.eq r5799.red_ball_6 r4444 into r5956;
    or r5955 r5956 into r5957;
    is.eq r5799.red_ball_6 r4445 into r5958;
    or r5957 r5958 into r5959;
    add r5948 1u8 into r5960;
    ternary r5959 r5960 r5948 into r5961;
    gte r5961 3u8 into r5962;
    ternary r5962 2u8 0u8 into r5963;
    ternary r5801 r5879 r5961 into r5964;
    ternary r5801 r5883 r5963 into r5965;
    is.eq r5965 1u8 into r5966;
    gt r5767.index 1u32 into r5967;
    cast r5799.user r5799.round_number r5799.count r5799.gates r5799.red_ball_1 r5799.red_ball_2 r5799.red_ball_3 r5799.red_ball_4 r5799.red_ball_5 r5799.red_ball_6 r5799.blue_ball_1 0u64 1u32 into r5968 as TicketPurchasePriceInfo;
    gt r5795.index 1u32 into r5969;
    cast r5799.user r5799.round_number r5799.count r5799.gates r5799.red_ball_1 r5799.red_ball_2 r5799.red_ball_3 r5799.red_ball_4 r5799.red_ball_5 r5799.red_ball_6 r5799.blue_ball_1 0u64 1u32 into r5970 as TicketPurchasePriceInfo;
    ternary r5969 r5795.user r5781.user into r5971;
    ternary r5969 r5795.round_number r5781.round_number into r5972;
    ternary r5969 r5795.count r5781.count into r5973;
    ternary r5969 r5795.gates r5781.gates into r5974;
    ternary r5969 r5795.red_ball_1 r5781.red_ball_1 into r5975;
    ternary r5969 r5795.red_ball_2 r5781.red_ball_2 into r5976;
    ternary r5969 r5795.red_ball_3 r5781.red_ball_3 into r5977;
    ternary r5969 r5795.red_ball_4 r5781.red_ball_4 into r5978;
    ternary r5969 r5795.red_ball_5 r5781.red_ball_5 into r5979;
    ternary r5969 r5795.red_ball_6 r5781.red_ball_6 into r5980;
    ternary r5969 r5795.blue_ball_1 r5781.blue_ball_1 into r5981;
    ternary r5969 r5795.reward r5781.reward into r5982;
    ternary r5969 r5795.index r5781.index into r5983;
    cast r5971 r5972 r5973 r5974 r5975 r5976 r5977 r5978 r5979 r5980 r5981 r5982 r5983 into r5984 as TicketPurchasePriceInfo;
    ternary r5969 r5970.user r5795.user into r5985;
    ternary r5969 r5970.round_number r5795.round_number into r5986;
    ternary r5969 r5970.count r5795.count into r5987;
    ternary r5969 r5970.gates r5795.gates into r5988;
    ternary r5969 r5970.red_ball_1 r5795.red_ball_1 into r5989;
    ternary r5969 r5970.red_ball_2 r5795.red_ball_2 into r5990;
    ternary r5969 r5970.red_ball_3 r5795.red_ball_3 into r5991;
    ternary r5969 r5970.red_ball_4 r5795.red_ball_4 into r5992;
    ternary r5969 r5970.red_ball_5 r5795.red_ball_5 into r5993;
    ternary r5969 r5970.red_ball_6 r5795.red_ball_6 into r5994;
    ternary r5969 r5970.blue_ball_1 r5795.blue_ball_1 into r5995;
    ternary r5969 r5970.reward r5795.reward into r5996;
    ternary r5969 r5970.index r5795.index into r5997;
    cast r5985 r5986 r5987 r5988 r5989 r5990 r5991 r5992 r5993 r5994 r5995 r5996 r5997 into r5998 as TicketPurchasePriceInfo;
    ternary r5967 r5968.user r5767.user into r5999;
    ternary r5967 r5968.round_number r5767.round_number into r6000;
    ternary r5967 r5968.count r5767.count into r6001;
    ternary r5967 r5968.gates r5767.gates into r6002;
    ternary r5967 r5968.red_ball_1 r5767.red_ball_1 into r6003;
    ternary r5967 r5968.red_ball_2 r5767.red_ball_2 into r6004;
    ternary r5967 r5968.red_ball_3 r5767.red_ball_3 into r6005;
    ternary r5967 r5968.red_ball_4 r5767.red_ball_4 into r6006;
    ternary r5967 r5968.red_ball_5 r5767.red_ball_5 into r6007;
    ternary r5967 r5968.red_ball_6 r5767.red_ball_6 into r6008;
    ternary r5967 r5968.blue_ball_1 r5767.blue_ball_1 into r6009;
    ternary r5967 r5968.reward r5767.reward into r6010;
    ternary r5967 r5968.index r5767.index into r6011;
    cast r5999 r6000 r6001 r6002 r6003 r6004 r6005 r6006 r6007 r6008 r6009 r6010 r6011 into r6012 as TicketPurchasePriceInfo;
    ternary r5967 r5781.user r5984.user into r6013;
    ternary r5967 r5781.round_number r5984.round_number into r6014;
    ternary r5967 r5781.count r5984.count into r6015;
    ternary r5967 r5781.gates r5984.gates into r6016;
    ternary r5967 r5781.red_ball_1 r5984.red_ball_1 into r6017;
    ternary r5967 r5781.red_ball_2 r5984.red_ball_2 into r6018;
    ternary r5967 r5781.red_ball_3 r5984.red_ball_3 into r6019;
    ternary r5967 r5781.red_ball_4 r5984.red_ball_4 into r6020;
    ternary r5967 r5781.red_ball_5 r5984.red_ball_5 into r6021;
    ternary r5967 r5781.red_ball_6 r5984.red_ball_6 into r6022;
    ternary r5967 r5781.blue_ball_1 r5984.blue_ball_1 into r6023;
    ternary r5967 r5781.reward r5984.reward into r6024;
    ternary r5967 r5781.index r5984.index into r6025;
    cast r6013 r6014 r6015 r6016 r6017 r6018 r6019 r6020 r6021 r6022 r6023 r6024 r6025 into r6026 as TicketPurchasePriceInfo;
    ternary r5967 r5795.user r5998.user into r6027;
    ternary r5967 r5795.round_number r5998.round_number into r6028;
    ternary r5967 r5795.count r5998.count into r6029;
    ternary r5967 r5795.gates r5998.gates into r6030;
    ternary r5967 r5795.red_ball_1 r5998.red_ball_1 into r6031;
    ternary r5967 r5795.red_ball_2 r5998.red_ball_2 into r6032;
    ternary r5967 r5795.red_ball_3 r5998.red_ball_3 into r6033;
    ternary r5967 r5795.red_ball_4 r5998.red_ball_4 into r6034;
    ternary r5967 r5795.red_ball_5 r5998.red_ball_5 into r6035;
    ternary r5967 r5795.red_ball_6 r5998.red_ball_6 into r6036;
    ternary r5967 r5795.blue_ball_1 r5998.blue_ball_1 into r6037;
    ternary r5967 r5795.reward r5998.reward into r6038;
    ternary r5967 r5795.index r5998.index into r6039;
    cast r6027 r6028 r6029 r6030 r6031 r6032 r6033 r6034 r6035 r6036 r6037 r6038 r6039 into r6040 as TicketPurchasePriceInfo;
    ternary r5966 r6012.user r5767.user into r6041;
    ternary r5966 r6012.round_number r5767.round_number into r6042;
    ternary r5966 r6012.count r5767.count into r6043;
    ternary r5966 r6012.gates r5767.gates into r6044;
    ternary r5966 r6012.red_ball_1 r5767.red_ball_1 into r6045;
    ternary r5966 r6012.red_ball_2 r5767.red_ball_2 into r6046;
    ternary r5966 r6012.red_ball_3 r5767.red_ball_3 into r6047;
    ternary r5966 r6012.red_ball_4 r5767.red_ball_4 into r6048;
    ternary r5966 r6012.red_ball_5 r5767.red_ball_5 into r6049;
    ternary r5966 r6012.red_ball_6 r5767.red_ball_6 into r6050;
    ternary r5966 r6012.blue_ball_1 r5767.blue_ball_1 into r6051;
    ternary r5966 r6012.reward r5767.reward into r6052;
    ternary r5966 r6012.index r5767.index into r6053;
    cast r6041 r6042 r6043 r6044 r6045 r6046 r6047 r6048 r6049 r6050 r6051 r6052 r6053 into r6054 as TicketPurchasePriceInfo;
    ternary r5966 r6026.user r5781.user into r6055;
    ternary r5966 r6026.round_number r5781.round_number into r6056;
    ternary r5966 r6026.count r5781.count into r6057;
    ternary r5966 r6026.gates r5781.gates into r6058;
    ternary r5966 r6026.red_ball_1 r5781.red_ball_1 into r6059;
    ternary r5966 r6026.red_ball_2 r5781.red_ball_2 into r6060;
    ternary r5966 r6026.red_ball_3 r5781.red_ball_3 into r6061;
    ternary r5966 r6026.red_ball_4 r5781.red_ball_4 into r6062;
    ternary r5966 r6026.red_ball_5 r5781.red_ball_5 into r6063;
    ternary r5966 r6026.red_ball_6 r5781.red_ball_6 into r6064;
    ternary r5966 r6026.blue_ball_1 r5781.blue_ball_1 into r6065;
    ternary r5966 r6026.reward r5781.reward into r6066;
    ternary r5966 r6026.index r5781.index into r6067;
    cast r6055 r6056 r6057 r6058 r6059 r6060 r6061 r6062 r6063 r6064 r6065 r6066 r6067 into r6068 as TicketPurchasePriceInfo;
    ternary r5966 r6040.user r5795.user into r6069;
    ternary r5966 r6040.round_number r5795.round_number into r6070;
    ternary r5966 r6040.count r5795.count into r6071;
    ternary r5966 r6040.gates r5795.gates into r6072;
    ternary r5966 r6040.red_ball_1 r5795.red_ball_1 into r6073;
    ternary r5966 r6040.red_ball_2 r5795.red_ball_2 into r6074;
    ternary r5966 r6040.red_ball_3 r5795.red_ball_3 into r6075;
    ternary r5966 r6040.red_ball_4 r5795.red_ball_4 into r6076;
    ternary r5966 r6040.red_ball_5 r5795.red_ball_5 into r6077;
    ternary r5966 r6040.red_ball_6 r5795.red_ball_6 into r6078;
    ternary r5966 r6040.blue_ball_1 r5795.blue_ball_1 into r6079;
    ternary r5966 r6040.reward r5795.reward into r6080;
    ternary r5966 r6040.index r5795.index into r6081;
    cast r6069 r6070 r6071 r6072 r6073 r6074 r6075 r6076 r6077 r6078 r6079 r6080 r6081 into r6082 as TicketPurchasePriceInfo;
    is.eq r5965 2u8 into r6083;
    gt r6082.index 2u32 into r6084;
    cast r5799.user r5799.round_number r5799.count r5799.gates r5799.red_ball_1 r5799.red_ball_2 r5799.red_ball_3 r5799.red_ball_4 r5799.red_ball_5 r5799.red_ball_6 r5799.blue_ball_1 0u64 2u32 into r6085 as TicketPurchasePriceInfo;
    gt r6068.index 2u32 into r6086;
    cast r5799.user r5799.round_number r5799.count r5799.gates r5799.red_ball_1 r5799.red_ball_2 r5799.red_ball_3 r5799.red_ball_4 r5799.red_ball_5 r5799.red_ball_6 r5799.blue_ball_1 0u64 2u32 into r6087 as TicketPurchasePriceInfo;
    ternary r6086 r6087.user r6068.user into r6088;
    ternary r6086 r6087.round_number r6068.round_number into r6089;
    ternary r6086 r6087.count r6068.count into r6090;
    ternary r6086 r6087.gates r6068.gates into r6091;
    ternary r6086 r6087.red_ball_1 r6068.red_ball_1 into r6092;
    ternary r6086 r6087.red_ball_2 r6068.red_ball_2 into r6093;
    ternary r6086 r6087.red_ball_3 r6068.red_ball_3 into r6094;
    ternary r6086 r6087.red_ball_4 r6068.red_ball_4 into r6095;
    ternary r6086 r6087.red_ball_5 r6068.red_ball_5 into r6096;
    ternary r6086 r6087.red_ball_6 r6068.red_ball_6 into r6097;
    ternary r6086 r6087.blue_ball_1 r6068.blue_ball_1 into r6098;
    ternary r6086 r6087.reward r6068.reward into r6099;
    ternary r6086 r6087.index r6068.index into r6100;
    cast r6088 r6089 r6090 r6091 r6092 r6093 r6094 r6095 r6096 r6097 r6098 r6099 r6100 into r6101 as TicketPurchasePriceInfo;
    ternary r6084 r6082.user r6101.user into r6102;
    ternary r6084 r6082.round_number r6101.round_number into r6103;
    ternary r6084 r6082.count r6101.count into r6104;
    ternary r6084 r6082.gates r6101.gates into r6105;
    ternary r6084 r6082.red_ball_1 r6101.red_ball_1 into r6106;
    ternary r6084 r6082.red_ball_2 r6101.red_ball_2 into r6107;
    ternary r6084 r6082.red_ball_3 r6101.red_ball_3 into r6108;
    ternary r6084 r6082.red_ball_4 r6101.red_ball_4 into r6109;
    ternary r6084 r6082.red_ball_5 r6101.red_ball_5 into r6110;
    ternary r6084 r6082.red_ball_6 r6101.red_ball_6 into r6111;
    ternary r6084 r6082.blue_ball_1 r6101.blue_ball_1 into r6112;
    ternary r6084 r6082.reward r6101.reward into r6113;
    ternary r6084 r6082.index r6101.index into r6114;
    cast r6102 r6103 r6104 r6105 r6106 r6107 r6108 r6109 r6110 r6111 r6112 r6113 r6114 into r6115 as TicketPurchasePriceInfo;
    ternary r6084 r6085.user r6082.user into r6116;
    ternary r6084 r6085.round_number r6082.round_number into r6117;
    ternary r6084 r6085.count r6082.count into r6118;
    ternary r6084 r6085.gates r6082.gates into r6119;
    ternary r6084 r6085.red_ball_1 r6082.red_ball_1 into r6120;
    ternary r6084 r6085.red_ball_2 r6082.red_ball_2 into r6121;
    ternary r6084 r6085.red_ball_3 r6082.red_ball_3 into r6122;
    ternary r6084 r6085.red_ball_4 r6082.red_ball_4 into r6123;
    ternary r6084 r6085.red_ball_5 r6082.red_ball_5 into r6124;
    ternary r6084 r6085.red_ball_6 r6082.red_ball_6 into r6125;
    ternary r6084 r6085.blue_ball_1 r6082.blue_ball_1 into r6126;
    ternary r6084 r6085.reward r6082.reward into r6127;
    ternary r6084 r6085.index r6082.index into r6128;
    cast r6116 r6117 r6118 r6119 r6120 r6121 r6122 r6123 r6124 r6125 r6126 r6127 r6128 into r6129 as TicketPurchasePriceInfo;
    ternary r6083 r6115.user r6068.user into r6130;
    ternary r6083 r6115.round_number r6068.round_number into r6131;
    ternary r6083 r6115.count r6068.count into r6132;
    ternary r6083 r6115.gates r6068.gates into r6133;
    ternary r6083 r6115.red_ball_1 r6068.red_ball_1 into r6134;
    ternary r6083 r6115.red_ball_2 r6068.red_ball_2 into r6135;
    ternary r6083 r6115.red_ball_3 r6068.red_ball_3 into r6136;
    ternary r6083 r6115.red_ball_4 r6068.red_ball_4 into r6137;
    ternary r6083 r6115.red_ball_5 r6068.red_ball_5 into r6138;
    ternary r6083 r6115.red_ball_6 r6068.red_ball_6 into r6139;
    ternary r6083 r6115.blue_ball_1 r6068.blue_ball_1 into r6140;
    ternary r6083 r6115.reward r6068.reward into r6141;
    ternary r6083 r6115.index r6068.index into r6142;
    cast r6130 r6131 r6132 r6133 r6134 r6135 r6136 r6137 r6138 r6139 r6140 r6141 r6142 into r6143 as TicketPurchasePriceInfo;
    ternary r6083 r6129.user r6082.user into r6144;
    ternary r6083 r6129.round_number r6082.round_number into r6145;
    ternary r6083 r6129.count r6082.count into r6146;
    ternary r6083 r6129.gates r6082.gates into r6147;
    ternary r6083 r6129.red_ball_1 r6082.red_ball_1 into r6148;
    ternary r6083 r6129.red_ball_2 r6082.red_ball_2 into r6149;
    ternary r6083 r6129.red_ball_3 r6082.red_ball_3 into r6150;
    ternary r6083 r6129.red_ball_4 r6082.red_ball_4 into r6151;
    ternary r6083 r6129.red_ball_5 r6082.red_ball_5 into r6152;
    ternary r6083 r6129.red_ball_6 r6082.red_ball_6 into r6153;
    ternary r6083 r6129.blue_ball_1 r6082.blue_ball_1 into r6154;
    ternary r6083 r6129.reward r6082.reward into r6155;
    ternary r6083 r6129.index r6082.index into r6156;
    cast r6144 r6145 r6146 r6147 r6148 r6149 r6150 r6151 r6152 r6153 r6154 r6155 r6156 into r6157 as TicketPurchasePriceInfo;
    ternary r5800 r6054.user r5767.user into r6158;
    ternary r5800 r6054.round_number r5767.round_number into r6159;
    ternary r5800 r6054.count r5767.count into r6160;
    ternary r5800 r6054.gates r5767.gates into r6161;
    ternary r5800 r6054.red_ball_1 r5767.red_ball_1 into r6162;
    ternary r5800 r6054.red_ball_2 r5767.red_ball_2 into r6163;
    ternary r5800 r6054.red_ball_3 r5767.red_ball_3 into r6164;
    ternary r5800 r6054.red_ball_4 r5767.red_ball_4 into r6165;
    ternary r5800 r6054.red_ball_5 r5767.red_ball_5 into r6166;
    ternary r5800 r6054.red_ball_6 r5767.red_ball_6 into r6167;
    ternary r5800 r6054.blue_ball_1 r5767.blue_ball_1 into r6168;
    ternary r5800 r6054.reward r5767.reward into r6169;
    ternary r5800 r6054.index r5767.index into r6170;
    cast r6158 r6159 r6160 r6161 r6162 r6163 r6164 r6165 r6166 r6167 r6168 r6169 r6170 into r6171 as TicketPurchasePriceInfo;
    ternary r5800 r6143.user r5781.user into r6172;
    ternary r5800 r6143.round_number r5781.round_number into r6173;
    ternary r5800 r6143.count r5781.count into r6174;
    ternary r5800 r6143.gates r5781.gates into r6175;
    ternary r5800 r6143.red_ball_1 r5781.red_ball_1 into r6176;
    ternary r5800 r6143.red_ball_2 r5781.red_ball_2 into r6177;
    ternary r5800 r6143.red_ball_3 r5781.red_ball_3 into r6178;
    ternary r5800 r6143.red_ball_4 r5781.red_ball_4 into r6179;
    ternary r5800 r6143.red_ball_5 r5781.red_ball_5 into r6180;
    ternary r5800 r6143.red_ball_6 r5781.red_ball_6 into r6181;
    ternary r5800 r6143.blue_ball_1 r5781.blue_ball_1 into r6182;
    ternary r5800 r6143.reward r5781.reward into r6183;
    ternary r5800 r6143.index r5781.index into r6184;
    cast r6172 r6173 r6174 r6175 r6176 r6177 r6178 r6179 r6180 r6181 r6182 r6183 r6184 into r6185 as TicketPurchasePriceInfo;
    ternary r5800 r6157.user r5795.user into r6186;
    ternary r5800 r6157.round_number r5795.round_number into r6187;
    ternary r5800 r6157.count r5795.count into r6188;
    ternary r5800 r6157.gates r5795.gates into r6189;
    ternary r5800 r6157.red_ball_1 r5795.red_ball_1 into r6190;
    ternary r5800 r6157.red_ball_2 r5795.red_ball_2 into r6191;
    ternary r5800 r6157.red_ball_3 r5795.red_ball_3 into r6192;
    ternary r5800 r6157.red_ball_4 r5795.red_ball_4 into r6193;
    ternary r5800 r6157.red_ball_5 r5795.red_ball_5 into r6194;
    ternary r5800 r6157.red_ball_6 r5795.red_ball_6 into r6195;
    ternary r5800 r6157.blue_ball_1 r5795.blue_ball_1 into r6196;
    ternary r5800 r6157.reward r5795.reward into r6197;
    ternary r5800 r6157.index r5795.index into r6198;
    cast r6186 r6187 r6188 r6189 r6190 r6191 r6192 r6193 r6194 r6195 r6196 r6197 r6198 into r6199 as TicketPurchasePriceInfo;
    ternary r5798 r6171.user r5767.user into r6200;
    ternary r5798 r6171.round_number r5767.round_number into r6201;
    ternary r5798 r6171.count r5767.count into r6202;
    ternary r5798 r6171.gates r5767.gates into r6203;
    ternary r5798 r6171.red_ball_1 r5767.red_ball_1 into r6204;
    ternary r5798 r6171.red_ball_2 r5767.red_ball_2 into r6205;
    ternary r5798 r6171.red_ball_3 r5767.red_ball_3 into r6206;
    ternary r5798 r6171.red_ball_4 r5767.red_ball_4 into r6207;
    ternary r5798 r6171.red_ball_5 r5767.red_ball_5 into r6208;
    ternary r5798 r6171.red_ball_6 r5767.red_ball_6 into r6209;
    ternary r5798 r6171.blue_ball_1 r5767.blue_ball_1 into r6210;
    ternary r5798 r6171.reward r5767.reward into r6211;
    ternary r5798 r6171.index r5767.index into r6212;
    cast r6200 r6201 r6202 r6203 r6204 r6205 r6206 r6207 r6208 r6209 r6210 r6211 r6212 into r6213 as TicketPurchasePriceInfo;
    ternary r5798 r6185.user r5781.user into r6214;
    ternary r5798 r6185.round_number r5781.round_number into r6215;
    ternary r5798 r6185.count r5781.count into r6216;
    ternary r5798 r6185.gates r5781.gates into r6217;
    ternary r5798 r6185.red_ball_1 r5781.red_ball_1 into r6218;
    ternary r5798 r6185.red_ball_2 r5781.red_ball_2 into r6219;
    ternary r5798 r6185.red_ball_3 r5781.red_ball_3 into r6220;
    ternary r5798 r6185.red_ball_4 r5781.red_ball_4 into r6221;
    ternary r5798 r6185.red_ball_5 r5781.red_ball_5 into r6222;
    ternary r5798 r6185.red_ball_6 r5781.red_ball_6 into r6223;
    ternary r5798 r6185.blue_ball_1 r5781.blue_ball_1 into r6224;
    ternary r5798 r6185.reward r5781.reward into r6225;
    ternary r5798 r6185.index r5781.index into r6226;
    cast r6214 r6215 r6216 r6217 r6218 r6219 r6220 r6221 r6222 r6223 r6224 r6225 r6226 into r6227 as TicketPurchasePriceInfo;
    ternary r5798 r6199.user r5795.user into r6228;
    ternary r5798 r6199.round_number r5795.round_number into r6229;
    ternary r5798 r6199.count r5795.count into r6230;
    ternary r5798 r6199.gates r5795.gates into r6231;
    ternary r5798 r6199.red_ball_1 r5795.red_ball_1 into r6232;
    ternary r5798 r6199.red_ball_2 r5795.red_ball_2 into r6233;
    ternary r5798 r6199.red_ball_3 r5795.red_ball_3 into r6234;
    ternary r5798 r6199.red_ball_4 r5795.red_ball_4 into r6235;
    ternary r5798 r6199.red_ball_5 r5795.red_ball_5 into r6236;
    ternary r5798 r6199.red_ball_6 r5795.red_ball_6 into r6237;
    ternary r5798 r6199.blue_ball_1 r5795.blue_ball_1 into r6238;
    ternary r5798 r6199.reward r5795.reward into r6239;
    ternary r5798 r6199.index r5795.index into r6240;
    cast r6228 r6229 r6230 r6231 r6232 r6233 r6234 r6235 r6236 r6237 r6238 r6239 r6240 into r6241 as TicketPurchasePriceInfo;
    not r4456 into r6242;
    lte 5u32 r2.current_round_num into r6243;
    and r6242 r6243 into r6244;
    get.or_use ticketPurchaseMap[5u32] r4457 into r6245;
    is.neq r6245.round_number 0u32 into r6246;
    is.eq r6245.blue_ball_1 r4453 into r6247;
    is.eq r6245.red_ball_1 r4440 into r6248;
    is.eq r6245.red_ball_1 r4441 into r6249;
    or r6248 r6249 into r6250;
    is.eq r6245.red_ball_1 r4442 into r6251;
    or r6250 r6251 into r6252;
    is.eq r6245.red_ball_1 r4443 into r6253;
    or r6252 r6253 into r6254;
    is.eq r6245.red_ball_1 r4444 into r6255;
    or r6254 r6255 into r6256;
    is.eq r6245.red_ball_1 r4445 into r6257;
    or r6256 r6257 into r6258;
    add 0u8 1u8 into r6259;
    ternary r6258 r6259 0u8 into r6260;
    is.eq r6245.red_ball_2 r4440 into r6261;
    is.eq r6245.red_ball_2 r4441 into r6262;
    or r6261 r6262 into r6263;
    is.eq r6245.red_ball_2 r4442 into r6264;
    or r6263 r6264 into r6265;
    is.eq r6245.red_ball_2 r4443 into r6266;
    or r6265 r6266 into r6267;
    is.eq r6245.red_ball_2 r4444 into r6268;
    or r6267 r6268 into r6269;
    is.eq r6245.red_ball_2 r4445 into r6270;
    or r6269 r6270 into r6271;
    add r6260 1u8 into r6272;
    ternary r6271 r6272 r6260 into r6273;
    is.eq r6245.red_ball_3 r4440 into r6274;
    is.eq r6245.red_ball_3 r4441 into r6275;
    or r6274 r6275 into r6276;
    is.eq r6245.red_ball_3 r4442 into r6277;
    or r6276 r6277 into r6278;
    is.eq r6245.red_ball_3 r4443 into r6279;
    or r6278 r6279 into r6280;
    is.eq r6245.red_ball_3 r4444 into r6281;
    or r6280 r6281 into r6282;
    is.eq r6245.red_ball_3 r4445 into r6283;
    or r6282 r6283 into r6284;
    add r6273 1u8 into r6285;
    ternary r6284 r6285 r6273 into r6286;
    is.eq r6245.red_ball_4 r4440 into r6287;
    is.eq r6245.red_ball_4 r4441 into r6288;
    or r6287 r6288 into r6289;
    is.eq r6245.red_ball_4 r4442 into r6290;
    or r6289 r6290 into r6291;
    is.eq r6245.red_ball_4 r4443 into r6292;
    or r6291 r6292 into r6293;
    is.eq r6245.red_ball_4 r4444 into r6294;
    or r6293 r6294 into r6295;
    is.eq r6245.red_ball_4 r4445 into r6296;
    or r6295 r6296 into r6297;
    add r6286 1u8 into r6298;
    ternary r6297 r6298 r6286 into r6299;
    is.eq r6245.red_ball_5 r4440 into r6300;
    is.eq r6245.red_ball_5 r4441 into r6301;
    or r6300 r6301 into r6302;
    is.eq r6245.red_ball_5 r4442 into r6303;
    or r6302 r6303 into r6304;
    is.eq r6245.red_ball_5 r4443 into r6305;
    or r6304 r6305 into r6306;
    is.eq r6245.red_ball_5 r4444 into r6307;
    or r6306 r6307 into r6308;
    is.eq r6245.red_ball_5 r4445 into r6309;
    or r6308 r6309 into r6310;
    add r6299 1u8 into r6311;
    ternary r6310 r6311 r6299 into r6312;
    is.eq r6245.red_ball_6 r4440 into r6313;
    is.eq r6245.red_ball_6 r4441 into r6314;
    or r6313 r6314 into r6315;
    is.eq r6245.red_ball_6 r4442 into r6316;
    or r6315 r6316 into r6317;
    is.eq r6245.red_ball_6 r4443 into r6318;
    or r6317 r6318 into r6319;
    is.eq r6245.red_ball_6 r4444 into r6320;
    or r6319 r6320 into r6321;
    is.eq r6245.red_ball_6 r4445 into r6322;
    or r6321 r6322 into r6323;
    add r6312 1u8 into r6324;
    ternary r6323 r6324 r6312 into r6325;
    gte r6325 3u8 into r6326;
    gte r6325 1u8 into r6327;
    ternary r6327 2u8 0u8 into r6328;
    ternary r6326 1u8 r6328 into r6329;
    is.eq r6245.red_ball_1 r4440 into r6330;
    is.eq r6245.red_ball_1 r4441 into r6331;
    or r6330 r6331 into r6332;
    is.eq r6245.red_ball_1 r4442 into r6333;
    or r6332 r6333 into r6334;
    is.eq r6245.red_ball_1 r4443 into r6335;
    or r6334 r6335 into r6336;
    is.eq r6245.red_ball_1 r4444 into r6337;
    or r6336 r6337 into r6338;
    is.eq r6245.red_ball_1 r4445 into r6339;
    or r6338 r6339 into r6340;
    add 0u8 1u8 into r6341;
    ternary r6340 r6341 0u8 into r6342;
    is.eq r6245.red_ball_2 r4440 into r6343;
    is.eq r6245.red_ball_2 r4441 into r6344;
    or r6343 r6344 into r6345;
    is.eq r6245.red_ball_2 r4442 into r6346;
    or r6345 r6346 into r6347;
    is.eq r6245.red_ball_2 r4443 into r6348;
    or r6347 r6348 into r6349;
    is.eq r6245.red_ball_2 r4444 into r6350;
    or r6349 r6350 into r6351;
    is.eq r6245.red_ball_2 r4445 into r6352;
    or r6351 r6352 into r6353;
    add r6342 1u8 into r6354;
    ternary r6353 r6354 r6342 into r6355;
    is.eq r6245.red_ball_3 r4440 into r6356;
    is.eq r6245.red_ball_3 r4441 into r6357;
    or r6356 r6357 into r6358;
    is.eq r6245.red_ball_3 r4442 into r6359;
    or r6358 r6359 into r6360;
    is.eq r6245.red_ball_3 r4443 into r6361;
    or r6360 r6361 into r6362;
    is.eq r6245.red_ball_3 r4444 into r6363;
    or r6362 r6363 into r6364;
    is.eq r6245.red_ball_3 r4445 into r6365;
    or r6364 r6365 into r6366;
    add r6355 1u8 into r6367;
    ternary r6366 r6367 r6355 into r6368;
    is.eq r6245.red_ball_4 r4440 into r6369;
    is.eq r6245.red_ball_4 r4441 into r6370;
    or r6369 r6370 into r6371;
    is.eq r6245.red_ball_4 r4442 into r6372;
    or r6371 r6372 into r6373;
    is.eq r6245.red_ball_4 r4443 into r6374;
    or r6373 r6374 into r6375;
    is.eq r6245.red_ball_4 r4444 into r6376;
    or r6375 r6376 into r6377;
    is.eq r6245.red_ball_4 r4445 into r6378;
    or r6377 r6378 into r6379;
    add r6368 1u8 into r6380;
    ternary r6379 r6380 r6368 into r6381;
    is.eq r6245.red_ball_5 r4440 into r6382;
    is.eq r6245.red_ball_5 r4441 into r6383;
    or r6382 r6383 into r6384;
    is.eq r6245.red_ball_5 r4442 into r6385;
    or r6384 r6385 into r6386;
    is.eq r6245.red_ball_5 r4443 into r6387;
    or r6386 r6387 into r6388;
    is.eq r6245.red_ball_5 r4444 into r6389;
    or r6388 r6389 into r6390;
    is.eq r6245.red_ball_5 r4445 into r6391;
    or r6390 r6391 into r6392;
    add r6381 1u8 into r6393;
    ternary r6392 r6393 r6381 into r6394;
    is.eq r6245.red_ball_6 r4440 into r6395;
    is.eq r6245.red_ball_6 r4441 into r6396;
    or r6395 r6396 into r6397;
    is.eq r6245.red_ball_6 r4442 into r6398;
    or r6397 r6398 into r6399;
    is.eq r6245.red_ball_6 r4443 into r6400;
    or r6399 r6400 into r6401;
    is.eq r6245.red_ball_6 r4444 into r6402;
    or r6401 r6402 into r6403;
    is.eq r6245.red_ball_6 r4445 into r6404;
    or r6403 r6404 into r6405;
    add r6394 1u8 into r6406;
    ternary r6405 r6406 r6394 into r6407;
    gte r6407 3u8 into r6408;
    ternary r6408 2u8 0u8 into r6409;
    ternary r6247 r6325 r6407 into r6410;
    ternary r6247 r6329 r6409 into r6411;
    is.eq r6411 1u8 into r6412;
    gt r6213.index 1u32 into r6413;
    cast r6245.user r6245.round_number r6245.count r6245.gates r6245.red_ball_1 r6245.red_ball_2 r6245.red_ball_3 r6245.red_ball_4 r6245.red_ball_5 r6245.red_ball_6 r6245.blue_ball_1 0u64 1u32 into r6414 as TicketPurchasePriceInfo;
    gt r6241.index 1u32 into r6415;
    cast r6245.user r6245.round_number r6245.count r6245.gates r6245.red_ball_1 r6245.red_ball_2 r6245.red_ball_3 r6245.red_ball_4 r6245.red_ball_5 r6245.red_ball_6 r6245.blue_ball_1 0u64 1u32 into r6416 as TicketPurchasePriceInfo;
    ternary r6415 r6241.user r6227.user into r6417;
    ternary r6415 r6241.round_number r6227.round_number into r6418;
    ternary r6415 r6241.count r6227.count into r6419;
    ternary r6415 r6241.gates r6227.gates into r6420;
    ternary r6415 r6241.red_ball_1 r6227.red_ball_1 into r6421;
    ternary r6415 r6241.red_ball_2 r6227.red_ball_2 into r6422;
    ternary r6415 r6241.red_ball_3 r6227.red_ball_3 into r6423;
    ternary r6415 r6241.red_ball_4 r6227.red_ball_4 into r6424;
    ternary r6415 r6241.red_ball_5 r6227.red_ball_5 into r6425;
    ternary r6415 r6241.red_ball_6 r6227.red_ball_6 into r6426;
    ternary r6415 r6241.blue_ball_1 r6227.blue_ball_1 into r6427;
    ternary r6415 r6241.reward r6227.reward into r6428;
    ternary r6415 r6241.index r6227.index into r6429;
    cast r6417 r6418 r6419 r6420 r6421 r6422 r6423 r6424 r6425 r6426 r6427 r6428 r6429 into r6430 as TicketPurchasePriceInfo;
    ternary r6415 r6416.user r6241.user into r6431;
    ternary r6415 r6416.round_number r6241.round_number into r6432;
    ternary r6415 r6416.count r6241.count into r6433;
    ternary r6415 r6416.gates r6241.gates into r6434;
    ternary r6415 r6416.red_ball_1 r6241.red_ball_1 into r6435;
    ternary r6415 r6416.red_ball_2 r6241.red_ball_2 into r6436;
    ternary r6415 r6416.red_ball_3 r6241.red_ball_3 into r6437;
    ternary r6415 r6416.red_ball_4 r6241.red_ball_4 into r6438;
    ternary r6415 r6416.red_ball_5 r6241.red_ball_5 into r6439;
    ternary r6415 r6416.red_ball_6 r6241.red_ball_6 into r6440;
    ternary r6415 r6416.blue_ball_1 r6241.blue_ball_1 into r6441;
    ternary r6415 r6416.reward r6241.reward into r6442;
    ternary r6415 r6416.index r6241.index into r6443;
    cast r6431 r6432 r6433 r6434 r6435 r6436 r6437 r6438 r6439 r6440 r6441 r6442 r6443 into r6444 as TicketPurchasePriceInfo;
    ternary r6413 r6414.user r6213.user into r6445;
    ternary r6413 r6414.round_number r6213.round_number into r6446;
    ternary r6413 r6414.count r6213.count into r6447;
    ternary r6413 r6414.gates r6213.gates into r6448;
    ternary r6413 r6414.red_ball_1 r6213.red_ball_1 into r6449;
    ternary r6413 r6414.red_ball_2 r6213.red_ball_2 into r6450;
    ternary r6413 r6414.red_ball_3 r6213.red_ball_3 into r6451;
    ternary r6413 r6414.red_ball_4 r6213.red_ball_4 into r6452;
    ternary r6413 r6414.red_ball_5 r6213.red_ball_5 into r6453;
    ternary r6413 r6414.red_ball_6 r6213.red_ball_6 into r6454;
    ternary r6413 r6414.blue_ball_1 r6213.blue_ball_1 into r6455;
    ternary r6413 r6414.reward r6213.reward into r6456;
    ternary r6413 r6414.index r6213.index into r6457;
    cast r6445 r6446 r6447 r6448 r6449 r6450 r6451 r6452 r6453 r6454 r6455 r6456 r6457 into r6458 as TicketPurchasePriceInfo;
    ternary r6413 r6227.user r6430.user into r6459;
    ternary r6413 r6227.round_number r6430.round_number into r6460;
    ternary r6413 r6227.count r6430.count into r6461;
    ternary r6413 r6227.gates r6430.gates into r6462;
    ternary r6413 r6227.red_ball_1 r6430.red_ball_1 into r6463;
    ternary r6413 r6227.red_ball_2 r6430.red_ball_2 into r6464;
    ternary r6413 r6227.red_ball_3 r6430.red_ball_3 into r6465;
    ternary r6413 r6227.red_ball_4 r6430.red_ball_4 into r6466;
    ternary r6413 r6227.red_ball_5 r6430.red_ball_5 into r6467;
    ternary r6413 r6227.red_ball_6 r6430.red_ball_6 into r6468;
    ternary r6413 r6227.blue_ball_1 r6430.blue_ball_1 into r6469;
    ternary r6413 r6227.reward r6430.reward into r6470;
    ternary r6413 r6227.index r6430.index into r6471;
    cast r6459 r6460 r6461 r6462 r6463 r6464 r6465 r6466 r6467 r6468 r6469 r6470 r6471 into r6472 as TicketPurchasePriceInfo;
    ternary r6413 r6241.user r6444.user into r6473;
    ternary r6413 r6241.round_number r6444.round_number into r6474;
    ternary r6413 r6241.count r6444.count into r6475;
    ternary r6413 r6241.gates r6444.gates into r6476;
    ternary r6413 r6241.red_ball_1 r6444.red_ball_1 into r6477;
    ternary r6413 r6241.red_ball_2 r6444.red_ball_2 into r6478;
    ternary r6413 r6241.red_ball_3 r6444.red_ball_3 into r6479;
    ternary r6413 r6241.red_ball_4 r6444.red_ball_4 into r6480;
    ternary r6413 r6241.red_ball_5 r6444.red_ball_5 into r6481;
    ternary r6413 r6241.red_ball_6 r6444.red_ball_6 into r6482;
    ternary r6413 r6241.blue_ball_1 r6444.blue_ball_1 into r6483;
    ternary r6413 r6241.reward r6444.reward into r6484;
    ternary r6413 r6241.index r6444.index into r6485;
    cast r6473 r6474 r6475 r6476 r6477 r6478 r6479 r6480 r6481 r6482 r6483 r6484 r6485 into r6486 as TicketPurchasePriceInfo;
    ternary r6412 r6458.user r6213.user into r6487;
    ternary r6412 r6458.round_number r6213.round_number into r6488;
    ternary r6412 r6458.count r6213.count into r6489;
    ternary r6412 r6458.gates r6213.gates into r6490;
    ternary r6412 r6458.red_ball_1 r6213.red_ball_1 into r6491;
    ternary r6412 r6458.red_ball_2 r6213.red_ball_2 into r6492;
    ternary r6412 r6458.red_ball_3 r6213.red_ball_3 into r6493;
    ternary r6412 r6458.red_ball_4 r6213.red_ball_4 into r6494;
    ternary r6412 r6458.red_ball_5 r6213.red_ball_5 into r6495;
    ternary r6412 r6458.red_ball_6 r6213.red_ball_6 into r6496;
    ternary r6412 r6458.blue_ball_1 r6213.blue_ball_1 into r6497;
    ternary r6412 r6458.reward r6213.reward into r6498;
    ternary r6412 r6458.index r6213.index into r6499;
    cast r6487 r6488 r6489 r6490 r6491 r6492 r6493 r6494 r6495 r6496 r6497 r6498 r6499 into r6500 as TicketPurchasePriceInfo;
    ternary r6412 r6472.user r6227.user into r6501;
    ternary r6412 r6472.round_number r6227.round_number into r6502;
    ternary r6412 r6472.count r6227.count into r6503;
    ternary r6412 r6472.gates r6227.gates into r6504;
    ternary r6412 r6472.red_ball_1 r6227.red_ball_1 into r6505;
    ternary r6412 r6472.red_ball_2 r6227.red_ball_2 into r6506;
    ternary r6412 r6472.red_ball_3 r6227.red_ball_3 into r6507;
    ternary r6412 r6472.red_ball_4 r6227.red_ball_4 into r6508;
    ternary r6412 r6472.red_ball_5 r6227.red_ball_5 into r6509;
    ternary r6412 r6472.red_ball_6 r6227.red_ball_6 into r6510;
    ternary r6412 r6472.blue_ball_1 r6227.blue_ball_1 into r6511;
    ternary r6412 r6472.reward r6227.reward into r6512;
    ternary r6412 r6472.index r6227.index into r6513;
    cast r6501 r6502 r6503 r6504 r6505 r6506 r6507 r6508 r6509 r6510 r6511 r6512 r6513 into r6514 as TicketPurchasePriceInfo;
    ternary r6412 r6486.user r6241.user into r6515;
    ternary r6412 r6486.round_number r6241.round_number into r6516;
    ternary r6412 r6486.count r6241.count into r6517;
    ternary r6412 r6486.gates r6241.gates into r6518;
    ternary r6412 r6486.red_ball_1 r6241.red_ball_1 into r6519;
    ternary r6412 r6486.red_ball_2 r6241.red_ball_2 into r6520;
    ternary r6412 r6486.red_ball_3 r6241.red_ball_3 into r6521;
    ternary r6412 r6486.red_ball_4 r6241.red_ball_4 into r6522;
    ternary r6412 r6486.red_ball_5 r6241.red_ball_5 into r6523;
    ternary r6412 r6486.red_ball_6 r6241.red_ball_6 into r6524;
    ternary r6412 r6486.blue_ball_1 r6241.blue_ball_1 into r6525;
    ternary r6412 r6486.reward r6241.reward into r6526;
    ternary r6412 r6486.index r6241.index into r6527;
    cast r6515 r6516 r6517 r6518 r6519 r6520 r6521 r6522 r6523 r6524 r6525 r6526 r6527 into r6528 as TicketPurchasePriceInfo;
    is.eq r6411 2u8 into r6529;
    gt r6528.index 2u32 into r6530;
    cast r6245.user r6245.round_number r6245.count r6245.gates r6245.red_ball_1 r6245.red_ball_2 r6245.red_ball_3 r6245.red_ball_4 r6245.red_ball_5 r6245.red_ball_6 r6245.blue_ball_1 0u64 2u32 into r6531 as TicketPurchasePriceInfo;
    gt r6514.index 2u32 into r6532;
    cast r6245.user r6245.round_number r6245.count r6245.gates r6245.red_ball_1 r6245.red_ball_2 r6245.red_ball_3 r6245.red_ball_4 r6245.red_ball_5 r6245.red_ball_6 r6245.blue_ball_1 0u64 2u32 into r6533 as TicketPurchasePriceInfo;
    ternary r6532 r6533.user r6514.user into r6534;
    ternary r6532 r6533.round_number r6514.round_number into r6535;
    ternary r6532 r6533.count r6514.count into r6536;
    ternary r6532 r6533.gates r6514.gates into r6537;
    ternary r6532 r6533.red_ball_1 r6514.red_ball_1 into r6538;
    ternary r6532 r6533.red_ball_2 r6514.red_ball_2 into r6539;
    ternary r6532 r6533.red_ball_3 r6514.red_ball_3 into r6540;
    ternary r6532 r6533.red_ball_4 r6514.red_ball_4 into r6541;
    ternary r6532 r6533.red_ball_5 r6514.red_ball_5 into r6542;
    ternary r6532 r6533.red_ball_6 r6514.red_ball_6 into r6543;
    ternary r6532 r6533.blue_ball_1 r6514.blue_ball_1 into r6544;
    ternary r6532 r6533.reward r6514.reward into r6545;
    ternary r6532 r6533.index r6514.index into r6546;
    cast r6534 r6535 r6536 r6537 r6538 r6539 r6540 r6541 r6542 r6543 r6544 r6545 r6546 into r6547 as TicketPurchasePriceInfo;
    ternary r6530 r6528.user r6547.user into r6548;
    ternary r6530 r6528.round_number r6547.round_number into r6549;
    ternary r6530 r6528.count r6547.count into r6550;
    ternary r6530 r6528.gates r6547.gates into r6551;
    ternary r6530 r6528.red_ball_1 r6547.red_ball_1 into r6552;
    ternary r6530 r6528.red_ball_2 r6547.red_ball_2 into r6553;
    ternary r6530 r6528.red_ball_3 r6547.red_ball_3 into r6554;
    ternary r6530 r6528.red_ball_4 r6547.red_ball_4 into r6555;
    ternary r6530 r6528.red_ball_5 r6547.red_ball_5 into r6556;
    ternary r6530 r6528.red_ball_6 r6547.red_ball_6 into r6557;
    ternary r6530 r6528.blue_ball_1 r6547.blue_ball_1 into r6558;
    ternary r6530 r6528.reward r6547.reward into r6559;
    ternary r6530 r6528.index r6547.index into r6560;
    cast r6548 r6549 r6550 r6551 r6552 r6553 r6554 r6555 r6556 r6557 r6558 r6559 r6560 into r6561 as TicketPurchasePriceInfo;
    ternary r6530 r6531.user r6528.user into r6562;
    ternary r6530 r6531.round_number r6528.round_number into r6563;
    ternary r6530 r6531.count r6528.count into r6564;
    ternary r6530 r6531.gates r6528.gates into r6565;
    ternary r6530 r6531.red_ball_1 r6528.red_ball_1 into r6566;
    ternary r6530 r6531.red_ball_2 r6528.red_ball_2 into r6567;
    ternary r6530 r6531.red_ball_3 r6528.red_ball_3 into r6568;
    ternary r6530 r6531.red_ball_4 r6528.red_ball_4 into r6569;
    ternary r6530 r6531.red_ball_5 r6528.red_ball_5 into r6570;
    ternary r6530 r6531.red_ball_6 r6528.red_ball_6 into r6571;
    ternary r6530 r6531.blue_ball_1 r6528.blue_ball_1 into r6572;
    ternary r6530 r6531.reward r6528.reward into r6573;
    ternary r6530 r6531.index r6528.index into r6574;
    cast r6562 r6563 r6564 r6565 r6566 r6567 r6568 r6569 r6570 r6571 r6572 r6573 r6574 into r6575 as TicketPurchasePriceInfo;
    ternary r6529 r6561.user r6514.user into r6576;
    ternary r6529 r6561.round_number r6514.round_number into r6577;
    ternary r6529 r6561.count r6514.count into r6578;
    ternary r6529 r6561.gates r6514.gates into r6579;
    ternary r6529 r6561.red_ball_1 r6514.red_ball_1 into r6580;
    ternary r6529 r6561.red_ball_2 r6514.red_ball_2 into r6581;
    ternary r6529 r6561.red_ball_3 r6514.red_ball_3 into r6582;
    ternary r6529 r6561.red_ball_4 r6514.red_ball_4 into r6583;
    ternary r6529 r6561.red_ball_5 r6514.red_ball_5 into r6584;
    ternary r6529 r6561.red_ball_6 r6514.red_ball_6 into r6585;
    ternary r6529 r6561.blue_ball_1 r6514.blue_ball_1 into r6586;
    ternary r6529 r6561.reward r6514.reward into r6587;
    ternary r6529 r6561.index r6514.index into r6588;
    cast r6576 r6577 r6578 r6579 r6580 r6581 r6582 r6583 r6584 r6585 r6586 r6587 r6588 into r6589 as TicketPurchasePriceInfo;
    ternary r6529 r6575.user r6528.user into r6590;
    ternary r6529 r6575.round_number r6528.round_number into r6591;
    ternary r6529 r6575.count r6528.count into r6592;
    ternary r6529 r6575.gates r6528.gates into r6593;
    ternary r6529 r6575.red_ball_1 r6528.red_ball_1 into r6594;
    ternary r6529 r6575.red_ball_2 r6528.red_ball_2 into r6595;
    ternary r6529 r6575.red_ball_3 r6528.red_ball_3 into r6596;
    ternary r6529 r6575.red_ball_4 r6528.red_ball_4 into r6597;
    ternary r6529 r6575.red_ball_5 r6528.red_ball_5 into r6598;
    ternary r6529 r6575.red_ball_6 r6528.red_ball_6 into r6599;
    ternary r6529 r6575.blue_ball_1 r6528.blue_ball_1 into r6600;
    ternary r6529 r6575.reward r6528.reward into r6601;
    ternary r6529 r6575.index r6528.index into r6602;
    cast r6590 r6591 r6592 r6593 r6594 r6595 r6596 r6597 r6598 r6599 r6600 r6601 r6602 into r6603 as TicketPurchasePriceInfo;
    ternary r6246 r6500.user r6213.user into r6604;
    ternary r6246 r6500.round_number r6213.round_number into r6605;
    ternary r6246 r6500.count r6213.count into r6606;
    ternary r6246 r6500.gates r6213.gates into r6607;
    ternary r6246 r6500.red_ball_1 r6213.red_ball_1 into r6608;
    ternary r6246 r6500.red_ball_2 r6213.red_ball_2 into r6609;
    ternary r6246 r6500.red_ball_3 r6213.red_ball_3 into r6610;
    ternary r6246 r6500.red_ball_4 r6213.red_ball_4 into r6611;
    ternary r6246 r6500.red_ball_5 r6213.red_ball_5 into r6612;
    ternary r6246 r6500.red_ball_6 r6213.red_ball_6 into r6613;
    ternary r6246 r6500.blue_ball_1 r6213.blue_ball_1 into r6614;
    ternary r6246 r6500.reward r6213.reward into r6615;
    ternary r6246 r6500.index r6213.index into r6616;
    cast r6604 r6605 r6606 r6607 r6608 r6609 r6610 r6611 r6612 r6613 r6614 r6615 r6616 into r6617 as TicketPurchasePriceInfo;
    ternary r6246 r6589.user r6227.user into r6618;
    ternary r6246 r6589.round_number r6227.round_number into r6619;
    ternary r6246 r6589.count r6227.count into r6620;
    ternary r6246 r6589.gates r6227.gates into r6621;
    ternary r6246 r6589.red_ball_1 r6227.red_ball_1 into r6622;
    ternary r6246 r6589.red_ball_2 r6227.red_ball_2 into r6623;
    ternary r6246 r6589.red_ball_3 r6227.red_ball_3 into r6624;
    ternary r6246 r6589.red_ball_4 r6227.red_ball_4 into r6625;
    ternary r6246 r6589.red_ball_5 r6227.red_ball_5 into r6626;
    ternary r6246 r6589.red_ball_6 r6227.red_ball_6 into r6627;
    ternary r6246 r6589.blue_ball_1 r6227.blue_ball_1 into r6628;
    ternary r6246 r6589.reward r6227.reward into r6629;
    ternary r6246 r6589.index r6227.index into r6630;
    cast r6618 r6619 r6620 r6621 r6622 r6623 r6624 r6625 r6626 r6627 r6628 r6629 r6630 into r6631 as TicketPurchasePriceInfo;
    ternary r6246 r6603.user r6241.user into r6632;
    ternary r6246 r6603.round_number r6241.round_number into r6633;
    ternary r6246 r6603.count r6241.count into r6634;
    ternary r6246 r6603.gates r6241.gates into r6635;
    ternary r6246 r6603.red_ball_1 r6241.red_ball_1 into r6636;
    ternary r6246 r6603.red_ball_2 r6241.red_ball_2 into r6637;
    ternary r6246 r6603.red_ball_3 r6241.red_ball_3 into r6638;
    ternary r6246 r6603.red_ball_4 r6241.red_ball_4 into r6639;
    ternary r6246 r6603.red_ball_5 r6241.red_ball_5 into r6640;
    ternary r6246 r6603.red_ball_6 r6241.red_ball_6 into r6641;
    ternary r6246 r6603.blue_ball_1 r6241.blue_ball_1 into r6642;
    ternary r6246 r6603.reward r6241.reward into r6643;
    ternary r6246 r6603.index r6241.index into r6644;
    cast r6632 r6633 r6634 r6635 r6636 r6637 r6638 r6639 r6640 r6641 r6642 r6643 r6644 into r6645 as TicketPurchasePriceInfo;
    ternary r6244 r6617.user r6213.user into r6646;
    ternary r6244 r6617.round_number r6213.round_number into r6647;
    ternary r6244 r6617.count r6213.count into r6648;
    ternary r6244 r6617.gates r6213.gates into r6649;
    ternary r6244 r6617.red_ball_1 r6213.red_ball_1 into r6650;
    ternary r6244 r6617.red_ball_2 r6213.red_ball_2 into r6651;
    ternary r6244 r6617.red_ball_3 r6213.red_ball_3 into r6652;
    ternary r6244 r6617.red_ball_4 r6213.red_ball_4 into r6653;
    ternary r6244 r6617.red_ball_5 r6213.red_ball_5 into r6654;
    ternary r6244 r6617.red_ball_6 r6213.red_ball_6 into r6655;
    ternary r6244 r6617.blue_ball_1 r6213.blue_ball_1 into r6656;
    ternary r6244 r6617.reward r6213.reward into r6657;
    ternary r6244 r6617.index r6213.index into r6658;
    cast r6646 r6647 r6648 r6649 r6650 r6651 r6652 r6653 r6654 r6655 r6656 r6657 r6658 into r6659 as TicketPurchasePriceInfo;
    ternary r6244 r6631.user r6227.user into r6660;
    ternary r6244 r6631.round_number r6227.round_number into r6661;
    ternary r6244 r6631.count r6227.count into r6662;
    ternary r6244 r6631.gates r6227.gates into r6663;
    ternary r6244 r6631.red_ball_1 r6227.red_ball_1 into r6664;
    ternary r6244 r6631.red_ball_2 r6227.red_ball_2 into r6665;
    ternary r6244 r6631.red_ball_3 r6227.red_ball_3 into r6666;
    ternary r6244 r6631.red_ball_4 r6227.red_ball_4 into r6667;
    ternary r6244 r6631.red_ball_5 r6227.red_ball_5 into r6668;
    ternary r6244 r6631.red_ball_6 r6227.red_ball_6 into r6669;
    ternary r6244 r6631.blue_ball_1 r6227.blue_ball_1 into r6670;
    ternary r6244 r6631.reward r6227.reward into r6671;
    ternary r6244 r6631.index r6227.index into r6672;
    cast r6660 r6661 r6662 r6663 r6664 r6665 r6666 r6667 r6668 r6669 r6670 r6671 r6672 into r6673 as TicketPurchasePriceInfo;
    ternary r6244 r6645.user r6241.user into r6674;
    ternary r6244 r6645.round_number r6241.round_number into r6675;
    ternary r6244 r6645.count r6241.count into r6676;
    ternary r6244 r6645.gates r6241.gates into r6677;
    ternary r6244 r6645.red_ball_1 r6241.red_ball_1 into r6678;
    ternary r6244 r6645.red_ball_2 r6241.red_ball_2 into r6679;
    ternary r6244 r6645.red_ball_3 r6241.red_ball_3 into r6680;
    ternary r6244 r6645.red_ball_4 r6241.red_ball_4 into r6681;
    ternary r6244 r6645.red_ball_5 r6241.red_ball_5 into r6682;
    ternary r6244 r6645.red_ball_6 r6241.red_ball_6 into r6683;
    ternary r6244 r6645.blue_ball_1 r6241.blue_ball_1 into r6684;
    ternary r6244 r6645.reward r6241.reward into r6685;
    ternary r6244 r6645.index r6241.index into r6686;
    cast r6674 r6675 r6676 r6677 r6678 r6679 r6680 r6681 r6682 r6683 r6684 r6685 r6686 into r6687 as TicketPurchasePriceInfo;
    not r4456 into r6688;
    lte 6u32 r2.current_round_num into r6689;
    and r6688 r6689 into r6690;
    get.or_use ticketPurchaseMap[6u32] r4457 into r6691;
    is.neq r6691.round_number 0u32 into r6692;
    is.eq r6691.blue_ball_1 r4453 into r6693;
    is.eq r6691.red_ball_1 r4440 into r6694;
    is.eq r6691.red_ball_1 r4441 into r6695;
    or r6694 r6695 into r6696;
    is.eq r6691.red_ball_1 r4442 into r6697;
    or r6696 r6697 into r6698;
    is.eq r6691.red_ball_1 r4443 into r6699;
    or r6698 r6699 into r6700;
    is.eq r6691.red_ball_1 r4444 into r6701;
    or r6700 r6701 into r6702;
    is.eq r6691.red_ball_1 r4445 into r6703;
    or r6702 r6703 into r6704;
    add 0u8 1u8 into r6705;
    ternary r6704 r6705 0u8 into r6706;
    is.eq r6691.red_ball_2 r4440 into r6707;
    is.eq r6691.red_ball_2 r4441 into r6708;
    or r6707 r6708 into r6709;
    is.eq r6691.red_ball_2 r4442 into r6710;
    or r6709 r6710 into r6711;
    is.eq r6691.red_ball_2 r4443 into r6712;
    or r6711 r6712 into r6713;
    is.eq r6691.red_ball_2 r4444 into r6714;
    or r6713 r6714 into r6715;
    is.eq r6691.red_ball_2 r4445 into r6716;
    or r6715 r6716 into r6717;
    add r6706 1u8 into r6718;
    ternary r6717 r6718 r6706 into r6719;
    is.eq r6691.red_ball_3 r4440 into r6720;
    is.eq r6691.red_ball_3 r4441 into r6721;
    or r6720 r6721 into r6722;
    is.eq r6691.red_ball_3 r4442 into r6723;
    or r6722 r6723 into r6724;
    is.eq r6691.red_ball_3 r4443 into r6725;
    or r6724 r6725 into r6726;
    is.eq r6691.red_ball_3 r4444 into r6727;
    or r6726 r6727 into r6728;
    is.eq r6691.red_ball_3 r4445 into r6729;
    or r6728 r6729 into r6730;
    add r6719 1u8 into r6731;
    ternary r6730 r6731 r6719 into r6732;
    is.eq r6691.red_ball_4 r4440 into r6733;
    is.eq r6691.red_ball_4 r4441 into r6734;
    or r6733 r6734 into r6735;
    is.eq r6691.red_ball_4 r4442 into r6736;
    or r6735 r6736 into r6737;
    is.eq r6691.red_ball_4 r4443 into r6738;
    or r6737 r6738 into r6739;
    is.eq r6691.red_ball_4 r4444 into r6740;
    or r6739 r6740 into r6741;
    is.eq r6691.red_ball_4 r4445 into r6742;
    or r6741 r6742 into r6743;
    add r6732 1u8 into r6744;
    ternary r6743 r6744 r6732 into r6745;
    is.eq r6691.red_ball_5 r4440 into r6746;
    is.eq r6691.red_ball_5 r4441 into r6747;
    or r6746 r6747 into r6748;
    is.eq r6691.red_ball_5 r4442 into r6749;
    or r6748 r6749 into r6750;
    is.eq r6691.red_ball_5 r4443 into r6751;
    or r6750 r6751 into r6752;
    is.eq r6691.red_ball_5 r4444 into r6753;
    or r6752 r6753 into r6754;
    is.eq r6691.red_ball_5 r4445 into r6755;
    or r6754 r6755 into r6756;
    add r6745 1u8 into r6757;
    ternary r6756 r6757 r6745 into r6758;
    is.eq r6691.red_ball_6 r4440 into r6759;
    is.eq r6691.red_ball_6 r4441 into r6760;
    or r6759 r6760 into r6761;
    is.eq r6691.red_ball_6 r4442 into r6762;
    or r6761 r6762 into r6763;
    is.eq r6691.red_ball_6 r4443 into r6764;
    or r6763 r6764 into r6765;
    is.eq r6691.red_ball_6 r4444 into r6766;
    or r6765 r6766 into r6767;
    is.eq r6691.red_ball_6 r4445 into r6768;
    or r6767 r6768 into r6769;
    add r6758 1u8 into r6770;
    ternary r6769 r6770 r6758 into r6771;
    gte r6771 3u8 into r6772;
    gte r6771 1u8 into r6773;
    ternary r6773 2u8 0u8 into r6774;
    ternary r6772 1u8 r6774 into r6775;
    is.eq r6691.red_ball_1 r4440 into r6776;
    is.eq r6691.red_ball_1 r4441 into r6777;
    or r6776 r6777 into r6778;
    is.eq r6691.red_ball_1 r4442 into r6779;
    or r6778 r6779 into r6780;
    is.eq r6691.red_ball_1 r4443 into r6781;
    or r6780 r6781 into r6782;
    is.eq r6691.red_ball_1 r4444 into r6783;
    or r6782 r6783 into r6784;
    is.eq r6691.red_ball_1 r4445 into r6785;
    or r6784 r6785 into r6786;
    add 0u8 1u8 into r6787;
    ternary r6786 r6787 0u8 into r6788;
    is.eq r6691.red_ball_2 r4440 into r6789;
    is.eq r6691.red_ball_2 r4441 into r6790;
    or r6789 r6790 into r6791;
    is.eq r6691.red_ball_2 r4442 into r6792;
    or r6791 r6792 into r6793;
    is.eq r6691.red_ball_2 r4443 into r6794;
    or r6793 r6794 into r6795;
    is.eq r6691.red_ball_2 r4444 into r6796;
    or r6795 r6796 into r6797;
    is.eq r6691.red_ball_2 r4445 into r6798;
    or r6797 r6798 into r6799;
    add r6788 1u8 into r6800;
    ternary r6799 r6800 r6788 into r6801;
    is.eq r6691.red_ball_3 r4440 into r6802;
    is.eq r6691.red_ball_3 r4441 into r6803;
    or r6802 r6803 into r6804;
    is.eq r6691.red_ball_3 r4442 into r6805;
    or r6804 r6805 into r6806;
    is.eq r6691.red_ball_3 r4443 into r6807;
    or r6806 r6807 into r6808;
    is.eq r6691.red_ball_3 r4444 into r6809;
    or r6808 r6809 into r6810;
    is.eq r6691.red_ball_3 r4445 into r6811;
    or r6810 r6811 into r6812;
    add r6801 1u8 into r6813;
    ternary r6812 r6813 r6801 into r6814;
    is.eq r6691.red_ball_4 r4440 into r6815;
    is.eq r6691.red_ball_4 r4441 into r6816;
    or r6815 r6816 into r6817;
    is.eq r6691.red_ball_4 r4442 into r6818;
    or r6817 r6818 into r6819;
    is.eq r6691.red_ball_4 r4443 into r6820;
    or r6819 r6820 into r6821;
    is.eq r6691.red_ball_4 r4444 into r6822;
    or r6821 r6822 into r6823;
    is.eq r6691.red_ball_4 r4445 into r6824;
    or r6823 r6824 into r6825;
    add r6814 1u8 into r6826;
    ternary r6825 r6826 r6814 into r6827;
    is.eq r6691.red_ball_5 r4440 into r6828;
    is.eq r6691.red_ball_5 r4441 into r6829;
    or r6828 r6829 into r6830;
    is.eq r6691.red_ball_5 r4442 into r6831;
    or r6830 r6831 into r6832;
    is.eq r6691.red_ball_5 r4443 into r6833;
    or r6832 r6833 into r6834;
    is.eq r6691.red_ball_5 r4444 into r6835;
    or r6834 r6835 into r6836;
    is.eq r6691.red_ball_5 r4445 into r6837;
    or r6836 r6837 into r6838;
    add r6827 1u8 into r6839;
    ternary r6838 r6839 r6827 into r6840;
    is.eq r6691.red_ball_6 r4440 into r6841;
    is.eq r6691.red_ball_6 r4441 into r6842;
    or r6841 r6842 into r6843;
    is.eq r6691.red_ball_6 r4442 into r6844;
    or r6843 r6844 into r6845;
    is.eq r6691.red_ball_6 r4443 into r6846;
    or r6845 r6846 into r6847;
    is.eq r6691.red_ball_6 r4444 into r6848;
    or r6847 r6848 into r6849;
    is.eq r6691.red_ball_6 r4445 into r6850;
    or r6849 r6850 into r6851;
    add r6840 1u8 into r6852;
    ternary r6851 r6852 r6840 into r6853;
    gte r6853 3u8 into r6854;
    ternary r6854 2u8 0u8 into r6855;
    ternary r6693 r6771 r6853 into r6856;
    ternary r6693 r6775 r6855 into r6857;
    is.eq r6857 1u8 into r6858;
    gt r6659.index 1u32 into r6859;
    cast r6691.user r6691.round_number r6691.count r6691.gates r6691.red_ball_1 r6691.red_ball_2 r6691.red_ball_3 r6691.red_ball_4 r6691.red_ball_5 r6691.red_ball_6 r6691.blue_ball_1 0u64 1u32 into r6860 as TicketPurchasePriceInfo;
    gt r6687.index 1u32 into r6861;
    cast r6691.user r6691.round_number r6691.count r6691.gates r6691.red_ball_1 r6691.red_ball_2 r6691.red_ball_3 r6691.red_ball_4 r6691.red_ball_5 r6691.red_ball_6 r6691.blue_ball_1 0u64 1u32 into r6862 as TicketPurchasePriceInfo;
    ternary r6861 r6687.user r6673.user into r6863;
    ternary r6861 r6687.round_number r6673.round_number into r6864;
    ternary r6861 r6687.count r6673.count into r6865;
    ternary r6861 r6687.gates r6673.gates into r6866;
    ternary r6861 r6687.red_ball_1 r6673.red_ball_1 into r6867;
    ternary r6861 r6687.red_ball_2 r6673.red_ball_2 into r6868;
    ternary r6861 r6687.red_ball_3 r6673.red_ball_3 into r6869;
    ternary r6861 r6687.red_ball_4 r6673.red_ball_4 into r6870;
    ternary r6861 r6687.red_ball_5 r6673.red_ball_5 into r6871;
    ternary r6861 r6687.red_ball_6 r6673.red_ball_6 into r6872;
    ternary r6861 r6687.blue_ball_1 r6673.blue_ball_1 into r6873;
    ternary r6861 r6687.reward r6673.reward into r6874;
    ternary r6861 r6687.index r6673.index into r6875;
    cast r6863 r6864 r6865 r6866 r6867 r6868 r6869 r6870 r6871 r6872 r6873 r6874 r6875 into r6876 as TicketPurchasePriceInfo;
    ternary r6861 r6862.user r6687.user into r6877;
    ternary r6861 r6862.round_number r6687.round_number into r6878;
    ternary r6861 r6862.count r6687.count into r6879;
    ternary r6861 r6862.gates r6687.gates into r6880;
    ternary r6861 r6862.red_ball_1 r6687.red_ball_1 into r6881;
    ternary r6861 r6862.red_ball_2 r6687.red_ball_2 into r6882;
    ternary r6861 r6862.red_ball_3 r6687.red_ball_3 into r6883;
    ternary r6861 r6862.red_ball_4 r6687.red_ball_4 into r6884;
    ternary r6861 r6862.red_ball_5 r6687.red_ball_5 into r6885;
    ternary r6861 r6862.red_ball_6 r6687.red_ball_6 into r6886;
    ternary r6861 r6862.blue_ball_1 r6687.blue_ball_1 into r6887;
    ternary r6861 r6862.reward r6687.reward into r6888;
    ternary r6861 r6862.index r6687.index into r6889;
    cast r6877 r6878 r6879 r6880 r6881 r6882 r6883 r6884 r6885 r6886 r6887 r6888 r6889 into r6890 as TicketPurchasePriceInfo;
    ternary r6859 r6860.user r6659.user into r6891;
    ternary r6859 r6860.round_number r6659.round_number into r6892;
    ternary r6859 r6860.count r6659.count into r6893;
    ternary r6859 r6860.gates r6659.gates into r6894;
    ternary r6859 r6860.red_ball_1 r6659.red_ball_1 into r6895;
    ternary r6859 r6860.red_ball_2 r6659.red_ball_2 into r6896;
    ternary r6859 r6860.red_ball_3 r6659.red_ball_3 into r6897;
    ternary r6859 r6860.red_ball_4 r6659.red_ball_4 into r6898;
    ternary r6859 r6860.red_ball_5 r6659.red_ball_5 into r6899;
    ternary r6859 r6860.red_ball_6 r6659.red_ball_6 into r6900;
    ternary r6859 r6860.blue_ball_1 r6659.blue_ball_1 into r6901;
    ternary r6859 r6860.reward r6659.reward into r6902;
    ternary r6859 r6860.index r6659.index into r6903;
    cast r6891 r6892 r6893 r6894 r6895 r6896 r6897 r6898 r6899 r6900 r6901 r6902 r6903 into r6904 as TicketPurchasePriceInfo;
    ternary r6859 r6673.user r6876.user into r6905;
    ternary r6859 r6673.round_number r6876.round_number into r6906;
    ternary r6859 r6673.count r6876.count into r6907;
    ternary r6859 r6673.gates r6876.gates into r6908;
    ternary r6859 r6673.red_ball_1 r6876.red_ball_1 into r6909;
    ternary r6859 r6673.red_ball_2 r6876.red_ball_2 into r6910;
    ternary r6859 r6673.red_ball_3 r6876.red_ball_3 into r6911;
    ternary r6859 r6673.red_ball_4 r6876.red_ball_4 into r6912;
    ternary r6859 r6673.red_ball_5 r6876.red_ball_5 into r6913;
    ternary r6859 r6673.red_ball_6 r6876.red_ball_6 into r6914;
    ternary r6859 r6673.blue_ball_1 r6876.blue_ball_1 into r6915;
    ternary r6859 r6673.reward r6876.reward into r6916;
    ternary r6859 r6673.index r6876.index into r6917;
    cast r6905 r6906 r6907 r6908 r6909 r6910 r6911 r6912 r6913 r6914 r6915 r6916 r6917 into r6918 as TicketPurchasePriceInfo;
    ternary r6859 r6687.user r6890.user into r6919;
    ternary r6859 r6687.round_number r6890.round_number into r6920;
    ternary r6859 r6687.count r6890.count into r6921;
    ternary r6859 r6687.gates r6890.gates into r6922;
    ternary r6859 r6687.red_ball_1 r6890.red_ball_1 into r6923;
    ternary r6859 r6687.red_ball_2 r6890.red_ball_2 into r6924;
    ternary r6859 r6687.red_ball_3 r6890.red_ball_3 into r6925;
    ternary r6859 r6687.red_ball_4 r6890.red_ball_4 into r6926;
    ternary r6859 r6687.red_ball_5 r6890.red_ball_5 into r6927;
    ternary r6859 r6687.red_ball_6 r6890.red_ball_6 into r6928;
    ternary r6859 r6687.blue_ball_1 r6890.blue_ball_1 into r6929;
    ternary r6859 r6687.reward r6890.reward into r6930;
    ternary r6859 r6687.index r6890.index into r6931;
    cast r6919 r6920 r6921 r6922 r6923 r6924 r6925 r6926 r6927 r6928 r6929 r6930 r6931 into r6932 as TicketPurchasePriceInfo;
    ternary r6858 r6904.user r6659.user into r6933;
    ternary r6858 r6904.round_number r6659.round_number into r6934;
    ternary r6858 r6904.count r6659.count into r6935;
    ternary r6858 r6904.gates r6659.gates into r6936;
    ternary r6858 r6904.red_ball_1 r6659.red_ball_1 into r6937;
    ternary r6858 r6904.red_ball_2 r6659.red_ball_2 into r6938;
    ternary r6858 r6904.red_ball_3 r6659.red_ball_3 into r6939;
    ternary r6858 r6904.red_ball_4 r6659.red_ball_4 into r6940;
    ternary r6858 r6904.red_ball_5 r6659.red_ball_5 into r6941;
    ternary r6858 r6904.red_ball_6 r6659.red_ball_6 into r6942;
    ternary r6858 r6904.blue_ball_1 r6659.blue_ball_1 into r6943;
    ternary r6858 r6904.reward r6659.reward into r6944;
    ternary r6858 r6904.index r6659.index into r6945;
    cast r6933 r6934 r6935 r6936 r6937 r6938 r6939 r6940 r6941 r6942 r6943 r6944 r6945 into r6946 as TicketPurchasePriceInfo;
    ternary r6858 r6918.user r6673.user into r6947;
    ternary r6858 r6918.round_number r6673.round_number into r6948;
    ternary r6858 r6918.count r6673.count into r6949;
    ternary r6858 r6918.gates r6673.gates into r6950;
    ternary r6858 r6918.red_ball_1 r6673.red_ball_1 into r6951;
    ternary r6858 r6918.red_ball_2 r6673.red_ball_2 into r6952;
    ternary r6858 r6918.red_ball_3 r6673.red_ball_3 into r6953;
    ternary r6858 r6918.red_ball_4 r6673.red_ball_4 into r6954;
    ternary r6858 r6918.red_ball_5 r6673.red_ball_5 into r6955;
    ternary r6858 r6918.red_ball_6 r6673.red_ball_6 into r6956;
    ternary r6858 r6918.blue_ball_1 r6673.blue_ball_1 into r6957;
    ternary r6858 r6918.reward r6673.reward into r6958;
    ternary r6858 r6918.index r6673.index into r6959;
    cast r6947 r6948 r6949 r6950 r6951 r6952 r6953 r6954 r6955 r6956 r6957 r6958 r6959 into r6960 as TicketPurchasePriceInfo;
    ternary r6858 r6932.user r6687.user into r6961;
    ternary r6858 r6932.round_number r6687.round_number into r6962;
    ternary r6858 r6932.count r6687.count into r6963;
    ternary r6858 r6932.gates r6687.gates into r6964;
    ternary r6858 r6932.red_ball_1 r6687.red_ball_1 into r6965;
    ternary r6858 r6932.red_ball_2 r6687.red_ball_2 into r6966;
    ternary r6858 r6932.red_ball_3 r6687.red_ball_3 into r6967;
    ternary r6858 r6932.red_ball_4 r6687.red_ball_4 into r6968;
    ternary r6858 r6932.red_ball_5 r6687.red_ball_5 into r6969;
    ternary r6858 r6932.red_ball_6 r6687.red_ball_6 into r6970;
    ternary r6858 r6932.blue_ball_1 r6687.blue_ball_1 into r6971;
    ternary r6858 r6932.reward r6687.reward into r6972;
    ternary r6858 r6932.index r6687.index into r6973;
    cast r6961 r6962 r6963 r6964 r6965 r6966 r6967 r6968 r6969 r6970 r6971 r6972 r6973 into r6974 as TicketPurchasePriceInfo;
    is.eq r6857 2u8 into r6975;
    gt r6974.index 2u32 into r6976;
    cast r6691.user r6691.round_number r6691.count r6691.gates r6691.red_ball_1 r6691.red_ball_2 r6691.red_ball_3 r6691.red_ball_4 r6691.red_ball_5 r6691.red_ball_6 r6691.blue_ball_1 0u64 2u32 into r6977 as TicketPurchasePriceInfo;
    gt r6960.index 2u32 into r6978;
    cast r6691.user r6691.round_number r6691.count r6691.gates r6691.red_ball_1 r6691.red_ball_2 r6691.red_ball_3 r6691.red_ball_4 r6691.red_ball_5 r6691.red_ball_6 r6691.blue_ball_1 0u64 2u32 into r6979 as TicketPurchasePriceInfo;
    ternary r6978 r6979.user r6960.user into r6980;
    ternary r6978 r6979.round_number r6960.round_number into r6981;
    ternary r6978 r6979.count r6960.count into r6982;
    ternary r6978 r6979.gates r6960.gates into r6983;
    ternary r6978 r6979.red_ball_1 r6960.red_ball_1 into r6984;
    ternary r6978 r6979.red_ball_2 r6960.red_ball_2 into r6985;
    ternary r6978 r6979.red_ball_3 r6960.red_ball_3 into r6986;
    ternary r6978 r6979.red_ball_4 r6960.red_ball_4 into r6987;
    ternary r6978 r6979.red_ball_5 r6960.red_ball_5 into r6988;
    ternary r6978 r6979.red_ball_6 r6960.red_ball_6 into r6989;
    ternary r6978 r6979.blue_ball_1 r6960.blue_ball_1 into r6990;
    ternary r6978 r6979.reward r6960.reward into r6991;
    ternary r6978 r6979.index r6960.index into r6992;
    cast r6980 r6981 r6982 r6983 r6984 r6985 r6986 r6987 r6988 r6989 r6990 r6991 r6992 into r6993 as TicketPurchasePriceInfo;
    ternary r6976 r6974.user r6993.user into r6994;
    ternary r6976 r6974.round_number r6993.round_number into r6995;
    ternary r6976 r6974.count r6993.count into r6996;
    ternary r6976 r6974.gates r6993.gates into r6997;
    ternary r6976 r6974.red_ball_1 r6993.red_ball_1 into r6998;
    ternary r6976 r6974.red_ball_2 r6993.red_ball_2 into r6999;
    ternary r6976 r6974.red_ball_3 r6993.red_ball_3 into r7000;
    ternary r6976 r6974.red_ball_4 r6993.red_ball_4 into r7001;
    ternary r6976 r6974.red_ball_5 r6993.red_ball_5 into r7002;
    ternary r6976 r6974.red_ball_6 r6993.red_ball_6 into r7003;
    ternary r6976 r6974.blue_ball_1 r6993.blue_ball_1 into r7004;
    ternary r6976 r6974.reward r6993.reward into r7005;
    ternary r6976 r6974.index r6993.index into r7006;
    cast r6994 r6995 r6996 r6997 r6998 r6999 r7000 r7001 r7002 r7003 r7004 r7005 r7006 into r7007 as TicketPurchasePriceInfo;
    ternary r6976 r6977.user r6974.user into r7008;
    ternary r6976 r6977.round_number r6974.round_number into r7009;
    ternary r6976 r6977.count r6974.count into r7010;
    ternary r6976 r6977.gates r6974.gates into r7011;
    ternary r6976 r6977.red_ball_1 r6974.red_ball_1 into r7012;
    ternary r6976 r6977.red_ball_2 r6974.red_ball_2 into r7013;
    ternary r6976 r6977.red_ball_3 r6974.red_ball_3 into r7014;
    ternary r6976 r6977.red_ball_4 r6974.red_ball_4 into r7015;
    ternary r6976 r6977.red_ball_5 r6974.red_ball_5 into r7016;
    ternary r6976 r6977.red_ball_6 r6974.red_ball_6 into r7017;
    ternary r6976 r6977.blue_ball_1 r6974.blue_ball_1 into r7018;
    ternary r6976 r6977.reward r6974.reward into r7019;
    ternary r6976 r6977.index r6974.index into r7020;
    cast r7008 r7009 r7010 r7011 r7012 r7013 r7014 r7015 r7016 r7017 r7018 r7019 r7020 into r7021 as TicketPurchasePriceInfo;
    ternary r6975 r7007.user r6960.user into r7022;
    ternary r6975 r7007.round_number r6960.round_number into r7023;
    ternary r6975 r7007.count r6960.count into r7024;
    ternary r6975 r7007.gates r6960.gates into r7025;
    ternary r6975 r7007.red_ball_1 r6960.red_ball_1 into r7026;
    ternary r6975 r7007.red_ball_2 r6960.red_ball_2 into r7027;
    ternary r6975 r7007.red_ball_3 r6960.red_ball_3 into r7028;
    ternary r6975 r7007.red_ball_4 r6960.red_ball_4 into r7029;
    ternary r6975 r7007.red_ball_5 r6960.red_ball_5 into r7030;
    ternary r6975 r7007.red_ball_6 r6960.red_ball_6 into r7031;
    ternary r6975 r7007.blue_ball_1 r6960.blue_ball_1 into r7032;
    ternary r6975 r7007.reward r6960.reward into r7033;
    ternary r6975 r7007.index r6960.index into r7034;
    cast r7022 r7023 r7024 r7025 r7026 r7027 r7028 r7029 r7030 r7031 r7032 r7033 r7034 into r7035 as TicketPurchasePriceInfo;
    ternary r6975 r7021.user r6974.user into r7036;
    ternary r6975 r7021.round_number r6974.round_number into r7037;
    ternary r6975 r7021.count r6974.count into r7038;
    ternary r6975 r7021.gates r6974.gates into r7039;
    ternary r6975 r7021.red_ball_1 r6974.red_ball_1 into r7040;
    ternary r6975 r7021.red_ball_2 r6974.red_ball_2 into r7041;
    ternary r6975 r7021.red_ball_3 r6974.red_ball_3 into r7042;
    ternary r6975 r7021.red_ball_4 r6974.red_ball_4 into r7043;
    ternary r6975 r7021.red_ball_5 r6974.red_ball_5 into r7044;
    ternary r6975 r7021.red_ball_6 r6974.red_ball_6 into r7045;
    ternary r6975 r7021.blue_ball_1 r6974.blue_ball_1 into r7046;
    ternary r6975 r7021.reward r6974.reward into r7047;
    ternary r6975 r7021.index r6974.index into r7048;
    cast r7036 r7037 r7038 r7039 r7040 r7041 r7042 r7043 r7044 r7045 r7046 r7047 r7048 into r7049 as TicketPurchasePriceInfo;
    ternary r6692 r6946.user r6659.user into r7050;
    ternary r6692 r6946.round_number r6659.round_number into r7051;
    ternary r6692 r6946.count r6659.count into r7052;
    ternary r6692 r6946.gates r6659.gates into r7053;
    ternary r6692 r6946.red_ball_1 r6659.red_ball_1 into r7054;
    ternary r6692 r6946.red_ball_2 r6659.red_ball_2 into r7055;
    ternary r6692 r6946.red_ball_3 r6659.red_ball_3 into r7056;
    ternary r6692 r6946.red_ball_4 r6659.red_ball_4 into r7057;
    ternary r6692 r6946.red_ball_5 r6659.red_ball_5 into r7058;
    ternary r6692 r6946.red_ball_6 r6659.red_ball_6 into r7059;
    ternary r6692 r6946.blue_ball_1 r6659.blue_ball_1 into r7060;
    ternary r6692 r6946.reward r6659.reward into r7061;
    ternary r6692 r6946.index r6659.index into r7062;
    cast r7050 r7051 r7052 r7053 r7054 r7055 r7056 r7057 r7058 r7059 r7060 r7061 r7062 into r7063 as TicketPurchasePriceInfo;
    ternary r6692 r7035.user r6673.user into r7064;
    ternary r6692 r7035.round_number r6673.round_number into r7065;
    ternary r6692 r7035.count r6673.count into r7066;
    ternary r6692 r7035.gates r6673.gates into r7067;
    ternary r6692 r7035.red_ball_1 r6673.red_ball_1 into r7068;
    ternary r6692 r7035.red_ball_2 r6673.red_ball_2 into r7069;
    ternary r6692 r7035.red_ball_3 r6673.red_ball_3 into r7070;
    ternary r6692 r7035.red_ball_4 r6673.red_ball_4 into r7071;
    ternary r6692 r7035.red_ball_5 r6673.red_ball_5 into r7072;
    ternary r6692 r7035.red_ball_6 r6673.red_ball_6 into r7073;
    ternary r6692 r7035.blue_ball_1 r6673.blue_ball_1 into r7074;
    ternary r6692 r7035.reward r6673.reward into r7075;
    ternary r6692 r7035.index r6673.index into r7076;
    cast r7064 r7065 r7066 r7067 r7068 r7069 r7070 r7071 r7072 r7073 r7074 r7075 r7076 into r7077 as TicketPurchasePriceInfo;
    ternary r6692 r7049.user r6687.user into r7078;
    ternary r6692 r7049.round_number r6687.round_number into r7079;
    ternary r6692 r7049.count r6687.count into r7080;
    ternary r6692 r7049.gates r6687.gates into r7081;
    ternary r6692 r7049.red_ball_1 r6687.red_ball_1 into r7082;
    ternary r6692 r7049.red_ball_2 r6687.red_ball_2 into r7083;
    ternary r6692 r7049.red_ball_3 r6687.red_ball_3 into r7084;
    ternary r6692 r7049.red_ball_4 r6687.red_ball_4 into r7085;
    ternary r6692 r7049.red_ball_5 r6687.red_ball_5 into r7086;
    ternary r6692 r7049.red_ball_6 r6687.red_ball_6 into r7087;
    ternary r6692 r7049.blue_ball_1 r6687.blue_ball_1 into r7088;
    ternary r6692 r7049.reward r6687.reward into r7089;
    ternary r6692 r7049.index r6687.index into r7090;
    cast r7078 r7079 r7080 r7081 r7082 r7083 r7084 r7085 r7086 r7087 r7088 r7089 r7090 into r7091 as TicketPurchasePriceInfo;
    ternary r6690 r7063.user r6659.user into r7092;
    ternary r6690 r7063.round_number r6659.round_number into r7093;
    ternary r6690 r7063.count r6659.count into r7094;
    ternary r6690 r7063.gates r6659.gates into r7095;
    ternary r6690 r7063.red_ball_1 r6659.red_ball_1 into r7096;
    ternary r6690 r7063.red_ball_2 r6659.red_ball_2 into r7097;
    ternary r6690 r7063.red_ball_3 r6659.red_ball_3 into r7098;
    ternary r6690 r7063.red_ball_4 r6659.red_ball_4 into r7099;
    ternary r6690 r7063.red_ball_5 r6659.red_ball_5 into r7100;
    ternary r6690 r7063.red_ball_6 r6659.red_ball_6 into r7101;
    ternary r6690 r7063.blue_ball_1 r6659.blue_ball_1 into r7102;
    ternary r6690 r7063.reward r6659.reward into r7103;
    ternary r6690 r7063.index r6659.index into r7104;
    cast r7092 r7093 r7094 r7095 r7096 r7097 r7098 r7099 r7100 r7101 r7102 r7103 r7104 into r7105 as TicketPurchasePriceInfo;
    ternary r6690 r7077.user r6673.user into r7106;
    ternary r6690 r7077.round_number r6673.round_number into r7107;
    ternary r6690 r7077.count r6673.count into r7108;
    ternary r6690 r7077.gates r6673.gates into r7109;
    ternary r6690 r7077.red_ball_1 r6673.red_ball_1 into r7110;
    ternary r6690 r7077.red_ball_2 r6673.red_ball_2 into r7111;
    ternary r6690 r7077.red_ball_3 r6673.red_ball_3 into r7112;
    ternary r6690 r7077.red_ball_4 r6673.red_ball_4 into r7113;
    ternary r6690 r7077.red_ball_5 r6673.red_ball_5 into r7114;
    ternary r6690 r7077.red_ball_6 r6673.red_ball_6 into r7115;
    ternary r6690 r7077.blue_ball_1 r6673.blue_ball_1 into r7116;
    ternary r6690 r7077.reward r6673.reward into r7117;
    ternary r6690 r7077.index r6673.index into r7118;
    cast r7106 r7107 r7108 r7109 r7110 r7111 r7112 r7113 r7114 r7115 r7116 r7117 r7118 into r7119 as TicketPurchasePriceInfo;
    ternary r6690 r7091.user r6687.user into r7120;
    ternary r6690 r7091.round_number r6687.round_number into r7121;
    ternary r6690 r7091.count r6687.count into r7122;
    ternary r6690 r7091.gates r6687.gates into r7123;
    ternary r6690 r7091.red_ball_1 r6687.red_ball_1 into r7124;
    ternary r6690 r7091.red_ball_2 r6687.red_ball_2 into r7125;
    ternary r6690 r7091.red_ball_3 r6687.red_ball_3 into r7126;
    ternary r6690 r7091.red_ball_4 r6687.red_ball_4 into r7127;
    ternary r6690 r7091.red_ball_5 r6687.red_ball_5 into r7128;
    ternary r6690 r7091.red_ball_6 r6687.red_ball_6 into r7129;
    ternary r6690 r7091.blue_ball_1 r6687.blue_ball_1 into r7130;
    ternary r6690 r7091.reward r6687.reward into r7131;
    ternary r6690 r7091.index r6687.index into r7132;
    cast r7120 r7121 r7122 r7123 r7124 r7125 r7126 r7127 r7128 r7129 r7130 r7131 r7132 into r7133 as TicketPurchasePriceInfo;
    not r4456 into r7134;
    lte 7u32 r2.current_round_num into r7135;
    and r7134 r7135 into r7136;
    get.or_use ticketPurchaseMap[7u32] r4457 into r7137;
    is.neq r7137.round_number 0u32 into r7138;
    is.eq r7137.blue_ball_1 r4453 into r7139;
    is.eq r7137.red_ball_1 r4440 into r7140;
    is.eq r7137.red_ball_1 r4441 into r7141;
    or r7140 r7141 into r7142;
    is.eq r7137.red_ball_1 r4442 into r7143;
    or r7142 r7143 into r7144;
    is.eq r7137.red_ball_1 r4443 into r7145;
    or r7144 r7145 into r7146;
    is.eq r7137.red_ball_1 r4444 into r7147;
    or r7146 r7147 into r7148;
    is.eq r7137.red_ball_1 r4445 into r7149;
    or r7148 r7149 into r7150;
    add 0u8 1u8 into r7151;
    ternary r7150 r7151 0u8 into r7152;
    is.eq r7137.red_ball_2 r4440 into r7153;
    is.eq r7137.red_ball_2 r4441 into r7154;
    or r7153 r7154 into r7155;
    is.eq r7137.red_ball_2 r4442 into r7156;
    or r7155 r7156 into r7157;
    is.eq r7137.red_ball_2 r4443 into r7158;
    or r7157 r7158 into r7159;
    is.eq r7137.red_ball_2 r4444 into r7160;
    or r7159 r7160 into r7161;
    is.eq r7137.red_ball_2 r4445 into r7162;
    or r7161 r7162 into r7163;
    add r7152 1u8 into r7164;
    ternary r7163 r7164 r7152 into r7165;
    is.eq r7137.red_ball_3 r4440 into r7166;
    is.eq r7137.red_ball_3 r4441 into r7167;
    or r7166 r7167 into r7168;
    is.eq r7137.red_ball_3 r4442 into r7169;
    or r7168 r7169 into r7170;
    is.eq r7137.red_ball_3 r4443 into r7171;
    or r7170 r7171 into r7172;
    is.eq r7137.red_ball_3 r4444 into r7173;
    or r7172 r7173 into r7174;
    is.eq r7137.red_ball_3 r4445 into r7175;
    or r7174 r7175 into r7176;
    add r7165 1u8 into r7177;
    ternary r7176 r7177 r7165 into r7178;
    is.eq r7137.red_ball_4 r4440 into r7179;
    is.eq r7137.red_ball_4 r4441 into r7180;
    or r7179 r7180 into r7181;
    is.eq r7137.red_ball_4 r4442 into r7182;
    or r7181 r7182 into r7183;
    is.eq r7137.red_ball_4 r4443 into r7184;
    or r7183 r7184 into r7185;
    is.eq r7137.red_ball_4 r4444 into r7186;
    or r7185 r7186 into r7187;
    is.eq r7137.red_ball_4 r4445 into r7188;
    or r7187 r7188 into r7189;
    add r7178 1u8 into r7190;
    ternary r7189 r7190 r7178 into r7191;
    is.eq r7137.red_ball_5 r4440 into r7192;
    is.eq r7137.red_ball_5 r4441 into r7193;
    or r7192 r7193 into r7194;
    is.eq r7137.red_ball_5 r4442 into r7195;
    or r7194 r7195 into r7196;
    is.eq r7137.red_ball_5 r4443 into r7197;
    or r7196 r7197 into r7198;
    is.eq r7137.red_ball_5 r4444 into r7199;
    or r7198 r7199 into r7200;
    is.eq r7137.red_ball_5 r4445 into r7201;
    or r7200 r7201 into r7202;
    add r7191 1u8 into r7203;
    ternary r7202 r7203 r7191 into r7204;
    is.eq r7137.red_ball_6 r4440 into r7205;
    is.eq r7137.red_ball_6 r4441 into r7206;
    or r7205 r7206 into r7207;
    is.eq r7137.red_ball_6 r4442 into r7208;
    or r7207 r7208 into r7209;
    is.eq r7137.red_ball_6 r4443 into r7210;
    or r7209 r7210 into r7211;
    is.eq r7137.red_ball_6 r4444 into r7212;
    or r7211 r7212 into r7213;
    is.eq r7137.red_ball_6 r4445 into r7214;
    or r7213 r7214 into r7215;
    add r7204 1u8 into r7216;
    ternary r7215 r7216 r7204 into r7217;
    gte r7217 3u8 into r7218;
    gte r7217 1u8 into r7219;
    ternary r7219 2u8 0u8 into r7220;
    ternary r7218 1u8 r7220 into r7221;
    is.eq r7137.red_ball_1 r4440 into r7222;
    is.eq r7137.red_ball_1 r4441 into r7223;
    or r7222 r7223 into r7224;
    is.eq r7137.red_ball_1 r4442 into r7225;
    or r7224 r7225 into r7226;
    is.eq r7137.red_ball_1 r4443 into r7227;
    or r7226 r7227 into r7228;
    is.eq r7137.red_ball_1 r4444 into r7229;
    or r7228 r7229 into r7230;
    is.eq r7137.red_ball_1 r4445 into r7231;
    or r7230 r7231 into r7232;
    add 0u8 1u8 into r7233;
    ternary r7232 r7233 0u8 into r7234;
    is.eq r7137.red_ball_2 r4440 into r7235;
    is.eq r7137.red_ball_2 r4441 into r7236;
    or r7235 r7236 into r7237;
    is.eq r7137.red_ball_2 r4442 into r7238;
    or r7237 r7238 into r7239;
    is.eq r7137.red_ball_2 r4443 into r7240;
    or r7239 r7240 into r7241;
    is.eq r7137.red_ball_2 r4444 into r7242;
    or r7241 r7242 into r7243;
    is.eq r7137.red_ball_2 r4445 into r7244;
    or r7243 r7244 into r7245;
    add r7234 1u8 into r7246;
    ternary r7245 r7246 r7234 into r7247;
    is.eq r7137.red_ball_3 r4440 into r7248;
    is.eq r7137.red_ball_3 r4441 into r7249;
    or r7248 r7249 into r7250;
    is.eq r7137.red_ball_3 r4442 into r7251;
    or r7250 r7251 into r7252;
    is.eq r7137.red_ball_3 r4443 into r7253;
    or r7252 r7253 into r7254;
    is.eq r7137.red_ball_3 r4444 into r7255;
    or r7254 r7255 into r7256;
    is.eq r7137.red_ball_3 r4445 into r7257;
    or r7256 r7257 into r7258;
    add r7247 1u8 into r7259;
    ternary r7258 r7259 r7247 into r7260;
    is.eq r7137.red_ball_4 r4440 into r7261;
    is.eq r7137.red_ball_4 r4441 into r7262;
    or r7261 r7262 into r7263;
    is.eq r7137.red_ball_4 r4442 into r7264;
    or r7263 r7264 into r7265;
    is.eq r7137.red_ball_4 r4443 into r7266;
    or r7265 r7266 into r7267;
    is.eq r7137.red_ball_4 r4444 into r7268;
    or r7267 r7268 into r7269;
    is.eq r7137.red_ball_4 r4445 into r7270;
    or r7269 r7270 into r7271;
    add r7260 1u8 into r7272;
    ternary r7271 r7272 r7260 into r7273;
    is.eq r7137.red_ball_5 r4440 into r7274;
    is.eq r7137.red_ball_5 r4441 into r7275;
    or r7274 r7275 into r7276;
    is.eq r7137.red_ball_5 r4442 into r7277;
    or r7276 r7277 into r7278;
    is.eq r7137.red_ball_5 r4443 into r7279;
    or r7278 r7279 into r7280;
    is.eq r7137.red_ball_5 r4444 into r7281;
    or r7280 r7281 into r7282;
    is.eq r7137.red_ball_5 r4445 into r7283;
    or r7282 r7283 into r7284;
    add r7273 1u8 into r7285;
    ternary r7284 r7285 r7273 into r7286;
    is.eq r7137.red_ball_6 r4440 into r7287;
    is.eq r7137.red_ball_6 r4441 into r7288;
    or r7287 r7288 into r7289;
    is.eq r7137.red_ball_6 r4442 into r7290;
    or r7289 r7290 into r7291;
    is.eq r7137.red_ball_6 r4443 into r7292;
    or r7291 r7292 into r7293;
    is.eq r7137.red_ball_6 r4444 into r7294;
    or r7293 r7294 into r7295;
    is.eq r7137.red_ball_6 r4445 into r7296;
    or r7295 r7296 into r7297;
    add r7286 1u8 into r7298;
    ternary r7297 r7298 r7286 into r7299;
    gte r7299 3u8 into r7300;
    ternary r7300 2u8 0u8 into r7301;
    ternary r7139 r7217 r7299 into r7302;
    ternary r7139 r7221 r7301 into r7303;
    is.eq r7303 1u8 into r7304;
    gt r7105.index 1u32 into r7305;
    cast r7137.user r7137.round_number r7137.count r7137.gates r7137.red_ball_1 r7137.red_ball_2 r7137.red_ball_3 r7137.red_ball_4 r7137.red_ball_5 r7137.red_ball_6 r7137.blue_ball_1 0u64 1u32 into r7306 as TicketPurchasePriceInfo;
    gt r7133.index 1u32 into r7307;
    cast r7137.user r7137.round_number r7137.count r7137.gates r7137.red_ball_1 r7137.red_ball_2 r7137.red_ball_3 r7137.red_ball_4 r7137.red_ball_5 r7137.red_ball_6 r7137.blue_ball_1 0u64 1u32 into r7308 as TicketPurchasePriceInfo;
    ternary r7307 r7133.user r7119.user into r7309;
    ternary r7307 r7133.round_number r7119.round_number into r7310;
    ternary r7307 r7133.count r7119.count into r7311;
    ternary r7307 r7133.gates r7119.gates into r7312;
    ternary r7307 r7133.red_ball_1 r7119.red_ball_1 into r7313;
    ternary r7307 r7133.red_ball_2 r7119.red_ball_2 into r7314;
    ternary r7307 r7133.red_ball_3 r7119.red_ball_3 into r7315;
    ternary r7307 r7133.red_ball_4 r7119.red_ball_4 into r7316;
    ternary r7307 r7133.red_ball_5 r7119.red_ball_5 into r7317;
    ternary r7307 r7133.red_ball_6 r7119.red_ball_6 into r7318;
    ternary r7307 r7133.blue_ball_1 r7119.blue_ball_1 into r7319;
    ternary r7307 r7133.reward r7119.reward into r7320;
    ternary r7307 r7133.index r7119.index into r7321;
    cast r7309 r7310 r7311 r7312 r7313 r7314 r7315 r7316 r7317 r7318 r7319 r7320 r7321 into r7322 as TicketPurchasePriceInfo;
    ternary r7307 r7308.user r7133.user into r7323;
    ternary r7307 r7308.round_number r7133.round_number into r7324;
    ternary r7307 r7308.count r7133.count into r7325;
    ternary r7307 r7308.gates r7133.gates into r7326;
    ternary r7307 r7308.red_ball_1 r7133.red_ball_1 into r7327;
    ternary r7307 r7308.red_ball_2 r7133.red_ball_2 into r7328;
    ternary r7307 r7308.red_ball_3 r7133.red_ball_3 into r7329;
    ternary r7307 r7308.red_ball_4 r7133.red_ball_4 into r7330;
    ternary r7307 r7308.red_ball_5 r7133.red_ball_5 into r7331;
    ternary r7307 r7308.red_ball_6 r7133.red_ball_6 into r7332;
    ternary r7307 r7308.blue_ball_1 r7133.blue_ball_1 into r7333;
    ternary r7307 r7308.reward r7133.reward into r7334;
    ternary r7307 r7308.index r7133.index into r7335;
    cast r7323 r7324 r7325 r7326 r7327 r7328 r7329 r7330 r7331 r7332 r7333 r7334 r7335 into r7336 as TicketPurchasePriceInfo;
    ternary r7305 r7306.user r7105.user into r7337;
    ternary r7305 r7306.round_number r7105.round_number into r7338;
    ternary r7305 r7306.count r7105.count into r7339;
    ternary r7305 r7306.gates r7105.gates into r7340;
    ternary r7305 r7306.red_ball_1 r7105.red_ball_1 into r7341;
    ternary r7305 r7306.red_ball_2 r7105.red_ball_2 into r7342;
    ternary r7305 r7306.red_ball_3 r7105.red_ball_3 into r7343;
    ternary r7305 r7306.red_ball_4 r7105.red_ball_4 into r7344;
    ternary r7305 r7306.red_ball_5 r7105.red_ball_5 into r7345;
    ternary r7305 r7306.red_ball_6 r7105.red_ball_6 into r7346;
    ternary r7305 r7306.blue_ball_1 r7105.blue_ball_1 into r7347;
    ternary r7305 r7306.reward r7105.reward into r7348;
    ternary r7305 r7306.index r7105.index into r7349;
    cast r7337 r7338 r7339 r7340 r7341 r7342 r7343 r7344 r7345 r7346 r7347 r7348 r7349 into r7350 as TicketPurchasePriceInfo;
    ternary r7305 r7119.user r7322.user into r7351;
    ternary r7305 r7119.round_number r7322.round_number into r7352;
    ternary r7305 r7119.count r7322.count into r7353;
    ternary r7305 r7119.gates r7322.gates into r7354;
    ternary r7305 r7119.red_ball_1 r7322.red_ball_1 into r7355;
    ternary r7305 r7119.red_ball_2 r7322.red_ball_2 into r7356;
    ternary r7305 r7119.red_ball_3 r7322.red_ball_3 into r7357;
    ternary r7305 r7119.red_ball_4 r7322.red_ball_4 into r7358;
    ternary r7305 r7119.red_ball_5 r7322.red_ball_5 into r7359;
    ternary r7305 r7119.red_ball_6 r7322.red_ball_6 into r7360;
    ternary r7305 r7119.blue_ball_1 r7322.blue_ball_1 into r7361;
    ternary r7305 r7119.reward r7322.reward into r7362;
    ternary r7305 r7119.index r7322.index into r7363;
    cast r7351 r7352 r7353 r7354 r7355 r7356 r7357 r7358 r7359 r7360 r7361 r7362 r7363 into r7364 as TicketPurchasePriceInfo;
    ternary r7305 r7133.user r7336.user into r7365;
    ternary r7305 r7133.round_number r7336.round_number into r7366;
    ternary r7305 r7133.count r7336.count into r7367;
    ternary r7305 r7133.gates r7336.gates into r7368;
    ternary r7305 r7133.red_ball_1 r7336.red_ball_1 into r7369;
    ternary r7305 r7133.red_ball_2 r7336.red_ball_2 into r7370;
    ternary r7305 r7133.red_ball_3 r7336.red_ball_3 into r7371;
    ternary r7305 r7133.red_ball_4 r7336.red_ball_4 into r7372;
    ternary r7305 r7133.red_ball_5 r7336.red_ball_5 into r7373;
    ternary r7305 r7133.red_ball_6 r7336.red_ball_6 into r7374;
    ternary r7305 r7133.blue_ball_1 r7336.blue_ball_1 into r7375;
    ternary r7305 r7133.reward r7336.reward into r7376;
    ternary r7305 r7133.index r7336.index into r7377;
    cast r7365 r7366 r7367 r7368 r7369 r7370 r7371 r7372 r7373 r7374 r7375 r7376 r7377 into r7378 as TicketPurchasePriceInfo;
    ternary r7304 r7350.user r7105.user into r7379;
    ternary r7304 r7350.round_number r7105.round_number into r7380;
    ternary r7304 r7350.count r7105.count into r7381;
    ternary r7304 r7350.gates r7105.gates into r7382;
    ternary r7304 r7350.red_ball_1 r7105.red_ball_1 into r7383;
    ternary r7304 r7350.red_ball_2 r7105.red_ball_2 into r7384;
    ternary r7304 r7350.red_ball_3 r7105.red_ball_3 into r7385;
    ternary r7304 r7350.red_ball_4 r7105.red_ball_4 into r7386;
    ternary r7304 r7350.red_ball_5 r7105.red_ball_5 into r7387;
    ternary r7304 r7350.red_ball_6 r7105.red_ball_6 into r7388;
    ternary r7304 r7350.blue_ball_1 r7105.blue_ball_1 into r7389;
    ternary r7304 r7350.reward r7105.reward into r7390;
    ternary r7304 r7350.index r7105.index into r7391;
    cast r7379 r7380 r7381 r7382 r7383 r7384 r7385 r7386 r7387 r7388 r7389 r7390 r7391 into r7392 as TicketPurchasePriceInfo;
    ternary r7304 r7364.user r7119.user into r7393;
    ternary r7304 r7364.round_number r7119.round_number into r7394;
    ternary r7304 r7364.count r7119.count into r7395;
    ternary r7304 r7364.gates r7119.gates into r7396;
    ternary r7304 r7364.red_ball_1 r7119.red_ball_1 into r7397;
    ternary r7304 r7364.red_ball_2 r7119.red_ball_2 into r7398;
    ternary r7304 r7364.red_ball_3 r7119.red_ball_3 into r7399;
    ternary r7304 r7364.red_ball_4 r7119.red_ball_4 into r7400;
    ternary r7304 r7364.red_ball_5 r7119.red_ball_5 into r7401;
    ternary r7304 r7364.red_ball_6 r7119.red_ball_6 into r7402;
    ternary r7304 r7364.blue_ball_1 r7119.blue_ball_1 into r7403;
    ternary r7304 r7364.reward r7119.reward into r7404;
    ternary r7304 r7364.index r7119.index into r7405;
    cast r7393 r7394 r7395 r7396 r7397 r7398 r7399 r7400 r7401 r7402 r7403 r7404 r7405 into r7406 as TicketPurchasePriceInfo;
    ternary r7304 r7378.user r7133.user into r7407;
    ternary r7304 r7378.round_number r7133.round_number into r7408;
    ternary r7304 r7378.count r7133.count into r7409;
    ternary r7304 r7378.gates r7133.gates into r7410;
    ternary r7304 r7378.red_ball_1 r7133.red_ball_1 into r7411;
    ternary r7304 r7378.red_ball_2 r7133.red_ball_2 into r7412;
    ternary r7304 r7378.red_ball_3 r7133.red_ball_3 into r7413;
    ternary r7304 r7378.red_ball_4 r7133.red_ball_4 into r7414;
    ternary r7304 r7378.red_ball_5 r7133.red_ball_5 into r7415;
    ternary r7304 r7378.red_ball_6 r7133.red_ball_6 into r7416;
    ternary r7304 r7378.blue_ball_1 r7133.blue_ball_1 into r7417;
    ternary r7304 r7378.reward r7133.reward into r7418;
    ternary r7304 r7378.index r7133.index into r7419;
    cast r7407 r7408 r7409 r7410 r7411 r7412 r7413 r7414 r7415 r7416 r7417 r7418 r7419 into r7420 as TicketPurchasePriceInfo;
    is.eq r7303 2u8 into r7421;
    gt r7420.index 2u32 into r7422;
    cast r7137.user r7137.round_number r7137.count r7137.gates r7137.red_ball_1 r7137.red_ball_2 r7137.red_ball_3 r7137.red_ball_4 r7137.red_ball_5 r7137.red_ball_6 r7137.blue_ball_1 0u64 2u32 into r7423 as TicketPurchasePriceInfo;
    gt r7406.index 2u32 into r7424;
    cast r7137.user r7137.round_number r7137.count r7137.gates r7137.red_ball_1 r7137.red_ball_2 r7137.red_ball_3 r7137.red_ball_4 r7137.red_ball_5 r7137.red_ball_6 r7137.blue_ball_1 0u64 2u32 into r7425 as TicketPurchasePriceInfo;
    ternary r7424 r7425.user r7406.user into r7426;
    ternary r7424 r7425.round_number r7406.round_number into r7427;
    ternary r7424 r7425.count r7406.count into r7428;
    ternary r7424 r7425.gates r7406.gates into r7429;
    ternary r7424 r7425.red_ball_1 r7406.red_ball_1 into r7430;
    ternary r7424 r7425.red_ball_2 r7406.red_ball_2 into r7431;
    ternary r7424 r7425.red_ball_3 r7406.red_ball_3 into r7432;
    ternary r7424 r7425.red_ball_4 r7406.red_ball_4 into r7433;
    ternary r7424 r7425.red_ball_5 r7406.red_ball_5 into r7434;
    ternary r7424 r7425.red_ball_6 r7406.red_ball_6 into r7435;
    ternary r7424 r7425.blue_ball_1 r7406.blue_ball_1 into r7436;
    ternary r7424 r7425.reward r7406.reward into r7437;
    ternary r7424 r7425.index r7406.index into r7438;
    cast r7426 r7427 r7428 r7429 r7430 r7431 r7432 r7433 r7434 r7435 r7436 r7437 r7438 into r7439 as TicketPurchasePriceInfo;
    ternary r7422 r7420.user r7439.user into r7440;
    ternary r7422 r7420.round_number r7439.round_number into r7441;
    ternary r7422 r7420.count r7439.count into r7442;
    ternary r7422 r7420.gates r7439.gates into r7443;
    ternary r7422 r7420.red_ball_1 r7439.red_ball_1 into r7444;
    ternary r7422 r7420.red_ball_2 r7439.red_ball_2 into r7445;
    ternary r7422 r7420.red_ball_3 r7439.red_ball_3 into r7446;
    ternary r7422 r7420.red_ball_4 r7439.red_ball_4 into r7447;
    ternary r7422 r7420.red_ball_5 r7439.red_ball_5 into r7448;
    ternary r7422 r7420.red_ball_6 r7439.red_ball_6 into r7449;
    ternary r7422 r7420.blue_ball_1 r7439.blue_ball_1 into r7450;
    ternary r7422 r7420.reward r7439.reward into r7451;
    ternary r7422 r7420.index r7439.index into r7452;
    cast r7440 r7441 r7442 r7443 r7444 r7445 r7446 r7447 r7448 r7449 r7450 r7451 r7452 into r7453 as TicketPurchasePriceInfo;
    ternary r7422 r7423.user r7420.user into r7454;
    ternary r7422 r7423.round_number r7420.round_number into r7455;
    ternary r7422 r7423.count r7420.count into r7456;
    ternary r7422 r7423.gates r7420.gates into r7457;
    ternary r7422 r7423.red_ball_1 r7420.red_ball_1 into r7458;
    ternary r7422 r7423.red_ball_2 r7420.red_ball_2 into r7459;
    ternary r7422 r7423.red_ball_3 r7420.red_ball_3 into r7460;
    ternary r7422 r7423.red_ball_4 r7420.red_ball_4 into r7461;
    ternary r7422 r7423.red_ball_5 r7420.red_ball_5 into r7462;
    ternary r7422 r7423.red_ball_6 r7420.red_ball_6 into r7463;
    ternary r7422 r7423.blue_ball_1 r7420.blue_ball_1 into r7464;
    ternary r7422 r7423.reward r7420.reward into r7465;
    ternary r7422 r7423.index r7420.index into r7466;
    cast r7454 r7455 r7456 r7457 r7458 r7459 r7460 r7461 r7462 r7463 r7464 r7465 r7466 into r7467 as TicketPurchasePriceInfo;
    ternary r7421 r7453.user r7406.user into r7468;
    ternary r7421 r7453.round_number r7406.round_number into r7469;
    ternary r7421 r7453.count r7406.count into r7470;
    ternary r7421 r7453.gates r7406.gates into r7471;
    ternary r7421 r7453.red_ball_1 r7406.red_ball_1 into r7472;
    ternary r7421 r7453.red_ball_2 r7406.red_ball_2 into r7473;
    ternary r7421 r7453.red_ball_3 r7406.red_ball_3 into r7474;
    ternary r7421 r7453.red_ball_4 r7406.red_ball_4 into r7475;
    ternary r7421 r7453.red_ball_5 r7406.red_ball_5 into r7476;
    ternary r7421 r7453.red_ball_6 r7406.red_ball_6 into r7477;
    ternary r7421 r7453.blue_ball_1 r7406.blue_ball_1 into r7478;
    ternary r7421 r7453.reward r7406.reward into r7479;
    ternary r7421 r7453.index r7406.index into r7480;
    cast r7468 r7469 r7470 r7471 r7472 r7473 r7474 r7475 r7476 r7477 r7478 r7479 r7480 into r7481 as TicketPurchasePriceInfo;
    ternary r7421 r7467.user r7420.user into r7482;
    ternary r7421 r7467.round_number r7420.round_number into r7483;
    ternary r7421 r7467.count r7420.count into r7484;
    ternary r7421 r7467.gates r7420.gates into r7485;
    ternary r7421 r7467.red_ball_1 r7420.red_ball_1 into r7486;
    ternary r7421 r7467.red_ball_2 r7420.red_ball_2 into r7487;
    ternary r7421 r7467.red_ball_3 r7420.red_ball_3 into r7488;
    ternary r7421 r7467.red_ball_4 r7420.red_ball_4 into r7489;
    ternary r7421 r7467.red_ball_5 r7420.red_ball_5 into r7490;
    ternary r7421 r7467.red_ball_6 r7420.red_ball_6 into r7491;
    ternary r7421 r7467.blue_ball_1 r7420.blue_ball_1 into r7492;
    ternary r7421 r7467.reward r7420.reward into r7493;
    ternary r7421 r7467.index r7420.index into r7494;
    cast r7482 r7483 r7484 r7485 r7486 r7487 r7488 r7489 r7490 r7491 r7492 r7493 r7494 into r7495 as TicketPurchasePriceInfo;
    ternary r7138 r7392.user r7105.user into r7496;
    ternary r7138 r7392.round_number r7105.round_number into r7497;
    ternary r7138 r7392.count r7105.count into r7498;
    ternary r7138 r7392.gates r7105.gates into r7499;
    ternary r7138 r7392.red_ball_1 r7105.red_ball_1 into r7500;
    ternary r7138 r7392.red_ball_2 r7105.red_ball_2 into r7501;
    ternary r7138 r7392.red_ball_3 r7105.red_ball_3 into r7502;
    ternary r7138 r7392.red_ball_4 r7105.red_ball_4 into r7503;
    ternary r7138 r7392.red_ball_5 r7105.red_ball_5 into r7504;
    ternary r7138 r7392.red_ball_6 r7105.red_ball_6 into r7505;
    ternary r7138 r7392.blue_ball_1 r7105.blue_ball_1 into r7506;
    ternary r7138 r7392.reward r7105.reward into r7507;
    ternary r7138 r7392.index r7105.index into r7508;
    cast r7496 r7497 r7498 r7499 r7500 r7501 r7502 r7503 r7504 r7505 r7506 r7507 r7508 into r7509 as TicketPurchasePriceInfo;
    ternary r7138 r7481.user r7119.user into r7510;
    ternary r7138 r7481.round_number r7119.round_number into r7511;
    ternary r7138 r7481.count r7119.count into r7512;
    ternary r7138 r7481.gates r7119.gates into r7513;
    ternary r7138 r7481.red_ball_1 r7119.red_ball_1 into r7514;
    ternary r7138 r7481.red_ball_2 r7119.red_ball_2 into r7515;
    ternary r7138 r7481.red_ball_3 r7119.red_ball_3 into r7516;
    ternary r7138 r7481.red_ball_4 r7119.red_ball_4 into r7517;
    ternary r7138 r7481.red_ball_5 r7119.red_ball_5 into r7518;
    ternary r7138 r7481.red_ball_6 r7119.red_ball_6 into r7519;
    ternary r7138 r7481.blue_ball_1 r7119.blue_ball_1 into r7520;
    ternary r7138 r7481.reward r7119.reward into r7521;
    ternary r7138 r7481.index r7119.index into r7522;
    cast r7510 r7511 r7512 r7513 r7514 r7515 r7516 r7517 r7518 r7519 r7520 r7521 r7522 into r7523 as TicketPurchasePriceInfo;
    ternary r7138 r7495.user r7133.user into r7524;
    ternary r7138 r7495.round_number r7133.round_number into r7525;
    ternary r7138 r7495.count r7133.count into r7526;
    ternary r7138 r7495.gates r7133.gates into r7527;
    ternary r7138 r7495.red_ball_1 r7133.red_ball_1 into r7528;
    ternary r7138 r7495.red_ball_2 r7133.red_ball_2 into r7529;
    ternary r7138 r7495.red_ball_3 r7133.red_ball_3 into r7530;
    ternary r7138 r7495.red_ball_4 r7133.red_ball_4 into r7531;
    ternary r7138 r7495.red_ball_5 r7133.red_ball_5 into r7532;
    ternary r7138 r7495.red_ball_6 r7133.red_ball_6 into r7533;
    ternary r7138 r7495.blue_ball_1 r7133.blue_ball_1 into r7534;
    ternary r7138 r7495.reward r7133.reward into r7535;
    ternary r7138 r7495.index r7133.index into r7536;
    cast r7524 r7525 r7526 r7527 r7528 r7529 r7530 r7531 r7532 r7533 r7534 r7535 r7536 into r7537 as TicketPurchasePriceInfo;
    ternary r7136 r7509.user r7105.user into r7538;
    ternary r7136 r7509.round_number r7105.round_number into r7539;
    ternary r7136 r7509.count r7105.count into r7540;
    ternary r7136 r7509.gates r7105.gates into r7541;
    ternary r7136 r7509.red_ball_1 r7105.red_ball_1 into r7542;
    ternary r7136 r7509.red_ball_2 r7105.red_ball_2 into r7543;
    ternary r7136 r7509.red_ball_3 r7105.red_ball_3 into r7544;
    ternary r7136 r7509.red_ball_4 r7105.red_ball_4 into r7545;
    ternary r7136 r7509.red_ball_5 r7105.red_ball_5 into r7546;
    ternary r7136 r7509.red_ball_6 r7105.red_ball_6 into r7547;
    ternary r7136 r7509.blue_ball_1 r7105.blue_ball_1 into r7548;
    ternary r7136 r7509.reward r7105.reward into r7549;
    ternary r7136 r7509.index r7105.index into r7550;
    cast r7538 r7539 r7540 r7541 r7542 r7543 r7544 r7545 r7546 r7547 r7548 r7549 r7550 into r7551 as TicketPurchasePriceInfo;
    ternary r7136 r7523.user r7119.user into r7552;
    ternary r7136 r7523.round_number r7119.round_number into r7553;
    ternary r7136 r7523.count r7119.count into r7554;
    ternary r7136 r7523.gates r7119.gates into r7555;
    ternary r7136 r7523.red_ball_1 r7119.red_ball_1 into r7556;
    ternary r7136 r7523.red_ball_2 r7119.red_ball_2 into r7557;
    ternary r7136 r7523.red_ball_3 r7119.red_ball_3 into r7558;
    ternary r7136 r7523.red_ball_4 r7119.red_ball_4 into r7559;
    ternary r7136 r7523.red_ball_5 r7119.red_ball_5 into r7560;
    ternary r7136 r7523.red_ball_6 r7119.red_ball_6 into r7561;
    ternary r7136 r7523.blue_ball_1 r7119.blue_ball_1 into r7562;
    ternary r7136 r7523.reward r7119.reward into r7563;
    ternary r7136 r7523.index r7119.index into r7564;
    cast r7552 r7553 r7554 r7555 r7556 r7557 r7558 r7559 r7560 r7561 r7562 r7563 r7564 into r7565 as TicketPurchasePriceInfo;
    ternary r7136 r7537.user r7133.user into r7566;
    ternary r7136 r7537.round_number r7133.round_number into r7567;
    ternary r7136 r7537.count r7133.count into r7568;
    ternary r7136 r7537.gates r7133.gates into r7569;
    ternary r7136 r7537.red_ball_1 r7133.red_ball_1 into r7570;
    ternary r7136 r7537.red_ball_2 r7133.red_ball_2 into r7571;
    ternary r7136 r7537.red_ball_3 r7133.red_ball_3 into r7572;
    ternary r7136 r7537.red_ball_4 r7133.red_ball_4 into r7573;
    ternary r7136 r7537.red_ball_5 r7133.red_ball_5 into r7574;
    ternary r7136 r7537.red_ball_6 r7133.red_ball_6 into r7575;
    ternary r7136 r7537.blue_ball_1 r7133.blue_ball_1 into r7576;
    ternary r7136 r7537.reward r7133.reward into r7577;
    ternary r7136 r7537.index r7133.index into r7578;
    cast r7566 r7567 r7568 r7569 r7570 r7571 r7572 r7573 r7574 r7575 r7576 r7577 r7578 into r7579 as TicketPurchasePriceInfo;
    div 70u64 100u64 into r7580;
    mul r2.money r7580 into r7581;
    div 80u64 100u64 into r7582;
    mul r7581 r7582 into r7583;
    div 70u64 100u64 into r7584;
    mul r2.money r7584 into r7585;
    div 20u64 100u64 into r7586;
    mul r7585 r7586 into r7587;
    is.eq r7551.index 1u32 into r7588;
    is.eq r7551.index 1u32 into r7589;
    is.eq r7579.index 10u32 into r7590;
    and r7589 r7590 into r7591;
    ternary r7591 r7583 0u64 into r7592;
    is.eq r7551.index 1u32 into r7593;
    is.eq r7579.index 1u32 into r7594;
    and r7593 r7594 into r7595;
    mul r7583 1u64 into r7596;
    div r7596 2u64 into r7597;
    mul r7583 1u64 into r7598;
    div r7598 2u64 into r7599;
    ternary r7595 r7597 r7592 into r7600;
    ternary r7595 r7599 0u64 into r7601;
    is.eq r7551.index 1u32 into r7602;
    is.eq r7579.index 2u32 into r7603;
    and r7602 r7603 into r7604;
    ternary r7604 r7583 r7600 into r7605;
    ternary r7604 r7587 r7601 into r7606;
    is.eq r7579.index 2u32 into r7607;
    is.eq r7579.index 2u32 into r7608;
    is.eq r7565.index 10u32 into r7609;
    and r7608 r7609 into r7610;
    ternary r7610 r7587 0u64 into r7611;
    is.eq r7579.index 2u32 into r7612;
    is.eq r7565.index 2u32 into r7613;
    and r7612 r7613 into r7614;
    mul r7587 1u64 into r7615;
    div r7615 2u64 into r7616;
    mul r7587 1u64 into r7617;
    div r7617 2u64 into r7618;
    ternary r7614 r7616 r7611 into r7619;
    ternary r7614 r7618 0u64 into r7620;
    ternary r7607 r7619 0u64 into r7621;
    ternary r7607 r7620 0u64 into r7622;
    ternary r7588 r7605 0u64 into r7623;
    ternary r7588 r7606 r7621 into r7624;
    ternary r7588 0u64 r7622 into r7625;
    cast r4454 r4454 into r7626 as WiningList;
    is.neq r7551.index 10u32 into r7627;
    cast r7551.user r7551.round_number r7551.count r7551.gates r7551.red_ball_1 r7551.red_ball_2 r7551.red_ball_3 r7551.red_ball_4 r7551.red_ball_5 r7551.red_ball_6 r7551.blue_ball_1 r7623 r7551.index into r7628 as TicketPurchasePriceInfo;
    cast r7579.user r7579.round_number r7579.count r7579.gates r7579.red_ball_1 r7579.red_ball_2 r7579.red_ball_3 r7579.red_ball_4 r7579.red_ball_5 r7579.red_ball_6 r7579.blue_ball_1 r7624 r7579.index into r7629 as TicketPurchasePriceInfo;
    cast r7628 r7629 into r7630 as WiningList;
    set r7630 into winningListMap[r2.current_round_num];
    cast r7579.user r7579.round_number r7579.count r7579.gates r7579.red_ball_1 r7579.red_ball_2 r7579.red_ball_3 r7579.red_ball_4 r7579.red_ball_5 r7579.red_ball_6 r7579.blue_ball_1 r7624 r7579.index into r7631 as TicketPurchasePriceInfo;
    cast r7565.user r7565.round_number r7565.count r7565.gates r7565.red_ball_1 r7565.red_ball_2 r7565.red_ball_3 r7565.red_ball_4 r7565.red_ball_5 r7565.red_ball_6 r7565.blue_ball_1 r7625 r7565.index into r7632 as TicketPurchasePriceInfo;
    cast r7631 r7632 into r7633 as WiningList;
    set r7633 into winningListMap[r2.current_round_num];
    ternary r7627 r7630.first.user r7633.first.user into r7634;
    ternary r7627 r7630.first.round_number r7633.first.round_number into r7635;
    ternary r7627 r7630.first.count r7633.first.count into r7636;
    ternary r7627 r7630.first.gates r7633.first.gates into r7637;
    ternary r7627 r7630.first.red_ball_1 r7633.first.red_ball_1 into r7638;
    ternary r7627 r7630.first.red_ball_2 r7633.first.red_ball_2 into r7639;
    ternary r7627 r7630.first.red_ball_3 r7633.first.red_ball_3 into r7640;
    ternary r7627 r7630.first.red_ball_4 r7633.first.red_ball_4 into r7641;
    ternary r7627 r7630.first.red_ball_5 r7633.first.red_ball_5 into r7642;
    ternary r7627 r7630.first.red_ball_6 r7633.first.red_ball_6 into r7643;
    ternary r7627 r7630.first.blue_ball_1 r7633.first.blue_ball_1 into r7644;
    ternary r7627 r7630.first.reward r7633.first.reward into r7645;
    ternary r7627 r7630.first.index r7633.first.index into r7646;
    cast r7634 r7635 r7636 r7637 r7638 r7639 r7640 r7641 r7642 r7643 r7644 r7645 r7646 into r7647 as TicketPurchasePriceInfo;
    ternary r7627 r7630.second.user r7633.second.user into r7648;
    ternary r7627 r7630.second.round_number r7633.second.round_number into r7649;
    ternary r7627 r7630.second.count r7633.second.count into r7650;
    ternary r7627 r7630.second.gates r7633.second.gates into r7651;
    ternary r7627 r7630.second.red_ball_1 r7633.second.red_ball_1 into r7652;
    ternary r7627 r7630.second.red_ball_2 r7633.second.red_ball_2 into r7653;
    ternary r7627 r7630.second.red_ball_3 r7633.second.red_ball_3 into r7654;
    ternary r7627 r7630.second.red_ball_4 r7633.second.red_ball_4 into r7655;
    ternary r7627 r7630.second.red_ball_5 r7633.second.red_ball_5 into r7656;
    ternary r7627 r7630.second.red_ball_6 r7633.second.red_ball_6 into r7657;
    ternary r7627 r7630.second.blue_ball_1 r7633.second.blue_ball_1 into r7658;
    ternary r7627 r7630.second.reward r7633.second.reward into r7659;
    ternary r7627 r7630.second.index r7633.second.index into r7660;
    cast r7648 r7649 r7650 r7651 r7652 r7653 r7654 r7655 r7656 r7657 r7658 r7659 r7660 into r7661 as TicketPurchasePriceInfo;
    cast r7647 r7661 into r7662 as WiningList;
    sub r2.money r7623 into r7663;
    sub r7663 r7624 into r7664;
    sub r7664 r7625 into r7665;
    cast r7665 r2.current_round 3u8 r2.current_round_num into r7666 as PrizePool;
    set r7666 into currentPrizePoolMap[1u8];
    cast r2.current_round r4440 r4441 r4442 r4443 r4444 r4445 r4453 into r7667 as LotteryDrawing;
    set r7667 into lotteryDrawingMap[r2.current_round];
