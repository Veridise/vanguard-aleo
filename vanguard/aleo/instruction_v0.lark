start: instruction

instruction : ( unary | binary | ternary | is | assert | commit | hash | cast | call ) ";"

unary : unary_op ( operand ) "into" register
unary_op : "abs" | "abs.w" | "double" | "inv" | "neg" | "not" | "square" | "sqrt"
binary : binary_op operand~2 "into" register
binary_op : "add" | "add.w" | "sub" | "sub.w" | "mul" | "mul.w" | "div" | "div.w"
          | "rem" | "rem.w" | "pow" | "pow.w" | "shl" | "shl.w" | "shr" | "shr.w"
          | "mod" | "and" | "or" | "xor" | "nand" | "nor" | "gt" | "gte" | "lt" | "lte"
ternary : ternary_op operand~3 "into" register
ternary_op : "ternary"
is : is_op operand~2 "into" register
is_op : "is.eq" | "is.neq"
assert : assert_op operand~2
assert_op : "assert.eq" | "assert.neq"
commit : commit_op operand~2 "into" register "as" ( address_type | field_type | group_type )
commit_op : "commit.bhp" ( "256" | "512" | "768" | "1024" )
          | "hash.ped" ( "64" | "128" )
          | "hash.psd" ( "2" | "4" | "8" )
          | "hash_many.psd" ( "2" | "4" | "8" )
hash : hash_op operand "into" register "as" ( arithmetic_type | address_type )
hash_op : "hash.bhp" ( "256" | "512" | "768" | "1024" )
        | "hash.ped" ( "64" | "128" )
        | "hash.psd" ( "2" | "4" | "8" )
        | "hash_many.psd" ( "2" | "4" | "8" )
cast : cast_op operand+ "into" register "as" cast_destination
cast_op : "cast"
cast_destination : register_type | "group.x" | "group.y"
call : "call" ( locator | identifier ) operand* "into" register+
operand : literal | "group::GEN" | register_access | program_id
        | "self.caller" | "self.signer" | "block.height"
literal : arithmetic_literal | address_literal | boolean_literal
arithmetic_literal : integer_literal | field_literal | group_literal | scalar_literal
integer_literal : signed_literal | unsigned_literal
signed_literal : [ "-" ] ( digit "_"* )+ signed_type
unsigned_literal : [ "-" ] ( digit "_"* )+ unsigned_type
field_literal : [ "-" ] ( digit "_"* )+ field_type
group_literal : [ "-" ] ( digit "_"* )+ group_type
scalar_literal : [ "-" ] ( digit "_"* )+ scalar_type
address_literal : "aleo1" ( address_char "_"* )+
address_char : "0" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
             | "a" | "c" | "d" | "e" | "f" | "g" | "h" | "j" | "k"
             | "l" | "m" | "n" | "p" | "q" | "r" | "s" | "t" | "u"
             | "v" | "w" | "x" | "y" | "z"
boolean_literal : "true" | "false"
register : "r" digit+
register_access : register ( "." identifier )*
unsigned_type : "u8" | "u16" | "u32" | "u64" | "u128"
signed_type : "i8" | "i16" | "i32" | "i64" | "i128"
integer_type : unsigned_type | signed_type
field_type : "field"
group_type : "group"
scalar_type : "scalar"
arithmetic_type : integer_type | field_type | group_type | scalar_type
address_type : "address"
boolean_type : "boolean"
literal_type : arithmetic_type | address_type | boolean_type
plaintext_type : literal_type | identifier
value_type : plaintext_type ".constant" | plaintext_type ".public"
           | plaintext_type ".private" | identifier ".record" | locator ".record"
finalize_type : plaintext_type ".public" | identifier ".record" | locator ".record"
entry_type : plaintext_type ( ".constant" | ".public" | ".private" )
register_type : locator ".record" | identifier ".record" | plaintext_type
digit : "0".."9"
uppercase_letter : "A".."Z"
lowercase_letter : "a".."z"
letter : uppercase_letter | lowercase_letter
identifier : letter ( letter | digit | "_" )*
lowercase_identifier : lowercase_letter ( lowercase_letter | digit | "_" )*
program_name : lowercase_identifier
program_domain : lowercase_identifier
program_id : program_name "." program_domain
locator : program_id "/" identifier 

%import common.WS
%ignore WS